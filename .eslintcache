[{"/home/codexive/work/demo/zeep/src/index.js":"1","/home/codexive/work/demo/zeep/src/App.js":"2","/home/codexive/work/demo/zeep/src/reportWebVitals.js":"3","/home/codexive/work/demo/zeep/src/components/ShowEmailAddress/ShowEmailAddress.js":"4","/home/codexive/work/demo/zeep/src/components/RegisterProperty/history.js":"5","/home/codexive/work/demo/zeep/src/components/Faq/Faq.js":"6","/home/codexive/work/demo/zeep/src/components/NotFound/NotFound.js":"7","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/AdminLogin/AdminLogin.js":"8","/home/codexive/work/demo/zeep/src/components/ResetPasswordAfterLogin/ResetPasswordAfterLogin.js":"9","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/TermsAndConditions.js":"10","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/EditFaq.js":"11","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/RegisterFaq.js":"12","/home/codexive/work/demo/zeep/src/components/Login/Login.js":"13","/home/codexive/work/demo/zeep/src/components/ChangePassword/ChangePassword.js":"14","/home/codexive/work/demo/zeep/src/components/RegisterProperty/PropertyPrice.js":"15","/home/codexive/work/demo/zeep/src/components/RegisterProperty/ContractHistory.js":"16","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/BasicSettings.js":"17","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/KakaotalkSettings.js":"18","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/ManagingMember.js":"19","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/RegisterMember.js":"20","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/ManagingManager.js":"21","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/RegisterManager.js":"22","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/EditMember.js":"23","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/SearchProperty.js":"24","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/PropertyList.js":"25","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/AssignManagerToProperty.js":"26","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/ManageFaq.js":"27","/home/codexive/work/demo/zeep/src/components/Register/Register.js":"28","/home/codexive/work/demo/zeep/src/components/LandingPage/LandingPage.js":"29","/home/codexive/work/demo/zeep/src/components/RegisterProperty/RegisterPropertyStepTwo.js":"30","/home/codexive/work/demo/zeep/src/components/FindPassword/FindPassword.js":"31","/home/codexive/work/demo/zeep/src/components/RegisterProperty/RegisterPropertyStepThree.js":"32","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/MemberSettings.js":"33","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/RegisterProperty.js":"34","/home/codexive/work/demo/zeep/src/components/RegisterProperty/PropertyConfirmContract.js":"35","/home/codexive/work/demo/zeep/src/components/RegisterProperty/PropertyProcessing.js":"36","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/EditPropertyById.js":"37","/home/codexive/work/demo/zeep/src/components/RegisterProperty/RegisterProperty.js":"38","/home/codexive/work/demo/zeep/src/components/WithoutAuthHeaderFooter/WithoutAuthHeader.js":"39","/home/codexive/work/demo/zeep/src/components/WithoutAuthHeaderFooter/WithoutAuthFooter.js":"40","/home/codexive/work/demo/zeep/src/components/WithoutAuthHeaderFooter/LoginFormFooter.js":"41","/home/codexive/work/demo/zeep/src/components/services/axios-url.js":"42","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithoutAuthHeaderFooter/WithoutAuthHeader.js":"43","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithoutAuthHeaderFooter/WithoutAuthFooter.js":"44","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/faq-settings-aside.js":"45","/home/codexive/work/demo/zeep/src/components/WithAuthHeaderFooter/WithAuthFooter.js":"46","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithAuthHeaderFooter/WithAuthFooter.js":"47","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithAuthHeaderFooter/TopNav.js":"48","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/property-settings-aside.js":"49","/home/codexive/work/demo/zeep/src/components/WithAuthHeaderFooter/WithAuthHeader.js":"50","/home/codexive/work/demo/zeep/src/components/RegisterProperty/EmptyPhase.jsx":"51","/home/codexive/work/demo/zeep/src/components/RegisterProperty/UploadImage.js":"52","/home/codexive/work/demo/zeep/src/components/common/MobileNumericInput.js":"53","/home/codexive/work/demo/zeep/src/util/Util.js":"54","/home/codexive/work/demo/zeep/src/components/RegisterProperty/KakaoMap.jsx":"55","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/member-settings-aside.js":"56","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/basic-settings-aside.js":"57","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/RedirectIfNotAuthenticated/RedirectIfNotAuthenticated.js":"58"},{"size":500,"mtime":1618915023113,"results":"59","hashOfConfig":"60"},{"size":8157,"mtime":1619248556052,"results":"61","hashOfConfig":"60"},{"size":362,"mtime":1618915023113,"results":"62","hashOfConfig":"60"},{"size":3734,"mtime":1618915023101,"results":"63","hashOfConfig":"60"},{"size":88,"mtime":1618915023101,"results":"64","hashOfConfig":"60"},{"size":3616,"mtime":1618915023101,"results":"65","hashOfConfig":"60"},{"size":539,"mtime":1618915023101,"results":"66","hashOfConfig":"60"},{"size":5009,"mtime":1621414184337,"results":"67","hashOfConfig":"60"},{"size":7462,"mtime":1618915023101,"results":"68","hashOfConfig":"60"},{"size":7203,"mtime":1618915023105,"results":"69","hashOfConfig":"60"},{"size":7208,"mtime":1618915023105,"results":"70","hashOfConfig":"60"},{"size":7377,"mtime":1618915023105,"results":"71","hashOfConfig":"60"},{"size":10889,"mtime":1618915023101,"results":"72","hashOfConfig":"60"},{"size":9090,"mtime":1618915023101,"results":"73","hashOfConfig":"60"},{"size":11093,"mtime":1618915023101,"results":"74","hashOfConfig":"60"},{"size":9076,"mtime":1618915023101,"results":"75","hashOfConfig":"60"},{"size":13820,"mtime":1618915023105,"results":"76","hashOfConfig":"60"},{"size":10761,"mtime":1618915023105,"results":"77","hashOfConfig":"60"},{"size":10649,"mtime":1618915023105,"results":"78","hashOfConfig":"60"},{"size":13726,"mtime":1618915023105,"results":"79","hashOfConfig":"60"},{"size":14292,"mtime":1618915023105,"results":"80","hashOfConfig":"60"},{"size":13020,"mtime":1618915023105,"results":"81","hashOfConfig":"60"},{"size":14677,"mtime":1618915023105,"results":"82","hashOfConfig":"60"},{"size":16359,"mtime":1618915023105,"results":"83","hashOfConfig":"60"},{"size":14377,"mtime":1618915023105,"results":"84","hashOfConfig":"60"},{"size":12176,"mtime":1618915023105,"results":"85","hashOfConfig":"60"},{"size":9761,"mtime":1618915023105,"results":"86","hashOfConfig":"60"},{"size":20476,"mtime":1618915023101,"results":"87","hashOfConfig":"60"},{"size":23929,"mtime":1618915023101,"results":"88","hashOfConfig":"60"},{"size":16829,"mtime":1618915023101,"results":"89","hashOfConfig":"60"},{"size":19264,"mtime":1618915023101,"results":"90","hashOfConfig":"60"},{"size":22830,"mtime":1618915023101,"results":"91","hashOfConfig":"60"},{"size":17962,"mtime":1618915023105,"results":"92","hashOfConfig":"60"},{"size":31414,"mtime":1618915023105,"results":"93","hashOfConfig":"60"},{"size":39050,"mtime":1618915023101,"results":"94","hashOfConfig":"60"},{"size":43023,"mtime":1618915023101,"results":"95","hashOfConfig":"60"},{"size":45457,"mtime":1618915023105,"results":"96","hashOfConfig":"60"},{"size":72396,"mtime":1618915023101,"results":"97","hashOfConfig":"60"},{"size":5308,"mtime":1618915023101,"results":"98","hashOfConfig":"60"},{"size":432,"mtime":1618915023101,"results":"99","hashOfConfig":"60"},{"size":1506,"mtime":1618915023101,"results":"100","hashOfConfig":"60"},{"size":360,"mtime":1618915023113,"results":"101","hashOfConfig":"60"},{"size":346,"mtime":1618915023105,"results":"102","hashOfConfig":"60"},{"size":437,"mtime":1618915023105,"results":"103","hashOfConfig":"60"},{"size":1823,"mtime":1618915023105,"results":"104","hashOfConfig":"60"},{"size":12917,"mtime":1618915023101,"results":"105","hashOfConfig":"60"},{"size":535,"mtime":1618915023105,"results":"106","hashOfConfig":"60"},{"size":7661,"mtime":1618915023105,"results":"107","hashOfConfig":"60"},{"size":1878,"mtime":1618915023105,"results":"108","hashOfConfig":"60"},{"size":30199,"mtime":1621488555920,"results":"109","hashOfConfig":"60"},{"size":343,"mtime":1618915023101,"results":"110","hashOfConfig":"60"},{"size":1087,"mtime":1618915023101,"results":"111","hashOfConfig":"60"},{"size":1645,"mtime":1618915023105,"results":"112","hashOfConfig":"60"},{"size":553,"mtime":1618915023113,"results":"113","hashOfConfig":"60"},{"size":2895,"mtime":1618915023101,"results":"114","hashOfConfig":"60"},{"size":2382,"mtime":1618915023105,"results":"115","hashOfConfig":"60"},{"size":1796,"mtime":1618915023105,"results":"116","hashOfConfig":"60"},{"size":696,"mtime":1618915023105,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"10hefpq",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"120"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"120"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"120"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/home/codexive/work/demo/zeep/src/index.js",[],["274","275"],"/home/codexive/work/demo/zeep/src/App.js",[],"/home/codexive/work/demo/zeep/src/reportWebVitals.js",[],"/home/codexive/work/demo/zeep/src/components/ShowEmailAddress/ShowEmailAddress.js",["276","277","278","279","280","281","282","283"],"import React, { Component } from \"react\";\n\nimport { Layout, Form, Input, Button, Checkbox, Divider } from \"antd\";\n\nimport \"../css/global.css\";\nimport \"antd/dist/antd.css\";\nimport \"./showemailaddress.css\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\nimport LoginFormFooter from \"../WithoutAuthHeaderFooter/LoginFormFooter\";\nimport history from \"../RegisterProperty/history\";\nconst { Content } = Layout;\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass ShowEmailAddress extends Component {\n  state = {\n    email: \"\",\n  };\n\n  componentDidMount(props) {\n    if (this.props.location.state.userEmail != \"undefined\") {\n      console.log(\"property_id\", this.props.location.state.userEmail);\n      this.setState({\n        email: this.props.location.state.userEmail,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Layout className=\"login-bg cs-show-email\">\n        <WithoutAuthHeader />\n\n        <Content className=\"login-content cs-content-wrapper\">\n          <Row className=\"cs-form-outer\">\n            <div className=\"cs-back-btn\">\n              <Button\n                type=\"default\"\n                icon={<ArrowLeftOutlined />}\n                size=\"large\"\n                shape=\"circle\"\n                onClick={GoBack}\n              />\n            </div>\n\n            <div className=\"form2-main\">\n              <h1 className=\"cs-form2-title\">\n              고객님의 이메일정보입니다.\n                <br />\n                로그인 해주세요!\n              </h1>\n\n              <p className=\"cs-email-value\">\n                {this.state.email ? this.state.email : \"-\"}\n              </p>\n\n              <Button\n                block\n                type=\"primary\"\n                shape=\"round\"\n                htmlType=\"submit\"\n                className=\"login-btn-bg cs-form2-btn\"\n                onClick={() => history.push(\"/login\")}\n              >\n                로그인하기\n              </Button>\n\n              {/* <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                        >\n                        <Form.Item\n                            label=\"\"\n                            name=\"mobile_number\"\n                            rules={[{ required: true, message: '핸드폰 번호를 입력해 주세요!' }]}\n\n                        >\n                            <Input placeholder=\"Mobile Number\" className=\"login-input\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"\"\n                            name=\"verify_number\"\n                            rules={[{ required: true, message: '인증번호를 입력해 주세요!' }]}\n                        >\n                            <Input placeholder=\"Verify Number\" className=\"login-input\" />\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <Button block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\n                            Find Password\n                            </Button>\n                        </Form.Item>\n                    </Form> */}\n\n              {/* <LoginFormFooter /> */}\n            </div>\n          </Row>\n        </Content>\n\n        <WithoutAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ShowEmailAddress;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/history.js",[],"/home/codexive/work/demo/zeep/src/components/Faq/Faq.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  Steps,\n  Radio,\n  Select,\n  Tag,\n  DatePicker,\n  Upload,\n  message,\n  Card,\n  Collapse,\n} from \"antd\";\n\nimport {\n  UploadOutlined,\n  SearchOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n// import './register-property.css';\nimport \"../css/global.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nconst axios = require(\"axios\");\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Step } = Steps;\nconst { Panel } = Collapse;\n\nclass Faq extends Component {\n  state = {\n    allData: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllFAQ\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data;\n\n          // console.log(AllData)\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              question: AllData[i].question,\n              answer: AllData[i].answer,\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const { allData } = this.state;\n\n    return (\n      <Layout className=\"register-property-layout\">\n        <WithAuthHeader />\n\n        <Content style={{ minHeight: \"500px\" }}>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"cs-main-block\">\n                    <Row>\n                      <Col className=\"text-center mb-15\" span={24}>\n                        <h2 class=\"cs-h2 cs-faq-title\">자주묻는 질문</h2>\n                      </Col>\n                      <Col span={24}>\n                        <Collapse\n                          accordion\n                          expandIconPosition=\"right\"\n                          className=\"faq-collapse\"\n                        >\n                          {allData.map((data, i) => {\n                            {\n                              var a = i + 1;\n                            }\n                            return (\n                              <Panel\n                                header={\"Q\" + a + \". \" + data.question}\n                                key={i}\n                              >\n                                {\" \"}\n                                {data.answer}{\" \"}\n                              </Panel>\n                            );\n                          })}\n                        </Collapse>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default Faq;\n","/home/codexive/work/demo/zeep/src/components/NotFound/NotFound.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/AdminLogin/AdminLogin.js",["310","311","312","313","314","315","316","317","318","319","320","321"],"import React, { Component } from \"react\";\n\nimport { Layout, Form, Input, Button, message } from \"antd\";\n\nimport \"../css/login.css\";\nimport \"antd/dist/antd.css\";\nimport \"./adminlogin.css\";\nimport { Row, Col } from \"antd\";\n\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\nimport BaseUrl from \"../../services/axios-url\";\nimport Cookies from \"universal-cookie\";\nimport logo from \"../../images/admin-portal-logo.png\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 24 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass AdminLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    const cookies = new Cookies();\n\n    // if (cookies.get(\"SXNBdXRob3JpemVkQWRtaW4aS\") == \"SXRzVHJ1ZQSaA\") {\n    //   // console.log('encodedStringtrue')\n    //   this.props.history.push(\"/basic-settings\");\n    // }\n  }\n\n  state = {\n    loading: false,\n  };\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    // const data = new FormData()\n    // data.append('email', values.email)\n    // data.append('password', values.password)\n\n    axios\n      .post(BaseUrl + \"/adminapi/login\", {\n        // axios.post(\"https://zeepsapis.herokuapp.com/adminapi/login\", {\n        email: values.email,\n        password: values.password,\n      })\n      .then((res) => {\n        console.log(res);\n\n        this.setState({ loading: true });\n\n        // console.log(cookiess.get('QXV0aA'))\n\n        if (res.data.status == 0 || res.data.status == \"0\") {\n          message.error(\"잘못된 비밀번호입니다.\");\n          return;\n        }\n\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          message.success(\"로그인 되었습니다.\");\n          // const cookiess = new Cookies();\n\n          var name = window.btoa(\"IsAuthorizedAdmin\");\n          var value = window.btoa(\"ItsTrue\");\n          var cookName = name.replace(\"=\", \"aS\");\n          var valueName = value.replace(\"==\", \"SaA\");\n\n          // cookiess.set(cookName, valueName, { path: \"/\" });\n\n          // if (cookiess.get(\"SXNBdXRob3JpemVkQWRtaW4aS\") == \"SXRzVHJ1ZQSaA\") {\n          //   console.log(\"okoko\");\n          // }\n\n          this.props.history.push(\"/basic-settings\");\n        }\n      });\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <Layout className=\"login-bg cs-form2 cs-admin-login\">\n        <WithoutAuthHeader />\n\n        <Content className=\"login-content cs-content-wrapper\">\n          <Row>\n            {/* <Col xs={{ span: 24 }} sm={{ span:12, offset:6 }} lg={{ span: 2, offset: 6 }} >\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\n                            \n                        </Col> */}\n\n            <div className=\"form2-main\">\n              {/* <h1 className=\"text-white\">Zeeps</h1> */}\n              <img src={logo} className=\"cs-site-logo\" />\n\n              <h3 className=\"cs-aform-title\">관리자 로그인</h3>\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"\"\n                  name=\"email\"\n                  rules={[\n                    { required: true, message: \"이메일을 입력해 주세요!\" },\n                  ]}\n                >\n                  <Input\n                    placeholder=\"이메일을 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"\"\n                  name=\"password\"\n                  rules={[\n                    { required: true, message: \"비밀번호를 입력해 주세요!\" },\n                  ]}\n                >\n                  <Input.Password\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                  <Button\n                    block\n                    type=\"primary\"\n                    shape=\"round\"\n                    htmlType=\"submit\"\n                    className=\"login-btn-bg cs-form2-btn\"\n                  >\n                    로그인하기\n                  </Button>\n                </Form.Item>\n              </Form>\n              {/* <LoginFormFooter /> */}\n            </div>\n          </Row>\n        </Content>\n\n        {/* <WithoutAuthFooter /> */}\n      </Layout>\n    );\n  }\n}\n\nexport default AdminLogin;\n","/home/codexive/work/demo/zeep/src/components/ResetPasswordAfterLogin/ResetPasswordAfterLogin.js",["322","323","324","325","326","327","328","329"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Menu,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Steps,\n  message,\n} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"../css/global.css\";\nimport \"./Resetpassword.css\";\nimport { Redirect } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\n// import coloredLogo from '../images/color-logo.svg';\nimport logoRound from \"../images/logo-round.svg\";\n\nconst axios = require(\"axios\");\nconst { Content } = Layout;\n\nclass ResetPasswordAfterLogin extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    redirectToLoginPage: false,\n    username: \"\",\n  };\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    this.setState({ loading: true });\n\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    // console.log('encodedStringBtoA', encodedStringBtoA);\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    // already logged in user\n    var LoggedInUserId = \"\";\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      if (cookies.get(\"UU\")) {\n        var LoggedInUserId = cookies.get(\"UU\");\n      } else {\n        message.error(\"확인이 되지 않은 회원입니다.\");\n        return;\n      }\n    }\n    // Not logged in user\n    else if (\n      cookies.get(finalCookieName) == undefined ||\n      cookies.get(finalCookieName) == \"undefined\"\n    ) {\n      message.error(\"비밀번호 변경을 위해 로그인 해주세요.\");\n      return;\n    }\n    // Not a normal user\n    else {\n      message.error(\"로그인 해주세요.\");\n      return;\n    }\n\n    axios\n      .post(BaseUrl + \"/memberapi/ChangePassword\", {\n        id: LoggedInUserId,\n        oldpassword: values.old_password,\n        password: values.password,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"비밀번호가 변경되었습니다.\");\n\n          cookies.remove(finalCookieName);\n          cookies.remove(\"UU\");\n          cookies.remove(\"UN\");\n\n          this.setState({ redirectToLoginPage: true });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n  componentDidMount() {\n    const cookies = new Cookies();\n    this.setState({\n      username: cookies.get(\"UN\"),\n    });\n  }\n\n  render() {\n    if (this.state.redirectToLoginPage) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n          }}\n        />\n      );\n    }\n\n    const { loading, username } = this.state;\n\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n      <Layout className=\"register-property-layout\">\n        <WithAuthHeader />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"text-center cs-main-block\">\n                    <Row>\n                      <Col className=\" mb-15\" span={24}>\n                        <img\n                          src={logoRound}\n                          width=\"90\"\n                          className=\"csd-round-logo\"\n                        />\n                      </Col>\n\n                      <Col className=\"cs-username-p mb-15\" span={24}>\n                        {username}\n                      </Col>\n                    </Row>\n\n                    <Form\n                      // {...layout}\n                      name=\"basic\"\n                      initialValues={{ remember: true }}\n                      onFinish={this.onFinish}\n                      className=\"manage-password-form\"\n                      onFinishFailed={onFinishFailed}\n                    >\n                      <Divider />\n                      <Form.Item\n                        className=\"text-left mb-15\"\n                        label=\"\"\n                        name=\"old_password\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"이전 비밀번호를 입력해주세요\",\n                          },\n                        ]}\n                      >\n                        <Input.Password placeholder=\"현재 비밀번호를 입력해주세요.\" />\n                      </Form.Item>\n\n                      <Form.Item\n                        className=\"text-left mb-15\"\n                        label=\"\"\n                        name=\"password\"\n                        rules={[\n                          {\n                            required: true,\n                            message: \"새로운 비밀번호를 입력해주세요\",\n                          },\n                        ]}\n                      >\n                        <Input.Password placeholder=\"새 비밀번호를 입력해주세요.\" />\n                      </Form.Item>\n\n                      <Form.Item\n                        className=\"text-left mb-15\"\n                        name=\"confirm\"\n                        label=\"\"\n                        dependencies={[\"password\"]}\n                        hasFeedback\n                        rules={[\n                          {\n                            required: true,\n                            message: \"새로운 비밀번호를 확인해주세요\",\n                          },\n                          ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                              if (\n                                !value ||\n                                getFieldValue(\"password\") === value\n                              ) {\n                                return Promise.resolve();\n                              }\n                              return Promise.reject(\n                                \"비밀번호가 일치하지 않습니다!\"\n                              );\n                            },\n                          }),\n                        ]}\n                      >\n                        <Input.Password placeholder=\"새 비밀번호를 확인해주세요.\" />\n                      </Form.Item>\n\n                      <Divider />\n                      <Button\n                        loading={loading}\n                        block\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"theme-btn cs-submit-button\"\n                      >\n                        정보 변경하기\n                      </Button>\n                    </Form>\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ResetPasswordAfterLogin;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/TermsAndConditions.js",["330","331","332","333","334","335","336","337","338","339","340"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport BasicSettingsAside from \"./basic-settings-aside\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { offset: 0, span: 20 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass TermsAndConditions extends Component {\n  state = { size: \"large\" };\n\n  formRef = React.createRef();\n\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/adminapi/GetCompanyAgreementdetail/1\")\n      .then((response) => {\n        console.log(\"data->\", response.data.data);\n\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          this.formRef.current.setFieldsValue({\n            terms_and_conditions: response.data.data.termsOfService,\n            aggreement: response.data.data.thirdPartyOffer,\n            event_news: response.data.data.eventNews,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    axios\n      .post(BaseUrl + \"/adminapi/UpdateAgreementContents\", {\n        id: 1,\n        termsOfService: values.terms_and_conditions,\n        thirdPartyOffer: values.aggreement,\n        eventNews: values.event_news,\n      })\n      .then((res) => {\n        // console.log(res)\n        if (res.data.status == 1) {\n          message.success(\"업데이트가 되었습니다.\");\n        }\n      });\n  };\n\n  render() {\n    const { size } = this.state;\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <BasicSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    <p className=\"m-0\">약관∙개인정보 처리방침</p>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button\"\n                    xs={{ span: 4 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        htmlType=\"submit\"\n                        shape=\"round\"\n                        size={size}\n                      >\n                        저장\n                      </Button>\n                    </Form.Item>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n                  <Col className=\"cs-admin-company\" span={24}>\n                    약관∙개인정보 처리방침 문구 설정\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Row>\n                      <Col\n                        xs={{ span: 6 }}\n                        sm={{ span: 6 }}\n                        lg={{ span: 6 }}\n                      ></Col>\n                      <Col\n                        xs={{ span: 18 }}\n                        sm={{ span: 18 }}\n                        lg={{ span: 18 }}\n                        className=\"cs-admin-terms-des\"\n                      ></Col>\n                    </Row>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"이용약관∙개인정보 동의 내용\"\n                      className=\"m-0\"\n                      name=\"terms_and_conditions\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"이용및 개인정보를 확인해주세요\",\n                        },\n                      ]}\n                    >\n                      {/* <div class=\"cs-admin-terms-des\"><p>표준약관 - 표준약관 제 10023호</p></div> */}\n                      <Input.TextArea rows={8} className=\"cs-ml20\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"제3자 정보 제공 동의 내용\"\n                      name=\"aggreement\"\n                      type=\"email\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"동의사항을 확인해주세요\",\n                        },\n                      ]}\n                    >\n                      <Input.TextArea rows={8} className=\"cs-ml20\"/>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"혜택성 정보 수신 동의 내용\"\n                      name=\"event_news\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"혜택성 정보수신동의내용을 입력해주세요\",\n                        },\n                      ]}\n                    >\n                      <Input.TextArea rows={8} className=\"cs-ml20\" />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default TermsAndConditions;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/EditFaq.js",["341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  Select,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport FaqSettingsAside from \"./faq-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\nconst { TextArea } = Input;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\nconst { Option } = Select;\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"Number\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"Content\",\n    dataIndex: \"content\",\n  },\n  {\n    title: \"Setting\",\n    dataIndex: \"setting\",\n    render: () => (\n      <Button className=\"theme-btn-default \">\n        <Link to=\"#\">faq</Link>\n      </Button>\n    ),\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    number: \"1\",\n    content: \"Lorem ipsum\",\n    setting: \"edit\",\n  },\n  {\n    key: \"2\",\n    number: \"2\",\n    content: \"Lorem ipsum\",\n    setting: \"edit\",\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\nfunction handleSelectChange(value) {\n  console.log(`selected ${value}`);\n}\n\nclass EditFaq extends Component {\n  state = {\n    loading: false,\n  };\n\n  formRef = React.createRef();\n\n  componentDidMount() {\n    // console.log(window.location.pathname.split(\"/\").pop())\n    var faqId = window.location.pathname.split(\"/\").pop();\n\n    axios\n      .get(BaseUrl + \"/adminapi/GetFAQdetail/\" + faqId)\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data;\n\n          console.log(AllData);\n\n          this.formRef.current.setFieldsValue({\n            faq_question: AllData.question,\n            faq_answer: AllData.answer,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n    this.setState({ loading: true });\n\n    axios\n      .post(BaseUrl + \"/adminapi/UpdateFAQ\", {\n        id: window.location.pathname.split(\"/\").pop(),\n        question: values.faq_question,\n        answer: values.faq_answer,\n      })\n      .then((res) => {\n        // console.log(res)\n        if (res.data.status == 1) {\n          message.success(\"업데이트가 되었습니다.\");\n          GoBack();\n          // this.formRef.current.resetFields();\n        } else {\n          message.success(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <FaqSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    <p className=\"m-0\">기본정보 설정</p>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button edit-faq-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Button\n                      loading={loading}\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      저장\n                    </Button>\n\n                    {/*  \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col\n                    className=\"cs-admin-company cs-admin-faq-title\"\n                    span={24}\n                  >\n                    FAQ 등록\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"FAQ 질문\"\n                      name=\"faq_question\"\n                      rules={[{ required: true, message: '질문을 입력해주세요' }]}\n                    >\n                      <Input.TextArea rows={8} />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"FAQ 답변\"\n                      name=\"faq_answer\"\n                      rules={[{ required: true, message: '답변을 입력해주세요' }]}\n                    >\n                      <Input.TextArea rows={8} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default EditFaq;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/RegisterFaq.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  Select,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport FaqSettingsAside from \"./faq-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\nconst { TextArea } = Input;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\nconst { Option } = Select;\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"Number\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"Content\",\n    dataIndex: \"content\",\n  },\n  {\n    title: \"Setting\",\n    dataIndex: \"setting\",\n    render: () => (\n      <Button className=\"theme-btn-default \">\n        <Link to=\"#\">faq</Link>\n      </Button>\n    ),\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    number: \"1\",\n    content: \"Lorem ipsum\",\n    setting: \"edit\",\n  },\n  {\n    key: \"2\",\n    number: \"2\",\n    content: \"Lorem ipsum\",\n    setting: \"edit\",\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\nfunction handleSelectChange(value) {\n  console.log(`selected ${value}`);\n}\n\nclass RegisterFaq extends Component {\n  state = {\n    loading: false,\n    size: \"large\",\n  };\n\n  formRef = React.createRef();\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n    this.setState({ loading: true });\n\n    axios\n      .post(BaseUrl + \"/adminapi/InsertFAQ\", {\n        question: values.faq_question,\n        answer: values.faq_answer,\n      })\n      .then((res) => {\n        // console.log(res)\n        if (res.data.status == 1) {\n          message.success(\"입력 되었습니다.\");\n          GoBack();\n          // this.formRef.current.resetFields();\n        } else {\n          message.success(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    const { loading, size } = this.state;\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <FaqSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    xs={{ span: 20 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                    className=\"flex-center cs-admin-basic-info\"\n                  >\n                    <p className=\"m-0\">FAQ 관리 </p>\n                  </Col>\n                  <Col\n                    className=\"flex-center cs-admin-basic-info-button\"\n                    xs={{ span: 4 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item>\n                      <Button\n                        loading={loading}\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        shape=\"round\"\n                        htmlType=\"submit\"\n                        size={size}\n                      >\n                        FAQ 저장\n                      </Button>\n                    </Form.Item>\n\n                    {/*  \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col\n                    className=\"cs-admin-company cs-admin-faq-title\"\n                    span={24}\n                  >\n                    FAQ 등록\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"FAQ 질문\"\n                      className=\"m-0\"\n                      name=\"faq_question\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"질문을 입력해주세요\",\n                        },\n                      ]}\n                    >\n                      <Input.TextArea\n                        rows={8}\n                        placeholder=\"Q1. 집스는 어떤 서비스인가요?\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-terms\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"FAQ 답변\"\n                      className=\"m-0\"\n                      name=\"faq_answer\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"답변을 입력해주세요\",\n                        },\n                      ]}\n                    >\n                      <Input.TextArea\n                        rows={8}\n                        placeholder=\"수수료 없이 쉽고 간편하게 매물을 등록하고 계약할 수 있는 \n초간편 서비스입니다! :)\n\n장점1\n임대인 중개수수료가 완전 무료에요!\n장점2\n고객님의 법률 서비스가 완전 무료에요!\n장점3\n중개 정보를 실시간으로 알려드려요!\n장점4\n집 내놓기가 정말 간편해졌어요!\"\n                      />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterFaq;\n","/home/codexive/work/demo/zeep/src/components/Login/Login.js",["381","382","383","384","385","386","387"],"import React, { Component } from \"react\";\n\nimport { Layout, Form, Input, Button, message } from \"antd\";\n\nimport \"../css/global.css\";\nimport \"antd/dist/antd.css\";\n// import { Link } from 'react-router-dom';\nimport { Row, Col } from \"antd\";\n// import { ArrowLeftOutlined } from '@ant-design/icons';\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\nimport LoginFormFooter from \"../WithoutAuthHeaderFooter/LoginFormFooter\";\n\nimport BaseUrl from \"../services/axios-url\";\nimport Cookies from \"universal-cookie\";\nimport Base from \"antd/lib/typography/Base\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 24 },\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    // console.log('encodedStringBtoA', encodedStringBtoA);\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    // cookies.set(finalCookieName, finalCookieValue, { path: '/' });\n\n    // get the cookie\n\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      message.warning(\"이미 로그인 되어 있습니다.\");\n      this.props.history.push(\"/register-property\");\n    }\n  }\n\n  state = { loading: \"\" };\n\n  onFinish = (values) => {\n    // console.log('Success:', values);\n\n    this.setState({ loading: true });\n\n    axios\n      .post(BaseUrl + \"/memberapi/MemberLogin \", {\n        email: values.email,\n        password: values.password,\n      })\n      .then((res) => {\n        console.log(res.data.message);\n        this.setState({ allData: \"\" });\n\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          message.success(\"로그인 되었습니다.\");\n\n          const cookies = new Cookies();\n          var cookieName = btoa(\"zeeps\");\n          // console.log('encodedStringBtoA', cookieName);\n          var finalCookieName = \"\";\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n          var encodedStringBtoA = btoa(\"authorized\");\n          // console.log('encodedStringBtoA', encodedStringBtoA);\n          var finalCookieValue = \"\";\n          finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n          cookies.set(finalCookieName, finalCookieValue, { path: \"/\" });\n\n          // cookies.set('Zeeps', encodedStringBtoA, { path: '/' });\n          // User Id----------------------\n          // var userId = btoa(res.data.id);\n          var userId = res.data.data.id;\n          cookies.set(\"UU\", userId, { path: \"/\" });\n\n          // User Name\n          var userName = res.data.data.name.replace(\" \", \"-\");\n          cookies.set(\"UN\", userName, { path: \"/\" });\n\n          this.props.history.push(\"/\");\n        } else {\n          this.setState({ loading: false });\n          message.error(res.data.message);\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Layout className=\"login-bg cs-form2 \">\n        <WithoutAuthHeader />\n\n        <Content className=\"login-content cs-content-wrapper\">\n          {/* <Col xs={{ span: 24 }} sm={{ span:12, offset:6 }} lg={{ span: 2, offset: 6 }} >\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\n                            \n                        </Col> */}\n\n          <div>\n            <div className=\"form2-main\">\n              <div className=\"cs-form2-title-wrapper\">\n                <svg\n                  width=\"90\"\n                  height=\"50\"\n                  viewBox=\"0 0 90 50\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M17.0322 38.955L24.9821 27.8823V27.8003H17.4965V24.1094H30.8556V27.6089L22.8784 38.7088V38.7909H30.8283V42.4818H17.0322V38.955Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M35.6432 33.9796H39.9051C39.9051 31.9293 39.2219 31.1911 37.856 31.1911C36.8179 31.1911 35.8344 31.7925 35.6432 33.9796ZM30.9443 35.5653V35.21C30.9443 30.8629 33.6488 28.1289 37.856 28.1289C42.5822 28.1289 44.358 30.781 44.358 35.4014V36.6042H35.6705C35.9437 38.819 37.2004 39.4476 39.5771 39.4476C41.2435 39.4476 42.6916 39.0375 43.7842 38.6001V41.4706C42.7188 42.0996 40.9703 42.7284 38.3751 42.7284C33.3756 42.7284 30.9443 40.2132 30.9443 35.5653Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M49.8116 33.9796H54.0733C54.0733 31.9293 53.3904 31.1911 52.0245 31.1911C50.9865 31.1911 50.0029 31.7925 49.8116 33.9796ZM45.1128 35.5653V35.21C45.1128 30.8629 47.8173 28.1289 52.0245 28.1289C56.7508 28.1289 58.5265 30.781 58.5265 35.4014V36.6042H49.8391C50.1123 38.819 51.3689 39.4476 53.7455 39.4476C55.4122 39.4476 56.8598 39.0375 57.9527 38.6001V41.4706C56.8873 42.0996 55.1388 42.7284 52.5436 42.7284C47.5441 42.7284 45.1128 40.2132 45.1128 35.5653Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M69.411 35.784V35.3465C69.411 32.4212 68.5093 31.7103 66.9249 31.7103C65.9689 31.7103 65.2312 31.9838 64.8213 32.2572V39.0374C65.2312 39.3109 65.9689 39.5569 66.761 39.5569C68.4276 39.5569 69.411 38.8189 69.411 35.784ZM60.1772 28.4022H64.6575V29.578H64.794C65.7228 28.6756 66.9797 28.1562 68.8646 28.1562C71.5964 28.1562 74.1646 29.7692 74.1646 34.9091V35.2372C74.1646 40.7871 71.5146 42.7282 67.6626 42.7282C66.242 42.7282 65.3404 42.455 64.8213 42.2361V46.5831H60.1772V28.4022Z\"\n                    fill=\"white\"\n                  />\n                  <mask\n                    id=\"mask0\"\n                    mask-type=\"alpha\"\n                    maskUnits=\"userSpaceOnUse\"\n                    x=\"75\"\n                    y=\"28\"\n                    width=\"12\"\n                    height=\"15\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M75.3237 28.1289H86.4154V42.7283H75.3237V28.1289Z\"\n                      fill=\"white\"\n                    />\n                  </mask>\n                  <g mask=\"url(#mask0)\">\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M75.4059 41.7987V38.6819C76.4984 39.0922 77.6734 39.5024 79.5856 39.5024C81.2793 39.5024 81.9622 39.0922 81.9622 38.3266C81.9622 37.6431 81.5523 37.3972 80.3503 37.2603L79.0666 37.0691C76.6623 36.7138 75.3237 35.4013 75.3237 32.6673C75.3237 29.8514 77.1814 28.1289 81.088 28.1289C83.1095 28.1289 84.4757 28.4023 85.5412 28.8671V31.9564C84.6397 31.6832 83.3556 31.3277 81.6892 31.3277C80.296 31.3277 79.6401 31.6832 79.6401 32.4213C79.6401 33.1047 80.132 33.3509 81.252 33.5149L82.5634 33.6789C85.4044 34.0616 86.4155 35.5927 86.4155 38.0259C86.4155 41.1152 84.4757 42.7283 80.2685 42.7283C78.3836 42.7283 76.5258 42.3728 75.4059 41.7987Z\"\n                      fill=\"white\"\n                    />\n                  </g>\n                  <mask\n                    id=\"mask1\"\n                    mask-type=\"alpha\"\n                    maskUnits=\"userSpaceOnUse\"\n                    x=\"2\"\n                    y=\"3\"\n                    width=\"41\"\n                    height=\"40\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M2 3.10156H42.4811V42.4729H2V3.10156Z\"\n                      fill=\"white\"\n                    />\n                  </mask>\n                  <g mask=\"url(#mask1)\">\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M42.4811 14.5491L22.2486 3.10156L2 14.5491V42.4729H13.6992V36.176H8.02327V18.7701L22.2469 10.8622L27.8278 13.793L36.4579 18.3254V22.0811H42.4811V14.5491Z\"\n                      fill=\"white\"\n                    />\n                  </g>\n                </svg>\n\n                <h1 className=\"cs-form2-title cs-title1\">사이트에 오신걸 </h1>\n              </div>\n              <h1 className=\"cs-form2-title\">환영합니다!</h1>\n\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={this.onFinishFailed}\n              >\n                <Form.Item\n                  label=\"\"\n                  name=\"email\"\n                  rules={[\n                    { required: true, message: \"이메일을 입력해주세요!\" },\n                  ]}\n                >\n                  <Input\n                    placeholder=\"이메일을 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"\"\n                  name=\"password\"\n                  rules={[\n                    { required: true, message: \"비밀번호를 입력해 주세요!\" },\n                  ]}\n                >\n                  <Input.Password\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                  <Button\n                    loading={loading}\n                    block\n                    type=\"primary\"\n                    shape=\"round\"\n                    htmlType=\"submit\"\n                    className=\"login-btn-bg cs-form2-btn\"\n                  >\n                    로그인하기\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n            <LoginFormFooter />\n          </div>\n        </Content>\n\n        <WithoutAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default Login;\n","/home/codexive/work/demo/zeep/src/components/ChangePassword/ChangePassword.js",["388","389","390","391"],"import React, { Component } from 'react';\n\nimport { \n    Layout, Form, Input, Button, message \n} from 'antd';\n\nimport '../css/global.css';\nimport 'antd/dist/antd.css';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\n\nimport { Redirect } from 'react-router-dom';\nimport { Row, Col } from 'antd';\nimport WithoutAuthHeader from '../WithoutAuthHeaderFooter/WithoutAuthHeader';\nimport WithoutAuthFooter from '../WithoutAuthHeaderFooter/WithoutAuthFooter';\nimport LoginFormFooter from '../WithoutAuthHeaderFooter/LoginFormFooter';\nimport BaseUrl from '../services/axios-url';\nconst axios = require('axios');\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 24 },\n};\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass ChangePassword extends Component {\n  state = {\n    id: \"\",\n    redirectToLoginPage: false,\n  };\n\n  componentDidMount(props) {\n    if (this.props.location.state.userId != \"undefined\") {\n      console.log(\"property_id\", this.props.location.state.userId);\n      this.setState({\n        id: this.props.location.state.userId,\n      });\n    }\n  }\n\n  onFinish = (values) => {\n    console.log(this.state.id);\n    console.log(\"Success:\", values);\n\n    axios\n      .post(BaseUrl + \"/memberapi/ResetPassword\", {\n        id: this.state.id,\n        password: values.password,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"비밀번호가 변경되었습니다.\");\n\n          this.setState({ redirectToLoginPage: true });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    console.log(this.state.id);\n    if (this.state.redirectToLoginPage) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n          }}\n        />\n      );\n    }\n    return (\n      <Layout className=\"login-bg cs-form2 cs-cpwd\">\n        <WithoutAuthHeader />\n\n        <Content className=\"login-content cs-content-wrapper\">\n          <Row className=\"cs-form-outer\">\n            <div className=\"cs-back-btn\">\n              <Button\n                type=\"default\"\n                icon={<ArrowLeftOutlined />}\n                size=\"large\"\n                shape=\"circle\"\n                onClick={GoBack}\n              />\n            </div>\n\n            <div className=\"form2-main\">\n              <div className=\"cs-form2-title-wrapper\">\n              <svg width=\"90\" height=\"50\" viewBox=\"0 0 90 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0322 38.955L24.9821 27.8823V27.8003H17.4965V24.1094H30.8556V27.6089L22.8784 38.7088V38.7909H30.8283V42.4818H17.0322V38.955Z\" fill=\"white\"/>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.6432 33.9796H39.9051C39.9051 31.9293 39.2219 31.1911 37.856 31.1911C36.8179 31.1911 35.8344 31.7925 35.6432 33.9796ZM30.9443 35.5653V35.21C30.9443 30.8629 33.6488 28.1289 37.856 28.1289C42.5822 28.1289 44.358 30.781 44.358 35.4014V36.6042H35.6705C35.9437 38.819 37.2004 39.4476 39.5771 39.4476C41.2435 39.4476 42.6916 39.0375 43.7842 38.6001V41.4706C42.7188 42.0996 40.9703 42.7284 38.3751 42.7284C33.3756 42.7284 30.9443 40.2132 30.9443 35.5653Z\" fill=\"white\"/>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.8116 33.9796H54.0733C54.0733 31.9293 53.3904 31.1911 52.0245 31.1911C50.9865 31.1911 50.0029 31.7925 49.8116 33.9796ZM45.1128 35.5653V35.21C45.1128 30.8629 47.8173 28.1289 52.0245 28.1289C56.7508 28.1289 58.5265 30.781 58.5265 35.4014V36.6042H49.8391C50.1123 38.819 51.3689 39.4476 53.7455 39.4476C55.4122 39.4476 56.8598 39.0375 57.9527 38.6001V41.4706C56.8873 42.0996 55.1388 42.7284 52.5436 42.7284C47.5441 42.7284 45.1128 40.2132 45.1128 35.5653Z\" fill=\"white\"/>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M69.411 35.784V35.3465C69.411 32.4212 68.5093 31.7103 66.9249 31.7103C65.9689 31.7103 65.2312 31.9838 64.8213 32.2572V39.0374C65.2312 39.3109 65.9689 39.5569 66.761 39.5569C68.4276 39.5569 69.411 38.8189 69.411 35.784ZM60.1772 28.4022H64.6575V29.578H64.794C65.7228 28.6756 66.9797 28.1562 68.8646 28.1562C71.5964 28.1562 74.1646 29.7692 74.1646 34.9091V35.2372C74.1646 40.7871 71.5146 42.7282 67.6626 42.7282C66.242 42.7282 65.3404 42.455 64.8213 42.2361V46.5831H60.1772V28.4022Z\" fill=\"white\"/>\n                    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"75\" y=\"28\" width=\"12\" height=\"15\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.3237 28.1289H86.4154V42.7283H75.3237V28.1289Z\" fill=\"white\"/>\n                    </mask>\n                    <g mask=\"url(#mask0)\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.4059 41.7987V38.6819C76.4984 39.0922 77.6734 39.5024 79.5856 39.5024C81.2793 39.5024 81.9622 39.0922 81.9622 38.3266C81.9622 37.6431 81.5523 37.3972 80.3503 37.2603L79.0666 37.0691C76.6623 36.7138 75.3237 35.4013 75.3237 32.6673C75.3237 29.8514 77.1814 28.1289 81.088 28.1289C83.1095 28.1289 84.4757 28.4023 85.5412 28.8671V31.9564C84.6397 31.6832 83.3556 31.3277 81.6892 31.3277C80.296 31.3277 79.6401 31.6832 79.6401 32.4213C79.6401 33.1047 80.132 33.3509 81.252 33.5149L82.5634 33.6789C85.4044 34.0616 86.4155 35.5927 86.4155 38.0259C86.4155 41.1152 84.4757 42.7283 80.2685 42.7283C78.3836 42.7283 76.5258 42.3728 75.4059 41.7987Z\" fill=\"white\"/>\n                    </g>\n                    <mask id=\"mask1\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"2\" y=\"3\" width=\"41\" height=\"40\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 3.10156H42.4811V42.4729H2V3.10156Z\" fill=\"white\"/>\n                    </mask>\n                    <g mask=\"url(#mask1)\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.4811 14.5491L22.2486 3.10156L2 14.5491V42.4729H13.6992V36.176H8.02327V18.7701L22.2469 10.8622L27.8278 13.793L36.4579 18.3254V22.0811H42.4811V14.5491Z\" fill=\"white\"/>\n                    </g>\n                </svg>\n                <h1 className=\"cs-form2-title cs-title1\">사이트에 오신걸 </h1>\n              </div>\n              <h1 className=\"cs-form2-title\">환영합니다!</h1>\n\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Col xs={24} sm={24} lg={24}>\n                  <Form.Item\n                    label=\"\"\n                    name=\"password\"\n                    rules={[\n                      { required: true, message: \"비밀번호를 입력해 주세요!\" },\n                    ]}\n                  >\n                    <Input.Password\n                      placeholder=\"새 비밀번호를 입력해주세요.\"\n                      className=\"login-input cs-input2\"\n                    />\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"confirm\"\n                    label=\"\"\n                    dependencies={[\"password\"]}\n                    hasFeedback\n                    rules={[\n                      {\n                        required: true,\n                        message: \"비밀번호를 확인해주세요\",\n                      },\n                      ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                          if (!value || getFieldValue(\"password\") === value) {\n                            return Promise.resolve();\n                          }\n                          return Promise.reject(\n                            \"비밀번호가 일치하지 않습니다!\"\n                          );\n                        },\n                      }),\n                    ]}\n                  >\n                    <Input.Password\n                      placeholder=\"새 비밀번호를 확인해주세요.\"\n                      className=\"login-input cs-input2\"\n                    />\n                  </Form.Item>\n\n                  <Form.Item {...tailLayout}>\n                    <Button\n                      block\n                      type=\"primary\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                      className=\"login-btn-bg cs-form2-btn\"\n                    >\n                      비밀번호 재설정하기\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Form>\n            </div>\n          </Row>\n        </Content>\n\n        <WithoutAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ChangePassword;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/PropertyPrice.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Button,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  message,\n  Carousel,\n  Card,\n} from \"antd\";\n\nimport {\n  DownloadOutlined,\n  CheckOutlined,\n  RightCircleOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\nimport logoRound from \"../images/logo-round.svg\";\nimport nationalLogo from \"../images/national.png\";\nimport history from \"./history\";\n\nconst axios = require(\"axios\");\nconst { Content } = Layout;\n\n// /property-detail/:id\nclass PropertyPrice extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    propertyData: [],\n  };\n\n  componentDidMount() {\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .get(`${BaseUrl}/adminapi/GetPropertyDetailById/${propertyId}`)\n      .then((res) => {\n        console.log(res.data.data);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          this.setState({\n            propertyData: res.data.data,\n          });\n        }\n      });\n  }\n\n  render() {\n    const { visible, loading, propertyData } = this.state;\n\n    return (\n      <Layout className=\"register-property-layout\">\n        <WithAuthHeader />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row>\n                  <Col className=\"cs-main-block\">\n                    <Row>\n                      <Col className=\"text-center mb-15\" span={24}>\n                        {/* <h2>Logo</h2> */}\n                        <img src={logoRound} />\n                      </Col>\n\n                      <Col className=\"text-center mb-15\" span={24}>\n                        <h2 className=\"contact-header-h2\">\n                          {propertyData.address}\n                        </h2>\n                        <svg\n                          className=\"cs-back-button\"\n                          width=\"48\"\n                          height=\"48\"\n                          viewBox=\"0 0 48 48\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          onClick={() => history.goBack()}\n                        >\n                          <path\n                            d=\"M24.0081 16.3074L32.8857 24.4003L24.0081 32.4933\"\n                            stroke=\"#44358F\"\n                            stroke-width=\"1.6\"\n                            stroke-linecap=\"round\"\n                          />\n                          <path\n                            d=\"M32.3988 24.4H13.1988\"\n                            stroke=\"#44358F\"\n                            stroke-width=\"1.6\"\n                            stroke-linecap=\"round\"\n                          />\n                          <circle\n                            r=\"23.2\"\n                            transform=\"matrix(-1 0 0 1 24 24)\"\n                            stroke=\"#44358F\"\n                            stroke-width=\"1.6\"\n                          />\n                        </svg>\n\n                        {/* <p className=\"second-primary-color contact-header-p\">\n                          {(this.props.location.state.propertyType ==\n                            \"For Sale\" ||\n                            this.props.location.state.propertyType ==\n                              \"For Sale,For Rent\") &&\n                            \"For Sale \"}\n                          {this.props.location.state.propertyCost}\n\n                          {(this.props.location.state.propertyType ==\n                            \"For Rent\" ||\n                            this.props.location.state.propertyType ==\n                              \"For Sale,For Rent\") && (\n                            <>\n                              For Rent :{this.props.location.state.propertyRent}\n                            </>\n                          )}\n                        </p> */}\n                        <div className=\"second-primary-color contact-header-p\">\n                          {(propertyData.propertyType == \"For Sale\" ||\n                            propertyData.propertyType == \"For Sale,For Rent\" ||\n                            propertyData.propertyType ==\n                              \"For Rent,For Sale\") && (\n                            <>매매 {propertyData.propertyCost}만원 </>\n                          )}\n                        </div>\n                        <div className=\"second-primary-color contact-header-p\">\n                          {(propertyData.propertyType == \"For Rent\" ||\n                            propertyData.propertyType == \"For Sale,For Rent\" ||\n                            propertyData.propertyType ==\n                              \"For Rent,For Sale\") && (\n                            <>보증금 {propertyData.propertyDeposite}만원</>\n                          )}\n                        </div>\n                        <div className=\"second-primary-color contact-header-p\">\n                          {(propertyData.propertyType == \"For Rent\" ||\n                            propertyData.propertyType == \"For Sale,For Rent\" ||\n                            propertyData.propertyType ==\n                              \"For Rent,For Sale\") && (\n                            <>월세 {propertyData.propertyRent}만원</>\n                          )}\n                        </div>\n                      </Col>\n                    </Row>\n\n                    <Divider />\n                    <Row>\n                      {\" \"}\n                      <Col className=\"text-left mb-15\" span={24}>\n                        <img src={nationalLogo} height=\"50\" />\n                      </Col>\n                      <Col span={24} className=\"text-left cs-font-28 font-bold\">\n                        <p style={{ margin: \"0\" }}>\n                          국토교통부 최근 실거래가 정보{\" \"}\n                        </p>\n                      </Col>\n                      <Space\n                        direction=\"vertical\"\n                        style={{\n                          height: \"630px\",\n                          overflow: \"auto\",\n                          width: \"100%\",\n                          marginTop: \"30px\",\n                          marginBottom: \"20px\",\n                        }}\n                        className=\"cs-address-block\"\n                      >\n                        <Col\n                          className=\"text-left cs-address-block-list\"\n                          span={24}\n                        >\n                          <Card>\n                            <p\n                              className=\"cs-font-26\"\n                              style={{\n                                lineHeight: \"28px\",\n                                marginBottom: \"30px\",\n                              }}\n                            >\n                              서울시 양천구 목동북로 12\n                              <br />\n                              i목동아파트 102동 302호{\" \"}\n                            </p>\n                            <b\n                              className=\"color-red cs-font-30\"\n                              style={{ lineHeight: \"40px\" }}\n                            >\n                              14억 3,000\n                            </b>\n                          </Card>\n                        </Col>\n                        <Col\n                          className=\"text-left cs-address-block-list\"\n                          span={24}\n                        >\n                          <Card>\n                            <p\n                              className=\"cs-font-26\"\n                              style={{\n                                lineHeight: \"28px\",\n                                marginBottom: \"30px\",\n                              }}\n                            >\n                              서울시 양천구 목동북로 12\n                              <br />\n                              i목동아파트 102동 302호{\" \"}\n                            </p>\n                            <b\n                              className=\"color-red cs-font-30\"\n                              style={{ lineHeight: \"40px\" }}\n                            >\n                              14억 3,000\n                            </b>\n                          </Card>\n                        </Col>\n                        <Col\n                          className=\"text-left cs-address-block-list\"\n                          span={24}\n                        >\n                          <Card>\n                            <p\n                              className=\"cs-font-26\"\n                              style={{\n                                lineHeight: \"28px\",\n                                marginBottom: \"30px\",\n                              }}\n                            >\n                              서울시 양천구 목동북로 12\n                              <br />\n                              i목동아파트 102동 302호{\" \"}\n                            </p>\n                            <b\n                              className=\"color-red cs-font-30\"\n                              style={{ lineHeight: \"40px\" }}\n                            >\n                              14억 3,000\n                            </b>\n                          </Card>\n                        </Col>\n                        <Col\n                          className=\"text-left cs-address-block-list\"\n                          span={24}\n                        >\n                          <Card>\n                            <p\n                              className=\"cs-font-26\"\n                              style={{\n                                lineHeight: \"28px\",\n                                marginBottom: \"30px\",\n                              }}\n                            >\n                              서울시 양천구 목동북로 12\n                              <br />\n                              i목동아파트 102동 302호{\" \"}\n                            </p>\n                            <b\n                              className=\"color-red cs-font-30\"\n                              style={{ lineHeight: \"40px\" }}\n                            >\n                              14억 3,000\n                            </b>\n                          </Card>\n                        </Col>\n                      </Space>\n                      <Divider />\n                    </Row>\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default PropertyPrice;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/ContractHistory.js",["417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Button,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  message,\n  Carousel,\n} from \"antd\";\nimport util from \"../../util/Util\";\nimport {\n  DownloadOutlined,\n  CheckOutlined,\n  RightCircleOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\nimport logoRound from \"../images/logo-round.svg\";\nimport history from \"./history\";\nimport moment from \"moment\";\nimport EmptyPhase from \"./EmptyPhase\";\n// import { PDFDownloadLink } from \"@react-pdf/renderer\";\n\nconst axios = require(\"axios\");\nconst { Content } = Layout;\n\n// /property-detail/:id\nclass ContractHistory extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    data: [],\n    propertyData: [],\n  };\n\n  componentDidMount() {\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    console.log(\"propertyId\", propertyId);\n    axios\n      .get(`${BaseUrl}/adminapi/GetAllContractsByPropertyId/${propertyId}`)\n      .then((res) => {\n        console.log(\"datadatadatadata\", res.data.data);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          this.setState({\n            data: res.data.data,\n          });\n        }\n      });\n    axios\n      .get(`${BaseUrl}/adminapi/GetPropertyDetailById/${propertyId}`)\n      .then((res) => {\n        console.log(res.data.data);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          this.setState({\n            propertyData: res.data.data,\n          });\n        }\n      });\n  }\n  render() {\n    const { visible, loading, data, propertyData } = this.state;\n    return (\n      <Layout className=\"register-property-layout\">\n        <WithAuthHeader />\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"cs-main-block\">\n                    <Row>\n                      <Col className=\"text-center mb-15\" span={24}>\n                        {/* <h2>Logo</h2> */}\n                        <img src={logoRound} />\n                      </Col>\n\n                      <Col className=\"text-center mb-15\" span={24}>\n                        <div className=\"cs-contract-title\">\n                          <h2 className=\"contact-header-h2\">\n                            {propertyData.address}\n                          </h2>\n                          <svg\n                            className=\"cs-back-button\"\n                            width=\"48\"\n                            height=\"48\"\n                            viewBox=\"0 0 48 48\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            onClick={() => history.goBack()}\n                          >\n                            <path\n                              d=\"M24.0081 16.3074L32.8857 24.4003L24.0081 32.4933\"\n                              stroke=\"#44358F\"\n                              stroke-width=\"1.6\"\n                              stroke-linecap=\"round\"\n                            />\n                            <path\n                              d=\"M32.3988 24.4H13.1988\"\n                              stroke=\"#44358F\"\n                              stroke-width=\"1.6\"\n                              stroke-linecap=\"round\"\n                            />\n                            <circle\n                              r=\"23.2\"\n                              transform=\"matrix(-1 0 0 1 24 24)\"\n                              stroke=\"#44358F\"\n                              stroke-width=\"1.6\"\n                            />\n                          </svg>\n                        </div>\n                        <div className=\"cs-contract-subtitle\">\n                          <div className=\"second-primary-color contact-header-p\">\n                            {(propertyData.propertyType == \"For Sale\" ||\n                              propertyData.propertyType ==\n                                \"For Sale,For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Rent,For Sale\") && (\n                              <>매매 {propertyData.propertyCost}만원 </>\n                            )}\n                          </div>\n                          <div className=\"second-primary-color contact-header-p\">\n                            {(propertyData.propertyType == \"For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Sale,For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Rent,For Sale\") && (\n                              <>보증금 {propertyData.propertyDeposite}만원</>\n                            )}\n                          </div>\n                          <div className=\"second-primary-color contact-header-p\">\n                            {(propertyData.propertyType == \"For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Sale,For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Rent,For Sale\") && (\n                              <>월세 {propertyData.propertyRent}만원</>\n                            )}\n                          </div>\n                        </div>\n                      </Col>\n                      <Divider />\n                    </Row>\n                    {console.log(propertyData)}\n                    {console.log(data)}\n                    {data.length > 0 &&\n                      data.map((contractFile) => {\n                        const data = contractFile.contractFile.split(\"-\");\n                        // console.log(\"temp\", temp);\n\n                        return (\n                          <Row className=\"cs-contract-wrap\">\n                            <Col className=\"\" span={12}>\n                              <div className=\"contact-name-title\">\n                                {\" \"}\n                                {data[2]}\n                              </div>\n                              <span className=\"contact-date-title\">\n                                계약일 :{\" \"}\n                                {moment(Date.now(data[0])).format(\"YYYY.MM.DD\")}\n                              </span>\n                            </Col>\n                            <Col\n                              className=\"text-right\"\n                              span={12}\n                              style={{ marginTop: \"16px\" }}\n                            >\n                              <Button\n                                shape=\"round\"\n                                className=\"theme-btn-default download-contact-btn\"\n                              >\n                                <svg\n                                  width=\"20\"\n                                  height=\"21\"\n                                  viewBox=\"0 0 20 21\"\n                                  fill=\"none\"\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                  <path\n                                    d=\"M9.87175 1.2959V18.1919\"\n                                    stroke=\"#9A86FF\"\n                                    stroke-width=\"1.6\"\n                                    stroke-linecap=\"square\"\n                                  />\n                                  <path\n                                    d=\"M18.8485 11.2344L9.87248 19.6824L0.896484 11.2344\"\n                                    stroke=\"#9A86FF\"\n                                    stroke-width=\"1.6\"\n                                  />\n                                </svg>\n                                <span\n                                  onClick={() => {\n                                    util.downloadFileByURL(\n                                      \"contractfile\",\n                                      contractFile.contractFile\n                                    );\n                                  }}\n                                >\n                                  계약서 다운로드\n                                </span>\n                              </Button>\n                            </Col>\n                            <Divider />\n                          </Row>\n                        );\n                      })}\n                    {data.length === 0 && <EmptyPhase />}\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ContractHistory;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/BasicSettings.js",["442","443","444","445","446","447","448","449","450","451","452","453","454"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  message,\n  Select,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport BasicSettingsAside from \"./basic-settings-aside\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\n\nconst axios = require(\"axios\");\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { offset: 0, span: 20 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n  message.error(\"S에러입니다.\");\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass BasicSettings extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    size: \"large\",\n    email_front: \"\",\n    email_domain: \"@\",\n    email_extension: \"\",\n  };\n\n  formRef = React.createRef();\n  onEmailExtensionChange = (value) => {\n    console.log(\"e.target\", value);\n    // this.setState({\n    //   email_domain: this.state.email_domain + value,\n    // });\n\n    this.formRef.current.setFieldsValue({\n      email_domain: \"@\" + value,\n    });\n  };\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/adminapi/GetCompanydetail/1\")\n      .then((response) => {\n        var data = response.data;\n        // console.log('data->', data.data)\n        if (data.status == 1 || data.status == \"1\") {\n          console.log(\"dddd: \", data.data.email);\n\n          const email = data.data.email.split(\"@\");\n          this.formRef.current.setFieldsValue({\n            company_name: data.data.companyname,\n            registration_number: data.data.businesslicencenumber,\n            ceo: data.data.ownername,\n            email_front: email[0],\n            email_domain: \"@\" + email[1],\n            email_extension: email[1],\n            company_address: data.data.companyaddress,\n            postcode: data.data.postcode,\n            mail_report_no: data.data.telemarketingregisternumber,\n            service_center_number: data.data.servicecenternumber,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n    const email = values.email_front + values.email_domain;\n    axios\n      .post(BaseUrl + \"/adminapi/UpdateCompanyDetail\", {\n        id: 1,\n        companyname: values.company_name,\n        email: email,\n        businesslicencenumber: values.registration_number,\n        ownername: values.ceo,\n        telemarketingregisternumber: values.mail_report_no,\n        servicecenternumber: values.service_center_number,\n        companyaddress: values.company_address,\n        postcode: values.postcode,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"업데이트가 되었습니다.\");\n        }\n      });\n  };\n\n  render() {\n    const { size } = this.state;\n    const { Option } = Select;\n    return (\n      <Layout>\n        <TopNav />\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <BasicSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    xs={{ span: 20 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                    className=\"flex-center cs-admin-basic-info\"\n                  >\n                    <p className=\"m-0\">기본정보 설정</p>\n                  </Col>\n\n                  <Col\n                    className=\"flex-center cs-admin-basic-info-button\"\n                    xs={{ span: 4 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        htmlType=\"submit\"\n                        shape=\"round\"\n                        size={size}\n                      >\n                        저장\n                      </Button>\n                    </Form.Item>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" span={24}>\n                    회사 정보\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"상호(회사명)\"\n                      name=\"company_name\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input your Company Name!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"(주)집스\" />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...regLayout}\n                      label=\"사업자등록번호\"\n                      name=\"registration_number\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input your Registarion number!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"000-00-0000\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      label=\"대표자명\"\n                      name=\"ceo\"\n                      rules={[\n                        { required: false, message: \"Please input CEO!\" },\n                      ]}\n                    >\n                      <Input placeholder=\"고차남\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-registermember-email-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item className=\"\" label=\"이메일\">\n                      <Input.Group compact style={{ paddingLeft: \"20px\" }}>\n                        <Form.Item\n                          style={{ paddingLeft: \"5px\", margin: \"35px 0 0 0\" }}\n                          name=\"email_front\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"이메일\" />\n                        </Form.Item>\n                        <Form.Item\n                          style={{\n                            paddingLeft: \"5px\",\n                            margin: \"35px 35px 0 35px\",\n                          }}\n                          name=\"email_domain\"\n                          // onChange={this.onEmailDomainChange}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"선택해주세요.\" defaultValue=\"@\" />\n                        </Form.Item>\n                        <Form.Item\n                          name=\"email_extension\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px 0 0 0\" }}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"선택해주세요\",\n                            },\n                          ]}\n                        >\n                          <Select\n                            placeholder=\"선택해주세요.\"\n                            onChange={this.onEmailExtensionChange}\n                          >\n                            <Option value=\"naver.com\">naver.com</Option>\n                            <Option value=\"hanmail.com\">hanmail.com</Option>\n                            <Option value=\"gmail.com\">gmail.com</Option>\n                          </Select>\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                    <Row\n                      style={{\n                        width: \"100%\",\n                        bottom: \"1px\",\n                      }}\n                    >\n                      <Col\n                        className=\"ant-col ant-col-4 ant-form-item-label\"\n                        xs={{ span: 0 }}\n                        sm={{ span: 0 }}\n                        lg={{ span: 4 }}\n                      ></Col>\n                      <Col\n                        xs={{ span: 24 }}\n                        sm={{ span: 24 }}\n                        lg={{ span: 20 }}\n                      >\n                        <p class=\"input-description cs-mt15\">\n                          발송자 이메일 정보가 없으면 자동메일 발송이 되지\n                          않으니, 대표 이메일 정보를 반드시 입력해주세요.\n                        </p>\n                      </Col>\n                    </Row>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input with-border\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item label=\"사업장 주소\" className=\"m-0\">\n                      <Input.Group\n                        style={{ display: \"flex\", paddingLeft: \"20px\" }}\n                      >\n                        <Form.Item\n                          className=\"m-0\"\n                          name=\"postcode\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px 0\" }}\n                          rules={[\n                            {\n                              required: false,\n                              message: \"Please input your Company address!\",\n                            },\n                          ]}\n                        >\n                          <Input\n                            placeholder=\"우편번호\"\n                            maxLength=\"10\"\n                            className=\"cs-admin-width-180\"\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          className=\"cs-admin-address m-0\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          name=\"company_address\"\n                          rules={[\n                            {\n                              required: false,\n                              message: \"Please input your Company address!\",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"주소를 입력해주세요.\" />\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      label=\"통신판매 신고번호\"\n                      className=\"cs-admin-form-input\"\n                      name=\"mail_report_no\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input your Mail report number!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"2020-강남-0000\" />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      label=\"고객센터 전화번호\"\n                      className=\"cs-admin-form-input\"\n                      name=\"service_center_number\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input your Service center number!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"0000-0000\" />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default BasicSettings;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/KakaotalkSettings.js",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473"],"import React, { Component } from \"react\";\n\nimport { Layout, Form, Input, Button, Checkbox, Menu, Divider } from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport BasicSettingsAside from \"./basic-settings-aside\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\n\nconst axios = require(\"axios\");\nconst KAKAO_ALIMTALK_STATE = {\n  ON: true,\n  OFF: false,\n};\nconst { Header, Content, Footer, Sider } = Layout;\n\n// const layout = {\n//     labelCol: { span: 0 },\n//     wrapperCol: { span: 24 },\n// };\n\n// import { Layout, Menu, Breadcrumb } from 'antd';\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { offset: 0, span: 20 },\n};\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n\n  const data = new FormData();\n  data.append(\"email\", values.email);\n  data.append(\"password\", values.password);\n\n  // axios.post(BaseUrl+\"collectionImageUpload\", data, {\n  //     // receive two    parameter endpoint url ,form data\n  // })\n  //  .then(res => {\n  //      console.log(res.data)\n  //      if(res.data.responseCode === 200){\n  //          this.setState({ collectionImage: res.data.data.image })\n  //      }\n  //  })\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst handleOnOffRadioButtonClick = async (e) => {\n  //\n  const {\n    target: { value },\n  } = e;\n  console.log(value);\n  // to alimtalk server\n  try {\n    // companyinformation table colmum에 alimtalk(boolean) 추가\n    // 79 ~ 84 코드는 companyinformation - kakao_noti_state on / off 설정 코드임\n    await axios(BaseUrl + \"/adminapi/UpdateKakaoNotiState\", {\n      method: \"get\",\n      params: {\n        state: value,\n      },\n    });\n    // 아래 코드는 (매니저 배정시, 계약 완료시) 사용할 코드\n\n    // 매니저 배정시 or 계약 완료시\n    // companyinformation - kakao_noti_state\n    // on / off 인지 먼저 확인\n    // on 이면 아래 코드 실행\n    // off 이면 코드 실행하지 않음\n\n    // await axios(\"http://34.64.239.189:4000/matchManager\", {\n    //   method: \"get\",\n    //   params: {\n    //     pathname: \"bar\",\n    //   },\n    // });\n  } catch (error) {}\n};\n\nclass KakaotalkSetting extends Component {\n  state = { size: \"large\" };\n\n  render() {\n    const { size } = this.state;\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <BasicSettingsAside />\n            <div style={{ width: \"100%\" }}>\n              <a\n                href=\"https://center.biztalk.co.kr/#/login\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                비즈톡으로 이동합니다.\n              </a>\n              <div>\n                <div>알림톡 on/off</div>\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"chk_input\"\n                    value={KAKAO_ALIMTALK_STATE.ON}\n                    onClick={handleOnOffRadioButtonClick}\n                  />\n                  On\n                  <input\n                    type=\"radio\"\n                    name=\"chk_input\"\n                    value={KAKAO_ALIMTALK_STATE.OFF}\n                    onClick={handleOnOffRadioButtonClick}\n                  />\n                  Off\n                </div>\n              </div>\n            </div>\n            {/* <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col className=\"cs-admin-basic-info flex-center\" xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }}>\n                    <p className=\"m-0\">카카오 톡 알림 설정</p>\n                  </Col>\n                  <Col className=\"cs-admin-basic-info-button\"  xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }}>\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        htmlType=\"submit\"\n                        shape=\"round\"\n                        size={size}\n                      >\n                        저장\n                      </Button>\n                    </Form.Item>\n                  </Col>\n                  <Divider className=\"cs-admin-basic-divider\"/>\n                  <Col className=\"cs-admin-company\" span={24}>약관∙개인정보 처리방침 문구 설정</Col>\n                  <Col className=\"cs-admin-Kakao\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"플러스친구 아이디\"\n                      name=\"kakaotalk_friend_id\"\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"플러스 친구 ID 를 입력해주세요 \",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"아이디를 입력해주세요.\"/>\n                    </Form.Item>\n                  </Col>\n\n                  <Col className=\"cs-admin-Kakao\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"발신프로필키\"\n                      name=\"aggreement\"\n                      type=\"email\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"발신프로필 키를 입력해주세요\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"발신프로필키를 입력해주세요.\"/>\n                    </Form.Item>\n                  </Col>\n\n                  <Col className=\"cs-admin-Kakao cs-admin-Kakao-text\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <p>- 알림톡을 사용하시려면 발신프로필키가 필요합니다.</p>\n                    <p>\n                    - 발신프로필키는 카카오톡 플러스친구 아이디 등록을 하여 발급받을 수 있습니다.\n                    </p>\n                    <p>\n                    - 카카오톡 플러스친구 아이디가 없다면 [카카오톡 플러스 친구 관리자]에서 발급받은 후 등록해주세요.\n                    </p>\n                  </Col>\n\n                  <Col className=\"cs-admin-Kakao-checkbox\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n\n                    <h3>\n                    알림톡 사용 설정\n                    </h3>\n                    <div class=\"cs-admin-Kakao-checkbox-inner\">\n                        <Form.Item name=\"notification_use\" valuePropName=\"checked\">\n                          <Checkbox>사용함</Checkbox>\n                        </Form.Item>\n\n                        <Form.Item\n                          name=\"notification_message\"\n                          valuePropName=\"checked\"\n                        >\n                          <Checkbox>사용안함</Checkbox>\n                        </Form.Item>\n                    </div>\n                  </Col>\n                  <Col className=\"cs-admin-Kakao cs-admin-Kakao-text\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <p>- 카카오 알림톡 발신프로필키를 받은 후 최소 1시간이 경과해야 정상적으로 사용이 가능합니다.</p>\n                  </Col>\n\n                 <div class=\"cs-admin-kakao-title\">\n                   <h3>알림톡 문구 설정</h3>\n                 </div>\n\n                  <Col className=\"cs-admin-Kakao-checkbox-input-block\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...{\n                        labelCol: { span: 4 },\n                        wrapperCol: { offset: 0, span: 20 },\n                      }}\n                      label=\"담당자 배정 완료 문구\"\n                      name=\"manager_arrangement\"\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"담당자 배정완료 문구를 입력해주세요 \",\n                        },\n                      ]}\n                    >\n                      <Checkbox className=\"cs-ml20\">자동발송</Checkbox>\n                      <Input.TextArea rows={8} className=\"cs-ml20\" placeholder=\"[#{-}]\n#{orderName}님의 집 내놓기가 접수되었습니다\n□주문 \n곧 담당자가 배정되어 연락드릴 예정입니다.\n감사합니다.\n\n▷[#{-}] 바로가기 :\n#{Url}\" />\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"cs-admin-Kakao-checkbox-input-block\" xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...{\n                        labelCol: { span: 4 },\n                        wrapperCol: { offset: 0, span: 20 },\n                      }}\n                      label=\"컨펌 완료 문구\"\n                      name=\"confirm_complete_message\"\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"컨펌완료문구를 입력해주세요\",\n                        },\n                      ]}\n                    >\n                      <Checkbox className=\"cs-ml20\">자동발송</Checkbox>\n                      <Input.TextArea rows={8} className=\"cs-ml20\" placeholder=\"[#{-}]\n#{orderName}님의 계약서 컨펌이 완료되었습니다\n□주문번호 : #{orderNo}\n□결제금액 : #{settlePrice}원\n\n담당자 김건우님이 계약서 컨펌 내용에 대해 연락드릴 예정입니다.\n감사합니다.\n\n▷[#{-}] 바로가기 :\n#{Url}\" />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content> */}\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default KakaotalkSetting;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/ManagingMember.js",["474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport MemberSettingsAside from \"./member-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"아이디\",\n    dataIndex: \"email\",\n  },\n  {\n    title: \"이름\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"출금일\",\n    dataIndex: \"membershipexpiredate\",\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    number: \"1\",\n    email: \"someone@gmail.com\",\n    name: \"someone\",\n    withdrawal_date: \"2020-01-01\",\n  },\n  {\n    key: \"1\",\n    number: \"1\",\n    email: \"someone@gmail.com\",\n    name: \"someone\",\n    withdrawal_date: \"2020-01-01\",\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nclass ManagingMember extends Component {\n  state = {\n    allData: \"\",\n    minDate: \"\",\n    maxDate: \"\",\n    selectedRowKeys: [],\n    totalrecord: 0,\n    loading: false,\n    delloading: false,\n  };\n\n  onDateChange = (date, dateString) => {\n    // console.log(dateString[0]);\n    this.setState({\n      minDate: dateString[0],\n      maxDate: dateString[1],\n    });\n  };\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    // console.log('Success:', values);\n    axios\n      .post(BaseUrl + \"/adminapi/SeachWithdrawMemberDetail\", {\n        name: values.search_keyword,\n        minDate: this.state.minDate,\n        maxDate: this.state.maxDate,\n      })\n      .then((res) => {\n        this.setState({ allData: \"\" });\n        console.log(res);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var AllData = res.data.data.members;\n\n          // console.log(AllData)\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              email: AllData[i].email,\n              name: AllData[i].name,\n              membershipexpiredate: AllData[i].membershipexpiredate,\n              // sign_up_date: AllData[i].signupdate,\n              // last_login: AllData[i].lastlogindate,\n              // setting: <Button>Setting</Button>\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n            loading: false,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  componentDidMount() {\n    axios\n      .post(BaseUrl + \"/adminapi/SeachWithdrawMemberDetail\", {\n        name: \"\",\n        minDate: \"\",\n        maxDate: \"\",\n      })\n      .then((res) => {\n        this.setState({ allData: \"\" });\n        console.log(res);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var AllData = res.data.data.members;\n          // console.log(AllData)\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              email: AllData[i].email,\n              name: AllData[i].name,\n              membershipexpiredate: AllData[i].membershipexpiredate,\n              // sign_up_date: AllData[i].signupdate,\n              // last_login: AllData[i].lastlogindate,\n              // setting: <Button>Setting</Button>\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n            totalrecord: res.data.data.total,\n            loading: false,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <MemberSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    <p className=\"m-0\">회원 탈퇴∙삭제 관리</p>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    {/* <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\n                        Save\n                      </Button>\n\n\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-button-without-spacing\" />\n\n                  <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                    탈퇴내역 검색\n                  </Col>\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  ></Col>\n\n                  <Col\n                    className=\"cs-admin-member\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"이름\"\n                      name=\"search_keyword\"\n                      rules={\n                        [\n                          // { required: true, message: '담당자이름을 검색해주세요.' }\n                        ]\n                      }\n                    >\n                      <Input placeholder=\"김정아\" className=\"cs-ml20\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member cs-admin-managing-member\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"탈퇴일\"\n                      name=\"withdrawal_date\"\n                      rules={\n                        [\n                          // { required: true, message: 'Please select date!' }\n                        ]\n                      }\n                    >\n                      <RangePicker\n                        onChange={this.onDateChange}\n                        placeholder={[\"YYYY.MM.DD\", \"YYYY.MM.DD\"]}\n                        className=\"cs-ml20\"\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }}>\n                    {/* <p>Member list  </p> */}\n                  </Col>\n                  <Col\n                    className=\"cs-admin-member-button cs-admin-managing-member-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item {...compLayout}>\n                      <Button\n                        loading={loading}\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        htmlType=\"submit\"\n                        shape=\"round\"\n                        // size={size}\n                      >\n                        검색\n                      </Button>\n                    </Form.Item>\n                  </Col>\n\n                  <Divider />\n                  <div class=\"cs-admin-member-des\">\n                    <p>\n                      검색 {this.state.allData.length}개 / 전체{\" \"}\n                      {this.state.totalrecord}개\n                    </p>\n                  </div>\n                  <Col\n                    className=\"cs-admin-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      // rowSelection={{\n                      //   type: 'checkbox',\n                      //   ...rowSelection,\n                      // }}\n                      columns={columns}\n                      dataSource={this.state.allData}\n                    />\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ManagingMember;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/RegisterMember.js",["492","493","494","495","496","497","498","499","500","501","502","503","504"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  message,\n  Select,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport MemberSettingsAside from \"./member-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass RegisterMember extends Component {\n  state = {\n    email_front: \"\",\n    email_domain: \"@\",\n    email_extension: \"\",\n    loading: false,\n  };\n  formRef = React.createRef();\n\n  onEmailExtensionChange = (value) => {\n    console.log(\"e.target\", value);\n    // this.setState({\n    //   email_domain: this.state.email_domain + value,\n    // });\n\n    this.formRef.current.setFieldsValue({\n      email_domain: \"@\" + value,\n    });\n  };\n  // onEmailDomainChange = (e) => {\n  //   this.setState({\n  //     email_domain: e.target.value,\n  //   });\n  //   this.formRef.current.setFieldsValue({\n  //     email_domain: e.target.value,\n  //   });\n  // };\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    console.log(\"Success:\", values);\n    const email = values.email_front + values.email_domain;\n    axios\n      .post(BaseUrl + \"/adminapi/InsertNewMember\", {\n        name: values.name,\n        mobile: values.mobile,\n        address: values.address,\n        detailAddress: values.detail_address,\n        email: email,\n        password: values.password,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ loading: false });\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n        } else {\n          message.warning(res.data.message);\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { Option } = Select;\n    console.log(\"this.state\", this.state);\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <MemberSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 18 }}\n                    lg={{ span: 18 }}\n                  >\n                    <p className=\"m-0\">회원 등록</p>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button cs-admin-member-registration\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 6 }}\n                    lg={{ span: 6 }}\n                  >\n                    <Button\n                      loading={loading}\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      회원 저장\n                    </Button>\n\n                    <Button\n                      className=\"theme-btn-default float-right\"\n                      shape=\"round\"\n                      style={{ marginRight: \"20px\" }}\n                    >\n                      <Link to=\"/member-setting\">회원 목록</Link>\n                    </Button>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                    기본 정보\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"이름\"\n                      name=\"name\"\n                      className=\"m-0\"\n                      rules={[\n                        { required: true, message: \"이름을 입력해 주세요!\" },\n                      ]}\n                    >\n                      <Input placeholder=\"이름을 입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-member-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      label=\"비밀번호(필수)\"\n                      name=\"password\"\n                      className=\"m-0\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"비밀번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input.Password\n                        placeholder=\"비밀번호를 입력해주세요.\"\n                        className=\"cs-admin-password\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-member-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      name=\"confirm\"\n                      label=\"비밀번호 확인\"\n                      className=\"m-0\"\n                      dependencies={[\"password\"]}\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"비밀번호를 확인해주세요\",\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(rule, value) {\n                            if (!value || getFieldValue(\"password\") === value) {\n                              return Promise.resolve();\n                            }\n                            return Promise.reject(\n                              \"비밀번호가 일치하지 않습니다!\"\n                            );\n                          },\n                        }),\n                      ]}\n                    >\n                      <Input.Password\n                        placeholder=\"비밀번호를 확인해주세요.\"\n                        className=\"cs-admin-password\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      label=\"휴대폰 번호\"\n                      name=\"mobile\"\n                      className=\"m-0\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"핸드폰 번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      label=\"탈퇴여부\"\n                      name=\"leave_status\"\n                      className=\"m-0\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input your Leave Status!\",\n                        },\n                      ]}\n                    >\n                      <Input value=\"무\" readOnly placeholder=\"무\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-registermember-email-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item className=\"\" label=\"이메일\">\n                      <Input.Group compact style={{ paddingLeft: \"20px\" }}>\n                        <Form.Item\n                          style={{ margin: \"35px 0\" }}\n                          name=\"email_front\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"이메일\" />\n                        </Form.Item>\n                        <Form.Item\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          name=\"email_domain\"\n                          // onChange={this.onEmailDomainChange}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"선택해주세요.\" defaultValue=\"@\" />\n                        </Form.Item>\n                        <Form.Item\n                          style={{ paddingLeft: \"5px\", margin: \"35px 0\" }}\n                          name=\"email_extension\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"선택해주세요\",\n                            },\n                          ]}\n                        >\n                          <Select\n                            placeholder=\"선택해주세요.\"\n                            onChange={this.onEmailExtensionChange}\n                          >\n                            <Option value=\"naver.com\">naver.com</Option>\n                            <Option value=\"hanmail.com\">hanmail.com</Option>\n                            <Option value=\"gmail.com\">gmail.com</Option>\n                          </Select>\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input with-border\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item label=\"주소\" className=\"m-0\">\n                      <Input.Group\n                        style={{ display: \"flex\", paddingLeft: \"20px\" }}\n                      >\n                        <Form.Item\n                          {...compLayout}\n                          name=\"address\"\n                          className=\"m-0\"\n                          style={{ margin: \"35px 0\" }}\n                        >\n                          <Input />\n                        </Form.Item>\n                        <Form.Item\n                          className=\"m-0\"\n                          {...compLayout}\n                          name=\"detailAddress\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          // onChange={this.onEmailDomainChange}\n                        >\n                          <Input />\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                    {/* <Form.Item\n                      {...compLayout}\n                      // className=\"m-0\"\n                      name=\"detail_address\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"상세주소를 입력해 주세요! (동/층/호수 등)\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item> */}\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterMember;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/ManagingManager.js",["505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport MemberSettingsAside from \"./member-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n\n  const data = new FormData();\n  data.append(\"email\", values.email);\n  data.append(\"password\", values.password);\n\n  // axios.post(BaseUrl+\"collectionImageUpload\", data, {\n  //     // receive two    parameter endpoint url ,form data\n  // })\n  //  .then(res => {\n  //      console.log(res.data)\n  //      if(res.data.responseCode === 200){\n  //          this.setState({ collectionImage: res.data.data.image })\n  //      }\n  //  })\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"담당자\",\n    dataIndex: \"manager\",\n  },\n  {\n    title: \"담당중인 집\",\n    dataIndex: \"cases\",\n  },\n  // {\n  //   title: 'Withdrawal date ',\n  //   dataIndex: 'withdrawal_date',\n  // },\n];\n// const data = [\n//   {\n//     key: '1',\n//     number: '1',\n//     manager: 'someone',\n//     cases: '01'\n//   },\n//   {\n//     key: '2',\n//     number: '2',\n//     manager: 'someone',\n//     cases: '01'\n//   },\n// ];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nclass ManagingManager extends Component {\n  state = {\n    allData: \"\",\n    minDate: \"\",\n    maxDate: \"\",\n    searchData: \"\",\n    selectedRowKeys: [],\n    loading: false,\n    delloading: false,\n  };\n\n  onDateChange = (date, dateString) => {\n    // console.log(dateString[0]);\n    this.setState({\n      minDate: dateString[0],\n      maxDate: dateString[1],\n    });\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState(\n      {\n        selectedRowKeys,\n      },\n      () => {\n        // console.log(this.state.selectedRowKeys)\n      }\n    );\n  };\n\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllManager\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data;\n\n          console.log(AllData);\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].roleId,\n              id: AllData[i].roleId,\n              number: i + 1,\n              manager: AllData[i].name,\n              cases: AllData[i].propertyCount,\n              // setting: <Button>Setting</Button>\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    // console.log('Success:', values);\n    axios\n      .post(BaseUrl + \"/adminapi/searchManagerDetail\", {\n        name: values.search_keyword,\n        // \"minDate\": this.state.minDate,\n        // \"maxDate\": this.state.maxDate\n      })\n      .then((res) => {\n        this.setState({ searchData: \"\" });\n        // console.log(res)\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var searchData = res.data.data;\n\n          console.log(searchData.length);\n\n          var searchDataResult = [];\n\n          for (var i = 0; i < searchData.length; i++) {\n            searchDataResult[i] = {\n              key: searchData[i].roleId,\n              id: searchData[i].roleId,\n              number: i + 1,\n              manager: searchData[i].name,\n              cases: searchData[i].propertyCount,\n            };\n          }\n\n          console.log(searchDataResult);\n          this.setState({\n            searchData: searchDataResult,\n            loading: false,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  deleteRecords = () => {\n    this.setState({ delloading: true });\n    axios\n      .post(BaseUrl + \"/adminapi/DeleteManagerDetail\", {\n        roleId: this.state.selectedRowKeys,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ allData: \"\" });\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          axios\n            .get(BaseUrl + \"/adminapi/GetAllManager\")\n            .then((response) => {\n              if (response.data.status == 1 || response.data.status == \"1\") {\n                // console.log(\"dddd: \", data.data.id);\n\n                var AllData = response.data.data;\n\n                // console.log(AllData)\n\n                var finalData = [];\n\n                for (var i = 0; i < AllData.length; i++) {\n                  finalData[i] = {\n                    key: AllData[i].roleId,\n                    id: AllData[i].roleId,\n                    number: i + 1,\n                    manager: AllData[i].name,\n                    cases: \"01\",\n                    // setting: <Button>Setting</Button>\n                  };\n                }\n\n                // console.log(finalData)\n                this.setState({\n                  allData: finalData,\n                  delloading: false,\n                });\n\n                message.success(\"삭제되었습니다\");\n              } else {\n                this.setState({ delloading: false });\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              this.setState({ delloading: false });\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n        } else {\n          this.setState({ delloading: false });\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ delloading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    const { loading, selectedRowKeys, delloading } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n\n    console.log(this.state.searchData);\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <MemberSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    {/* <p>Managing manager </p> */}\n                    <p className=\"m-0\">담당자 관리 </p>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      className=\"theme-btn float-right border-radius\"\n                      shape=\"round\"\n                    >\n                      <Link to=\"/register-manager\">담당자 등록</Link>\n                    </Button>\n\n                    {/* \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                    <p className=\"m-0\">전체 {this.state.allData.length}</p>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-table cs-admin-managing-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      rowSelection={{\n                        type: \"checkbox\",\n                        ...rowSelection,\n                      }}\n                      columns={columns}\n                      dataSource={this.state.allData}\n                    />\n                    <div class=\"cs-admin-managing-member-table-button\">\n                      <Button\n                        loading={delloading}\n                        disabled={!this.state.selectedRowKeys.length}\n                        onClick={this.deleteRecords}\n                        type=\"primary\"\n                        className=\"theme-btn\"\n                        shape=\"round\"\n                      >\n                        선택 삭제\n                      </Button>\n                    </div>\n                  </Col>\n\n                  <Divider />\n                  <Space />\n                  <Col\n                    className=\"cs-admin-company cs-admin-managing-manager\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    {/* <h3>Search manager </h3> */}\n                    <h3>담당자 검색 </h3>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-member\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"검색\"\n                      name=\"search_keyword\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"담당자이름을 검색해주세요.\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"검색어를 입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  {/* <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\n                      <Form.Item \n                        {...compLayout}\n                        label=\"Withdrawal date\" \n                        name=\"withdrawal_date\"\n                        rules={[{ required: true, message: 'Please select date!' }]}\n                      >\n                        <Space direction=\"vertical\" size={12}>\n                          <RangePicker />\n                        </Space>\n                      </Form.Item>\n                    </Col> */}\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }}>\n                    {/* <p>Member list  </p> */}\n                  </Col>\n                  <Col\n                    className=\"cs-admin-member-button cs-admin-managing-manager-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item {...compLayout}>\n                      <Button\n                        loading={loading}\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        shape=\"round\"\n                        htmlType=\"submit\"\n                      >\n                        검색\n                      </Button>\n                    </Form.Item>\n                  </Col>\n\n                  <Divider />\n\n                  {/* <h3>Result</h3> */}\n                  <div class=\"cs-admin-managing-manager-text\">\n                    <h3>\n                      검색 {this.state.searchData.length} / 전체{\" \"}\n                      {this.state.allData.length}\n                    </h3>\n                  </div>\n                  <Col\n                    className=\"cs-admin-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      // rowSelection={{\n                      //   type: 'checkbox',\n                      //   ...rowSelection,\n                      // }}\n                      columns={columns}\n                      dataSource={this.state.searchData}\n                    />\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ManagingManager;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/RegisterManager.js",["525","526","527","528","529"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Menu,\n  message,\n  DatePicker,\n  Divider,\n  Switch,\n  Select,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport MemberSettingsAside from \"./member-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass RegisterManager extends Component {\n  formRef = React.createRef();\n\n  state = {\n    loading: false,\n    status: true,\n    email_front: \"\",\n    email_domain: \"@\",\n    email_extension: \"\",\n  };\n\n  onStatusChange = (checked) => {\n    // console.log(`switch to ${checked}`);\n    this.setState({\n      status: checked,\n    });\n  };\n  onEmailExtensionChange = (value) => {\n    console.log(\"e.target\", value);\n    // this.setState({\n    //   email_domain: this.state.email_domain + value,\n    // });\n\n    this.formRef.current.setFieldsValue({\n      email_domain: \"@\" + value,\n    });\n  };\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    console.log(\"Success:\", values);\n    const email = values.email_front + values.email_domain;\n    axios\n      .post(BaseUrl + \"/adminapi/InsertNewManager\", {\n        name: values.name,\n        mobile: values.mobile,\n        email: email,\n        password: values.password,\n        status: this.state.status,\n        address: values.address,\n        detailAddress: values.detailAddress,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n          this.formRef.current.resetFields();\n          this.setState({ loading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    const { loading } = this.state;\n    const { Option } = Select;\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <MemberSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 12 }}\n                    lg={{ span: 12 }}\n                  >\n                    <p className=\"m-0\">담당자 등록 </p>\n                    {/* <p>Register manager </p> */}\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-basic-info-button cs-admin-member-registration\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 12 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Button\n                      loading={loading}\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      담당자 저장\n                    </Button>\n\n                    <Button\n                      className=\"theme-btn-default float-right\"\n                      shape=\"round\"\n                      style={{ marginRight: \"20px\" }}\n                    >\n                      <Link to=\"/managing-manager\">담당자 목록</Link>\n                    </Button>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                    기본 정보\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"담당자 이름\"\n                      name=\"name\"\n                      rules={[\n                        { required: true, message: \"이름을 입력해 주세요!\" },\n                      ]}\n                    >\n                      <Input placeholder=\"이름을 입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"manage-password-form\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input ant-input-password\"\n                      style={{ borderRadius: 0 }}\n                      {...regLayout}\n                      label=\"비밀번호(필수)\"\n                      name=\"password\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"비밀번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input.Password\n                        placeholder=\"비밀번호를 입력해주세요.\"\n                        className=\"cs-admin-password-input\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"manage-password-form\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      className=\"cs-admin-form-input ant-input-password\"\n                      style={{ borderRadius: 0 }}\n                      name=\"confirm\"\n                      label=\"비밀번호 확인\"\n                      dependencies={[\"password\"]}\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"비밀번호를 확인해주세요\",\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(rule, value) {\n                            if (!value || getFieldValue(\"password\") === value) {\n                              return Promise.resolve();\n                            }\n                            return Promise.reject(\n                              \"비밀번호가 일치하지 않습니다!\"\n                            );\n                          },\n                        }),\n                      ]}\n                    >\n                      <Input.Password\n                        placeholder=\"비밀번호를 확인해주세요.\"\n                        className=\"cs-admin-password-input\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...regLayout}\n                      className=\"cs-admin-form-input\"\n                      label=\"휴대폰 번호\"\n                      name=\"mobile\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"핸드폰 번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...regLayout}\n                      className=\"cs-admin-form-input\"\n                      label=\"담당자 활성화\"\n                      name=\"activation_status\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"계약상태를 선택해주세요\",\n                        },\n                      ]}\n                    >\n                      <Switch\n                        onChange={this.onStatusChange}\n                        style={{ margin: \"15px 20px\" }}\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-registermember-email-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item label=\"이메일\">\n                      <Input.Group compact style={{ paddingLeft: \"20px\" }}>\n                        <Form.Item\n                          {...compLayout}\n                          style={{ margin: \"35px 0\" }}\n                          name=\"email_front\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"이메일\" />\n                        </Form.Item>\n                        <Form.Item\n                          {...compLayout}\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          name=\"email_domain\"\n                          // onChange={this.onEmailDomainChange}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"선택해주세요.\" defaultValue=\"@\" />\n                        </Form.Item>\n                        <Form.Item\n                          style={{ paddingLeft: \"5px\", margin: \"35px 0\" }}\n                          name=\"email_extension\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"선택해주세요\",\n                            },\n                          ]}\n                        >\n                          <Select\n                            placeholder=\"선택해주세요.\"\n                            onChange={this.onEmailExtensionChange}\n                          >\n                            <Option value=\"naver.com\">naver.com</Option>\n                            <Option value=\"hanmail.com\">hanmail.com</Option>\n                            <Option value=\"gmail.com\">gmail.com</Option>\n                          </Select>\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input with-border cs-admin-register-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item label=\"주소\">\n                      <Input.Group\n                        style={{ display: \"flex\", paddingLeft: \"20px\" }}\n                      >\n                        <Form.Item\n                          {...compLayout}\n                          name=\"address\"\n                          className=\"m-0\"\n                        >\n                          <Input />\n                        </Form.Item>\n                        <Form.Item\n                          className=\"m-0\"\n                          {...compLayout}\n                          name=\"detailAddress\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          // onChange={this.onEmailDomainChange}\n                        >\n                          <Input />\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterManager;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/EditMember.js",["530","531","532","533","534","535"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Select,\n  Menu,\n  Divider,\n  DatePicker,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport MemberSettingsAside from \"./member-settings-aside\";\nimport history from \"../../RegisterProperty/history\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass EditMember extends Component {\n  state = {\n    loading: false,\n    email_front: \"\",\n    email_domain: \"@\",\n    email_extension: \"\",\n  };\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    console.log(\"Success:\", values);\n    const email = values.email_front + values.email_domain;\n    axios\n      .post(BaseUrl + \"/adminapi/UpdateMember\", {\n        id: window.location.pathname.split(\"/\").pop(),\n        name: values.name,\n        mobile: values.mobile,\n        address: values.address,\n        detailAddress: values.detailAddress,\n        email: email,\n        ismember: values.leave_status,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"업데이트가 되었습니다.\");\n          this.setState({ loading: false });\n          history.goBack();\n        } else {\n          message.error(\"다시 시도해주세요.\");\n          this.setState({ loading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  formRef = React.createRef();\n  onEmailExtensionChange = (value) => {\n    console.log(\"e.target\", value);\n    // this.setState({\n    //   email_domain: this.state.email_domain + value,\n    // });\n\n    this.formRef.current.setFieldsValue({\n      email_domain: \"@\" + value,\n    });\n  };\n  componentDidMount() {\n    var memberId = window.location.pathname.split(\"/\").pop();\n\n    axios\n      .get(BaseUrl + \"/adminapi/GetMemberDeatilById/\" + memberId)\n      .then((response) => {\n        console.log(\"data->\", response.data.data);\n\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n          const email = response.data.data.email.split(\"@\");\n          this.formRef.current.setFieldsValue({\n            name: response.data.data.name,\n            password: \"******\",\n            confirm: \"******\",\n            mobile: response.data.data.mobile,\n            leave_status: response.data.data.ismember ? \"true\" : \"false\",\n            email_front: email[0],\n            email_domain: \"@\" + email[1],\n            email_extension: email[1],\n            address: response.data.data.address,\n            detailAddress: response.data.data.detailAddress,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <MemberSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 12 }}\n                    lg={{ span: 12 }}\n                  >\n                    <p className=\"m-0\">회원 등록</p>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }}>\n                    <Button\n                      loading={loading}\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      회원 저장\n                    </Button>\n\n                    <Button\n                      className=\"theme-btn-default float-right\"\n                      shape=\"round\"\n                      style={{ marginRight: \"20px\" }}\n                    >\n                      <Link to=\"/member-setting\">회원 목록</Link>\n                    </Button>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                    기본 정보\n                  </Col>\n                  <Col\n                    className=\"cs-admin-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  ></Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-member-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"이름\"\n                      name=\"name\"\n                      className=\"m-0\"\n                      rules={[\n                        { required: true, message: \"이름을 입력해 주세요!\" },\n                      ]}\n                    >\n                      <Input placeholder=\"이름을 입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-member-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      label=\"비밀번호(필수)\"\n                      name=\"password\"\n                      className=\"m-0\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"비밀번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input.Password\n                        readOnly\n                        disabled\n                        className=\"cs-admin-password\"\n                        placeholder=\"비밀번호를 입력해주세요.\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-member-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      name=\"confirm\"\n                      label=\"비밀번호 확인\"\n                      className=\"m-0\"\n                      dependencies={[\"password\"]}\n                      hasFeedback\n                      rules={[\n                        {\n                          required: true,\n                          message: \"비밀번호를 확인해주세요\",\n                        },\n                        ({ getFieldValue }) => ({\n                          validator(rule, value) {\n                            if (!value || getFieldValue(\"password\") === value) {\n                              return Promise.resolve();\n                            }\n                            return Promise.reject(\n                              \"비밀번호가 일치하지 않습니다!\"\n                            );\n                          },\n                        }),\n                      ]}\n                    >\n                      <Input.Password\n                        readOnly\n                        disabled\n                        className=\"cs-admin-password\"\n                        placeholder=\"비밀번호를 확인해주세요.\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-member-form-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      {...regLayout}\n                      label=\"휴대폰 번호\"\n                      name=\"mobile\"\n                      className=\"m-0\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"핸드폰 번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"입력해주세요.\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-registermember-email-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Form.Item\n                      className=\"cs-admin-registermember-inner m-0\"\n                      {...regLayout}\n                      label=\"탈퇴여부\"\n                      name=\"leave_status\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input your Leave Status!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        style={{ width: \"100%\" }}\n                        placeholder=\"선택해주세요.\"\n                      >\n                        <Option value=\"true\">아니</Option>\n                        <Option value=\"false\">예</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input cs-admin-registermember-email-input\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item label=\"이메일\">\n                      <Input.Group compact style={{ paddingLeft: \"20px\" }}>\n                        <Form.Item\n                          style={{ margin: \"35px 0\" }}\n                          name=\"email_front\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"이메일\" />\n                        </Form.Item>\n                        <Form.Item\n                          name=\"email_domain\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          // onChange={this.onEmailDomainChange}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"이메일 주소를 입력해주세요 \",\n                            },\n                          ]}\n                        >\n                          <Input placeholder=\"선택해주세요.\" defaultValue=\"@\" />\n                        </Form.Item>\n                        <Form.Item\n                          style={{ paddingLeft: \"5px\", margin: \"35px 0\" }}\n                          name=\"email_extension\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"선택해주세요\",\n                            },\n                          ]}\n                        >\n                          <Select\n                            placeholder=\"선택해주세요.\"\n                            onChange={this.onEmailExtensionChange}\n                          >\n                            <Option value=\"naver.com\">naver.com</Option>\n                            <Option value=\"hanmail.com\">hanmail.com</Option>\n                            <Option value=\"gmail.com\">gmail.com</Option>\n                          </Select>\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-form-input with-border\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item label=\"주소\" className=\"m-0\">\n                      <Input.Group\n                        style={{ display: \"flex\", paddingLeft: \"20px\" }}\n                      >\n                        <Form.Item\n                          {...compLayout}\n                          name=\"address\"\n                          className=\"m-0\"\n                          style={{ margin: \"35px 0\" }}\n                        >\n                          <Input />\n                        </Form.Item>\n                        <Form.Item\n                          className=\"m-0\"\n                          style={{ paddingLeft: \"5px\", margin: \"35px\" }}\n                          {...compLayout}\n                          name=\"detailAddress\"\n                          // onChange={this.onEmailDomainChange}\n                        >\n                          <Input />\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default EditMember;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/SearchProperty.js",["536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  message,\n  Divider,\n  Table,\n  Select,\n  Tag,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport PropertySettingsAside from \"./property-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\nconst { CheckableTag } = Tag;\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\n\nconst { Option } = Select;\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"집 정보\",\n    dataIndex: \"address\",\n  },\n  {\n    title: \"이름\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"회원 상태\",\n    dataIndex: \"member_status\",\n  },\n  {\n    title: \"담당자\",\n    dataIndex: \"manager\",\n  },\n  {\n    title: \"상태\",\n    dataIndex: \"status\",\n  },\n  {\n    title: \"담당자\",\n    dataIndex: \"assign_manager\",\n  },\n  {\n    title: \"정보수정\",\n    dataIndex: \"setting\",\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    number: \"1\",\n    address: \"Lorem ipsum\",\n    name: \"Some name\",\n    manager: \"lorem ipsum\",\n    member_status: \"member\",\n    status: \"Active\",\n    assign_manager: \"here\",\n    setting: \"edit\",\n  },\n  {\n    key: \"2\",\n    number: \"2\",\n    address: \"Lorem ipsum\",\n    name: \"Some name\",\n    manager: \"lorem ipsum\",\n    member_status: \"member\",\n    status: \"Active\",\n    assign_manager: \"here\",\n    setting: \"Edit\",\n  },\n];\nconst tagsData = [\"Member\", \"Non-Member\"];\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nclass SearchProperty extends Component {\n  state = {\n    showStatusOptions: false,\n    allData: [],\n    total: 0,\n    loading: false,\n    dataForFilters: [],\n    selected: [\"Member\"],\n    isNonMember: false,\n    isMember: true,\n  };\n\n  handleSelectChange = (value) => {\n    console.log(`selected ${value}`);\n    if (value == \"status\") {\n      this.setState({ showStatusOptions: true });\n    } else {\n      this.setState({ showStatusOptions: false });\n    }\n  };\n  handleChange(tag, checked) {\n    const { selectedTags } = this.state;\n    // const nextSelectedTags = checked\n    //   ? [...selectedTags, tag]\n    //   : selectedTags.filter((t) => t !== tag);\n    console.log(\"You are interested in: \", checked);\n    // this.setState({ selectedTags: nextSelectedTags });\n  }\n  componentDidMount() {\n    axios\n      .post(BaseUrl + \"/adminapi/SearchProperty\", {\n        filtertype: \"\",\n        keyword: \"\",\n      })\n      .then((res) => {\n        // console.log(res)\n        if (res.data.status == 1) {\n          var AllData = res.data.data.property;\n\n          this.setState({ total: res.data.data.total });\n\n          console.log(AllData);\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            let statustranslate =\n              AllData[i].memberContractStatus == \"Waiting\" && \"계약대기\"\n                ? \"계약대기\"\n                : AllData[i].memberContractStatus == \"Completed\" && \"계약완료\"\n                ? \"계약완료\"\n                : AllData[i].memberContractStatus == \"Ended\" && \"종료\"\n                ? \"종료\"\n                : \"보류 중\";\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              address: AllData[i].address,\n              name: AllData[i].name,\n              member_status:\n                AllData[i].createdbytype == \"member\" ? \"회원\" : \"비회원\",\n              manager: AllData[i].manager != null ? AllData[i].manager : \"미정\",\n              status: statustranslate,\n              // AllData[i].memberContractStatus == \"Pending\"\n              //   ? \"\"\n              //   : AllData[i].memberContractStatus,\n              assign_manager: (\n                <Button\n                  className=\"theme-btn-default \"\n                  disabled={AllData[i].memberContractStatus == \"Ended\"}\n                >\n                  <Link to={\"/assign-manager-to-property/\" + AllData[i].id}>\n                    배정\n                  </Link>\n                </Button>\n              ),\n              setting: (\n                <Button className=\"theme-btn-default \">\n                  <Link to={\"/admin-get-single-property/\" + AllData[i].id}>\n                    수정\n                  </Link>\n                </Button>\n              ),\n            };\n          }\n          console.log(\"finalData-----\", finalData);\n          this.setState({\n            allData: finalData,\n            loading: false,\n            dataForFilters: finalData,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n          this.setState({ loading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n    this.setState({ loading: true });\n\n    axios\n      .post(BaseUrl + \"/adminapi/SearchProperty\", {\n        filtertype: values.search_keyword,\n        keyword: values.search,\n        isMember: this.state.isMember,\n        isNonMember: this.state.isNonMember,\n      })\n      .then((res) => {\n        // console.log(res)\n        if (res.data.status == 1) {\n          var AllData = res.data.data.property;\n\n          console.log(AllData);\n\n          this.setState({\n            total: res.data.data.total,\n          });\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            let statustranslate =\n              AllData[i].memberContractStatus == \"Waiting\"\n                ? \"계약대기\"\n                : AllData[i].memberContractStatus == \"Completed\"\n                ? \"계약완료\"\n                : AllData[i].memberContractStatus == \"Ended\"\n                ? \"종료\"\n                : \"보류 중\";\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              address: AllData[i].address,\n              name: AllData[i].name,\n              member_status:\n                AllData[i].createdbytype == \"member\" ? \"회원\" : \"비회원\",\n              manager: AllData[i].manager != null ? AllData[i].manager : \"미정\",\n              status: statustranslate,\n              assign_manager: (\n                <Button\n                  className=\"theme-btn-default \"\n                  disabled={AllData[i].memberContractStatus == \"Ended\"}\n                >\n                  <Link to={\"/assign-manager-to-property/\" + AllData[i].id}>\n                    배정\n                  </Link>\n                </Button>\n              ),\n              setting: (\n                <Button className=\"theme-btn-default \">\n                  <Link to={\"/admin-get-single-property/\" + AllData[i].id}>\n                    환경\n                  </Link>\n                </Button>\n              ),\n            };\n          }\n          console.log(finalData);\n          this.setState({\n            allData: finalData,\n            loading: false,\n            dataForFilters: finalData,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n          this.setState({ loading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n\n    message.error(\"에러입니다.\");\n  };\n\n  handleFilter(val) {\n    console.log(\"val---\", val);\n    if (this.state.dataForFilters.length == \"\") {\n      message.error(\"검색어를 입력하여 주세요.\");\n    }\n    var updatedList = this.state.dataForFilters;\n    console.log(this.state.allData);\n\n    updatedList = updatedList.filter(function (item) {\n      console.log(\"item.member_status\", item.member_status);\n      if (item.member_status) {\n        return item.member_status.toLowerCase() === val;\n      }\n    });\n\n    console.log(updatedList);\n    this.setState({ allData: updatedList });\n  }\n\n  render() {\n    const { showStatusOptions, allData, loading, selectedTags } = this.state;\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <PropertySettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={this.onFinishFailed}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info cs-admin-real-estate-inner flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    {/* <p className=\"m-0\">Search property</p> */}\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button cs-admin-real-estate-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    {/*  <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" >\n                        <Link to=\"/register-manager\">\n                        Register manager\n                        </Link>\n                      </Button>\n\n                      \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <div\n                    class=\"cs-admin-real-estate-email-block\"\n                    style={{ marginTop: \"-15px\" }}\n                  >\n                    <Col className=\"cs-admin-real-estate-email\">\n                      <Form.Item\n                        // {...compLayout}\n                        label=\"검색\"\n                        name=\"search_keyword\"\n                        rules={\n                          [\n                            // {\n                            //   required: true,\n                            //   message: \"담당자이름을 검색해주세요.\",\n                            // },\n                          ]\n                        }\n                      >\n                        <Select\n                          placeholder=\"선택해주세요\"\n                          defaultValue=\"선택해주세요\"\n                          onChange={this.handleSelectChange}\n                        >\n                          {/* <Option value=\"\">선택해주세요</Option> */}\n                          <Option value=\"name\">이름</Option>\n                          <Option value=\"manager\">담당자</Option>\n                          <Option value=\"status\">상태</Option>\n                        </Select>\n                        {/* <Input /> */}\n                      </Form.Item>\n                    </Col>\n                    {showStatusOptions ? (\n                      <Col className=\"cs-admin-real-estate-email email-input\">\n                        <Form.Item\n                          className=\"mr-10 ml-10\"\n                          // {...compLayout}\n                          label=\"\"\n                          name=\"search\"\n                          rules={\n                            [\n                              // {\n                              //   required: true,\n                              //   message: \"Please select from this list !\",\n                              // },\n                            ]\n                          }\n                        >\n                          <Select defaultValue=\"\">\n                            <Option value=\"\">선택해주세요.</Option>\n                            <Option value=\"Pending\">보류 중</Option>\n                            <Option value=\"Waiting\">계약대기</Option>\n                            <Option value=\"Completed\">계약완료</Option>\n                            <Option value=\"Ended\">종료</Option>\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                    ) : (\n                      <Col className=\"cs-admin-real-estate-email email-input\">\n                        <Form.Item\n                          className=\"ml-10 \"\n                          // {...compLayout}\n                          label=\"\"\n                          name=\"search\"\n                          rules={\n                            [\n                              // { required: true, message: \"Please input keyword!\" },\n                            ]\n                          }\n                        >\n                          <Input placeholder=\"검색어를 입력해주세요\" />\n                        </Form.Item>\n                      </Col>\n                    )}\n                    <Col className=\"cs-admin-real-estate-email\">\n                      <CheckableTag\n                        className=\"cs-admin-search-property-btn\"\n                        checked={this.state.isMember}\n                        onChange={() =>\n                          this.setState({\n                            isMember: !this.state.isMember,\n                          })\n                        }\n                      >\n                        회원\n                      </CheckableTag>\n                      <CheckableTag\n                        className=\"cs-admin-search-property-btn\"\n                        checked={this.state.isNonMember}\n                        onChange={() =>\n                          this.setState({\n                            isNonMember: !this.state.isNonMember,\n                          })\n                        }\n                      >\n                        비회원{\" \"}\n                      </CheckableTag>\n                    </Col>\n                  </div>\n\n                  <Col\n                    className=\"cs-admin-real-esta-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Button\n                      loading={loading}\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      검색\n                    </Button>\n                  </Col>\n\n                  <Divider />\n                  <div class=\"cs-admin-real-title\">\n                    <h3>\n                      검색 {this.state.allData.length}개 / 전체{\" \"}\n                      {this.state.total}개\n                    </h3>\n                  </div>\n                  <Col\n                    class=\"cs-admin-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      rowSelection={{\n                        type: \"checkbox\",\n                        ...rowSelection,\n                      }}\n                      columns={columns}\n                      dataSource={allData}\n                    />\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default SearchProperty;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/PropertyList.js",["556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Button,\n  Menu,\n  Divider,\n  DatePicker,\n  Table,\n  Select,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport PropertySettingsAside from \"./property-settings-aside\";\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"집 정보\",\n    dataIndex: \"address\",\n  },\n  {\n    title: \"이름\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"회원유무\",\n    dataIndex: \"member_status\",\n  },\n  {\n    title: \"담당자\",\n    dataIndex: \"manager\",\n  },\n  {\n    title: \"상태\",\n    dataIndex: \"status\",\n  },\n  {\n    title: \"담당자\",\n    dataIndex: \"assign_manager\",\n  },\n  {\n    title: \"정보수정\",\n    dataIndex: \"setting\",\n    // render: () => <Button className=\"theme-btn-default \" >\n    //   <Link to=\"#\" >\n    //     Edit\n    //   </Link>\n    // </Button>\n  },\n];\n// const data = [\n//   {\n//     key: '1',\n//     number: '1',\n//     address: 'Lorem ipsum',\n//     name: 'Some name',\n//     member_status: 'member',\n//     manager: 'lorem ipsum',\n//     status: 'Active',\n//     assign_manager: 'here',\n//     setting: 'edit'\n//   },\n//   {\n//     key: '2',\n//     number: '2',\n//     address: 'Lorem ipsum',\n//     name: 'Some name',\n//     member_status: 'member',\n//     manager: 'lorem ipsum',\n//     status: 'Active',\n//     assign_manager: 'here',\n//     setting: 'Edit'\n//   }\n// ];\n\n// rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\nfunction handleSelectChange(value) {\n  console.log(`selected ${value}`);\n}\n\nclass PropertyList extends Component {\n  state = {\n    allData: \"\",\n    totalRecords: 0,\n    selectedRowKeys: [],\n    dataForExcel: [],\n    beginExcelDownload: false,\n    finalExcelData: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllProperties\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data;\n\n          // console.log(AllData)\n\n          this.setState({ totalRecords: AllData.length });\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            let statustranslate =\n              AllData[i].memberContractStatus == \"Waiting\"\n                ? \"계약대기\"\n                : AllData[i].memberContractStatus == \"Completed\"\n                ? \"계약완료\"\n                : AllData[i].memberContractStatus == \"Ended\"\n                ? \"종료\"\n                : \"보류 중\";\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              address: AllData[i].address,\n              name: AllData[i].name,\n              member_status:\n                AllData[i].createdbytype == \"member\" ? \"회원\" : \"비회원\",\n              // member_status: AllData[i].createdbytype,\n              manager: AllData[i].manager != null ? AllData[i].manager : \"미정\",\n              // manager: AllData[i].manager,\n              status: statustranslate,\n              // status:\n              //   AllData[i].memberContractStatus == \"Pending\"\n              //     ? \"\"\n              //     : AllData[i].memberContractStatus,\n              assign_manager: (\n                <Button className=\"theme-btn-default \">\n                  <Link to={\"/assign-manager-to-property/\" + AllData[i].id}>\n                    배정\n                  </Link>\n                </Button>\n              ),\n              setting: (\n                <Button className=\"theme-btn-default \">\n                  <Link to={\"/admin-get-single-property/\" + AllData[i].id}>\n                    수정\n                  </Link>\n                </Button>\n              ),\n            };\n          }\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n            finalExcelData: finalData,\n            dataForExcel: response.data.data,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onSelectChange = (selectedRowKeys) => {\n    var selected = [];\n    var allData = [];\n    var finalArray = [];\n    // selected = this.state.selectedRowKeys;\n    allData = this.state.dataForExcel;\n    if (this.state.selectedRowKeys.length >= 0) {\n      selected = selectedRowKeys;\n    } else {\n      selected = allData.map((x) => x.id);\n    }\n\n    for (var i = 0; i < selected.length; i++) {\n      for (var j = 0; j < allData.length; j++) {\n        if (selected[i] == allData[j].id) {\n          finalArray[i] = {\n            number: i + 1,\n            address: allData[j].address,\n            name: allData[j].name,\n            member_status: allData[j].createdbytype,\n            manager: allData[j].manager,\n            status: allData[j].status ? \"Active\" : \"Inactive\",\n          };\n        }\n      }\n    }\n    this.setState(\n      {\n        finalExcelData: finalArray,\n        selectedRowKeys,\n      },\n      () => {}\n    );\n  };\n\n  deleteRecords = () => {\n    this.setState({ delloading: true });\n    axios\n      .post(BaseUrl + \"/adminapi/DeletePropertyDetail\", {\n        id: this.state.selectedRowKeys,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ allData: \"\" });\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          axios\n            .get(BaseUrl + \"/adminapi/GetAllProperties\")\n            .then((response) => {\n              if (response.data.status == 1 || response.data.status == \"1\") {\n                // console.log(\"dddd: \", data.data.id);\n\n                var AllData = response.data.data;\n\n                console.log(AllData);\n\n                this.setState({ totalRecords: AllData.length });\n                var finalData = [];\n\n                for (var i = 0; i < AllData.length; i++) {\n                  finalData[i] = {\n                    key: AllData[i].id,\n                    id: AllData[i].id,\n                    number: i + 1,\n                    address: AllData[i].address,\n                    name: AllData[i].name,\n                    member_status: AllData[i].createdbytype,\n                    manager: AllData[i].manager,\n                    status: AllData[i].status ? \"Active\" : \"Inactive\",\n                    assign_manager: (\n                      <Button className=\"theme-btn-default \">\n                        <Link\n                          to={\"/assign-manager-to-property/\" + AllData[i].id}\n                        >\n                          Assign\n                        </Link>\n                      </Button>\n                    ),\n                    setting: (\n                      <Button className=\"theme-btn-default \">\n                        <Link\n                          to={\"/admin-get-single-property/\" + AllData[i].id}\n                        >\n                          Setting\n                        </Link>\n                      </Button>\n                    ),\n                  };\n                }\n                // console.log(finalData)\n                this.setState({\n                  allData: finalData,\n                  delloading: false,\n                  dataForExcel: response.data.data,\n                });\n              } else {\n                this.setState({ delloading: false });\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n              this.setState({ delloading: false });\n            });\n        } else {\n          this.setState({ delloading: false });\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ delloading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    const { loading, selectedRowKeys, delloading, totalRecords } = this.state;\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <PropertySettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info cs-admin-real-estate-inner flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    <p className=\"m-0\">부동산 리스트 </p>\n                    {/* <p>Property List</p> */}\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button cs-admin-real-estate-listing-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        shape=\"round\"\n                      >\n                        <Link to=\"/admin-register-property\">부동산 등록</Link>\n                      </Button>\n                    </Form.Item>\n                    {/*  \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col\n                    className=\"cs-admin-real-estate-listing-title\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <h3>전체 {totalRecords} 개</h3>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      // rowSelection={{\n                      //   type: 'checkbox',\n                      //   ...rowSelection,\n                      // }}\n                      rowSelection={rowSelection}\n                      columns={columns}\n                      dataSource={this.state.allData}\n                    />\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-button-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Button\n                      loading={delloading}\n                      onClick={this.deleteRecords}\n                      disabled={!this.state.selectedRowKeys.length}\n                      className=\"theme-btn\"\n                      type=\"primary\"\n                      shape=\"round\"\n                    >\n                      선택 삭제\n                    </Button>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-button-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 12 }}\n                    lg={{ span: 12 }}\n                  >\n                    <ExcelFile\n                      filename=\"members-list\"\n                      element={\n                        <Button\n                          className=\"theme-btn float-right\"\n                          type=\"primary\"\n                          shape=\"round\"\n                        >\n                          엑셀 다운로드{\" \"}\n                        </Button>\n                      }\n                    >\n                      <ExcelSheet\n                        data={this.state.finalExcelData}\n                        name=\"Members\"\n                      >\n                        <ExcelColumn label=\"S.no\" value=\"number\" />\n                        <ExcelColumn label=\"Address\" value=\"address\" />\n                        <ExcelColumn label=\"Name\" value=\"name\" />\n                        <ExcelColumn\n                          label=\"Member status\"\n                          value=\"member_status\"\n                        />\n                        <ExcelColumn label=\"Manager\" value=\"manager\" />\n                        <ExcelColumn label=\"Status\" value=\"status\" />\n                      </ExcelSheet>\n                    </ExcelFile>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default PropertyList;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/AssignManagerToProperty.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Divider,\n  Space,\n  Table,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport PropertySettingsAside from \"./property-settings-aside\";\nimport history from \"../../RegisterProperty/history\";\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 6 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst fullLayout = {\n  labelCol: { span: 3 },\n  wrapperCol: { offset: 0, span: 24 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"담당자\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"핸드폰 번호\",\n    dataIndex: \"mobile\",\n  },\n  {\n    title: \"담당중인 집\",\n    dataIndex: \"cases\",\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    number: \"1\",\n    name: \"Some name\",\n    mobile: \"01111111\",\n    cases: \"01\",\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nclass AssignManagerToProperty extends Component {\n  state = {\n    allData: \"\",\n    searchData: \"\",\n    selectedRowKeys: \"\",\n    loading: false,\n    saveLoading: false,\n  };\n  onSelectChange = (selectedRowKeys) => {\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState(\n      {\n        selectedRowKeys,\n      },\n      () => {\n        console.log(this.state.selectedRowKeys);\n      }\n    );\n  };\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    // console.log('Success:', values);\n    axios\n      .post(BaseUrl + \"/adminapi/searchManagerDetail\", {\n        name: values.search_keyword,\n      })\n      .then((res) => {\n        this.setState({ searchData: \"\" });\n        // console.log(res)\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var searchData = res.data.data;\n\n          console.log(searchData);\n\n          var searchDataResult = [];\n\n          for (var i = 0; i < searchData.length; i++) {\n            searchDataResult[i] = {\n              key: searchData[i].roleId,\n              id: searchData[i].roleId,\n              number: i + 1,\n              name: searchData[i].name,\n              mobile: searchData[i].mobile,\n              cases: searchData[i].propertyCount,\n            };\n          }\n\n          // console.log(searchDataResult)\n          this.setState({\n            searchData: searchDataResult,\n            loading: false,\n          });\n        } else {\n          message.error(res.data.message);\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  assignManager = () => {\n    this.setState({ saveLoading: true });\n\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .post(BaseUrl + \"/adminapi/AssignManager\", {\n        id: propertyId,\n        roleId: this.state.selectedRowKeys,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          message.success(res.data.message);\n          this.setState({ saveLoading: false });\n          history.push(\"/property-list\");\n\n          console.log(\"-------------------> success\");\n        } else {\n          message.error(res.data.message);\n          this.setState({ saveLoading: false });\n        }\n      })\n      .catch((error) => {\n        this.setState({ saveLoading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  componentDidMount() {\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .get(BaseUrl + \"/adminapi/GetPropertyDetailById/\" + propertyId)\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data;\n          console.log(AllData);\n\n          this.setState({\n            address: AllData.address,\n            property_name: AllData.name,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n\n    this.setState({ loading: true });\n    // console.log('Success:', values);\n    axios\n      .post(BaseUrl + \"/adminapi/searchManagerDetail\", {\n        name: \"\",\n      })\n      .then((res) => {\n        this.setState({ searchData: \"\" });\n        // console.log(res)\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var searchData = res.data.data;\n\n          console.log(searchData);\n\n          var searchDataResult = [];\n\n          for (var i = 0; i < searchData.length; i++) {\n            searchDataResult[i] = {\n              key: searchData[i].roleId,\n              id: searchData[i].roleId,\n              number: i + 1,\n              name: searchData[i].name,\n              mobile: searchData[i].mobile,\n              cases: searchData[i].propertyCount,\n            };\n          }\n\n          // console.log(searchDataResult)\n          this.setState({\n            searchData: searchDataResult,\n            loading: false,\n          });\n        } else {\n          message.error(res.data.message);\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const {\n      loading,\n      selectedRowKeys,\n      address,\n      property_name,\n      saveLoading,\n    } = this.state;\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <PropertySettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Row>\n                <Col\n                  className=\"cs-admin-basic-info cs-admin-real-estate-inner flex-center\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 20 }}\n                  lg={{ span: 20 }}\n                >\n                  <p className=\"m-0\">담당자 배정</p>\n                </Col>\n                <Col\n                  className=\"cs-admin-basic-info-button cs-admin-member-registration\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 4 }}\n                  lg={{ span: 4 }}\n                >\n                  <Button\n                    type=\"primary\"\n                    onClick={this.assignManager}\n                    className=\"theme-btn float-right\"\n                    shape=\"round\"\n                    loading={saveLoading}\n                  >\n                    담당자 저장\n                  </Button>\n\n                  {/* \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                </Col>\n\n                <Divider className=\"cs-admin-basic-divider\" />\n\n                <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                  부동산 정보\n                </Col>\n\n                <Col\n                  className=\"cs-admin-company cs-admin-assign-manager-label\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 24 }}\n                  lg={{ span: 12 }}\n                >\n                  <label> 집정보: {address}</label>\n                </Col>\n\n                <Col\n                  className=\"cs-admin-company cs-admin-assign-manager-label\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 24 }}\n                  lg={{ span: 12 }}\n                >\n                  <label> 이름: {property_name}</label>\n                </Col>\n              </Row>\n\n              <Divider className=\"cs-admin-assign-manager-block-line\" />\n\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col className=\"cs-admin-company\" span={24}>\n                    담당자 선택\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      className=\"cs-admin-form-input\"\n                      label=\"담당자\"\n                      name=\"search_keyword\"\n                      rules={\n                        [\n                          // { required: true, message: '담당자이름을 검색해주세요.' }\n                        ]\n                      }\n                    >\n                      <Input placeholder=\"담당자 이름\" />\n                    </Form.Item>\n                  </Col>\n\n                  {/* <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\n                      <Form.Item \n                        {...compLayout}\n                        label=\"Withdrawal date\" \n                        name=\"withdrawal_date\"\n                        rules={[{ required: true, message: 'Please select date!' }]}\n                      >\n                        <Space direction=\"vertical\" size={12}>\n                          <RangePicker />\n                        </Space>\n                      </Form.Item>\n                    </Col> */}\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  ></Col>\n                  <Col\n                    className=\"cs-admin-member-button assign-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item {...compLayout}>\n                      <Button\n                        loading={loading}\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        shape=\"round\"\n                      >\n                        검색\n                      </Button>\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n              <Divider />\n              <Row>\n                <div class=\"cs-admin-assign-manager \">\n                  {/* <h3>결과</h3> */}\n                </div>\n                <Col\n                  className=\"cs-admin-member-table\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 24 }}\n                  lg={{ span: 24 }}\n                >\n                  <Table\n                    rowSelection={{\n                      type: \"radio\",\n                      ...rowSelection,\n                    }}\n                    columns={columns}\n                    dataSource={this.state.searchData}\n                  />\n                </Col>\n              </Row>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default AssignManagerToProperty;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/ManageFaq.js",["591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Button,\n  Menu,\n  Divider,\n  DatePicker,\n  Table,\n  Select,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport FaqSettingsAside from \"./faq-settings-aside\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 23 },\n};\nconst { Option } = Select;\n\nconst onFinish = (values) => {\n  console.log(\"Success:\", values);\n\n  const data = new FormData();\n  data.append(\"email\", values.email);\n  data.append(\"password\", values.password);\n\n  // axios.post(BaseUrl+\"collectionImageUpload\", data, {\n  //     // receive two    parameter endpoint url ,form data\n  // })\n  //  .then(res => {\n  //      console.log(res.data)\n  //      if(res.data.responseCode === 200){\n  //          this.setState({ collectionImage: res.data.data.image })\n  //      }\n  //  })\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    width: 100,\n    className: \"txt-center\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"\",\n    dataIndex: \"content\",\n  },\n  {\n    title: \"정보수정\",\n    dataIndex: \"setting\",\n    width: 100,\n    className: \"txt-right\",\n  },\n];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(\n      `selectedRowKeys: ${selectedRowKeys}`,\n      \"selectedRows: \",\n      selectedRows\n    );\n  },\n  getCheckboxProps: (record) => ({\n    disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n    name: record.name,\n  }),\n};\nfunction handleSelectChange(value) {\n  console.log(`selected ${value}`);\n}\n\nclass ManageFaq extends Component {\n  state = {\n    allData: \"\",\n    selectedRowKeys: \"\",\n    delloading: false,\n    size: \"large\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllFAQ\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data;\n\n          // console.log(AllData)\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              content: AllData[i].question,\n              setting: (\n                <Button>\n                  <Link to={\"edit-faq/\" + AllData[i].id}> 수정 </Link>\n                </Button>\n              ),\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onSelectChange = (selectedRowKeys) => {\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState(\n      {\n        selectedRowKeys,\n      },\n      () => {\n        console.log(this.state.selectedRowKeys);\n      }\n    );\n  };\n\n  deleteRecords = () => {\n    if (\n      this.state.selectedRowKeys.length == 0 ||\n      this.state.selectedRowKeys == \"\"\n    ) {\n      message.error(\"Please select any row first..\");\n      return;\n    }\n\n    this.setState({ delloading: true });\n    axios\n      .post(BaseUrl + \"/adminapi/DeleteFAQdetail\", {\n        ids: this.state.selectedRowKeys,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ allData: \"\" });\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          axios\n            .get(BaseUrl + \"/adminapi/GetAllFAQ\")\n            .then((response) => {\n              if (response.data.status == 1 || response.data.status == \"1\") {\n                // console.log(\"dddd: \", data.data.id);\n\n                var AllData = response.data.data;\n\n                // console.log(AllData)\n\n                var finalData = [];\n\n                for (var i = 0; i < AllData.length; i++) {\n                  finalData[i] = {\n                    key: AllData[i].id,\n                    id: AllData[i].id,\n                    number: i + 1,\n                    content: AllData[i].question,\n                    setting: (\n                      <Button>\n                        <Link to={\"edit-faq/\" + AllData[i].id}> Edit </Link>\n                      </Button>\n                    ),\n                  };\n                }\n\n                // console.log(finalData)\n                this.setState({\n                  allData: finalData,\n                });\n\n                message.success(\"삭제되었습니다\");\n              } else {\n                message.error(\"다시 시도해주세요.\");\n              }\n              this.setState({ delloading: false });\n            })\n            .catch((error) => {\n              this.setState({ delloading: false });\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n        } else {\n          this.setState({ delloading: false });\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ delloading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    const { allData, selectedRowKeys, delloading, size } = this.state;\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <FaqSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col\n                    xs={{ span: 20 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                    className=\"flex-center cs-admin-basic-info\"\n                  >\n                    <p className=\"m-0\">FAQ 관리</p>\n                  </Col>\n                  <Col\n                    className=\"flex-center cs-admin-basic-info-button\"\n                    xs={{ span: 4 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item>\n                      <Button\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        shape=\"round\"\n                        size={size}\n                      >\n                        <Link to=\"/register-faq\">FAQ 등록</Link>\n                      </Button>\n\n                      {/*  \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                    </Form.Item>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" span={24}>\n                    FAQ 목록\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      // rowSelection={{\n                      //   type: 'checkbox',\n                      //   ...rowSelection,\n                      // }}\n                      rowSelection={rowSelection}\n                      columns={columns}\n                      dataSource={allData}\n                    />\n                    <div\n                      class=\"cs-admin-manage-faq-button\"\n                      style={{ position: \"absolute\", bottom: \"10px\" }}\n                    >\n                      <Button\n                        loading={delloading}\n                        className=\"theme-btn\"\n                        type=\"primary\"\n                        shape=\"round\"\n                        disabled={!this.state.selectedRowKeys.length}\n                        onClick={this.deleteRecords}\n                      >\n                        선택 삭제\n                      </Button>\n                    </div>\n                  </Col>\n\n                  {/* \n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\n                    <Button className=\"theme-btn float-right\" type=\"primary\" shape=\"round\" >Excel download </Button>\n                  </Col> */}\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default ManageFaq;\n","/home/codexive/work/demo/zeep/src/components/Register/Register.js",["612","613","614","615","616","617","618"],"import React, { Component } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Modal,\n  Divider,\n  Space,\n  message,\n} from \"antd\";\n\nimport \"../css/global.css\";\nimport \"antd/dist/antd.css\";\nimport \"./register.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\nimport LoginFormFooter from \"../WithoutAuthHeaderFooter/LoginFormFooter\";\nimport BaseUrl from \"../services/axios-url\";\nimport Cookies from \"universal-cookie\";\nimport InputMask from \"react-input-mask\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\n\nconst layout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 24 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    // console.log('encodedStringBtoA', encodedStringBtoA);\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    // cookies.set(finalCookieName, finalCookieValue, { path: '/' });\n\n    // get the cookie\n\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      message.warning(\"이미 로그인 되어 있습니다. \");\n      this.props.history.push(\"/register-property\");\n    }\n  }\n\n  state = {\n    showTermsModal: false,\n    show3rdPartyModal: false,\n    showBeneficialInformationModal: false,\n    loading: false,\n    modalsData: [],\n  };\n\n  showTermsModal = () => {\n    this.setState({\n      showTermsModal: true,\n    });\n  };\n\n  show3rdPartyModal = () => {\n    this.setState({\n      show3rdPartyModal: true,\n    });\n  };\n\n  showBeneficialInformationModal = () => {\n    this.setState({\n      showBeneficialInformationModal: true,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      showTermsModal: false,\n      show3rdPartyModal: false,\n      showBeneficialInformationModal: false,\n    });\n  };\n\n  onFinish = (values) => {\n    // console.log('Success:', values);\n\n    this.setState({ loading: true });\n\n    const mobile = values.phone.replaceAll(\"-\", \"\");\n\n    axios\n      .post(BaseUrl + \"/memberapi/MemberRegister\", {\n        name: values.full_name,\n        mobile: mobile,\n        email: values.email,\n        password: values.password,\n        address: \"\",\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ allData: \"\" });\n\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n\n          const cookies = new Cookies();\n          var cookieName = btoa(\"zeeps\");\n          // console.log('encodedStringBtoA', cookieName);\n          var finalCookieName = \"\";\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n          var encodedStringBtoA = btoa(\"authorized\");\n          // console.log('encodedStringBtoA', encodedStringBtoA);\n          var finalCookieValue = \"\";\n          finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n          cookies.set(finalCookieName, finalCookieValue, { path: \"/\" });\n\n          // cookies.set('Zeeps', encodedStringBtoA, { path: '/' });\n          // User Id----------------------\n          // var userId = btoa(res.data.id);\n          var userId = res.data.data.id;\n          cookies.set(\"UU\", userId, { path: \"/\" });\n\n          // User Name\n          var userName = res.data.data.name;\n          cookies.set(\"UN\", userName, { path: \"/\" });\n\n          this.props.history.push(\"/register-property\");\n        } else {\n          this.setState({ loading: false });\n          message.error(res.data.message);\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  componentDidMount() {\n    axios\n      .get(BaseUrl + \"/memberapi/GetAgreementsFront\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          //   var AllData = response.data.data;\n          // console.log(response.data.data)\n\n          this.setState({\n            modalsData: response.data.data,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const {\n      showTermsModal,\n      show3rdPartyModal,\n      showBeneficialInformationModal,\n      loading,\n      modalsData,\n    } = this.state;\n\n    return (\n      <Layout className=\"login-bg cs-form2 cs-register-cms\">\n        <WithoutAuthHeader />\n\n        <Content className=\"login-content cs-content-wrapper\">\n          <Row>\n            {/* <div className=\"cs-back-btn\">\n\n              <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack}/>\n\n            </div> */}\n\n            <div className=\"form2-main\">\n              <div className=\"cs-form2-title-wrapper\">\n              <svg width=\"90\" height=\"50\" viewBox=\"0 0 90 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0322 38.955L24.9821 27.8823V27.8003H17.4965V24.1094H30.8556V27.6089L22.8784 38.7088V38.7909H30.8283V42.4818H17.0322V38.955Z\" fill=\"white\"/>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.6432 33.9796H39.9051C39.9051 31.9293 39.2219 31.1911 37.856 31.1911C36.8179 31.1911 35.8344 31.7925 35.6432 33.9796ZM30.9443 35.5653V35.21C30.9443 30.8629 33.6488 28.1289 37.856 28.1289C42.5822 28.1289 44.358 30.781 44.358 35.4014V36.6042H35.6705C35.9437 38.819 37.2004 39.4476 39.5771 39.4476C41.2435 39.4476 42.6916 39.0375 43.7842 38.6001V41.4706C42.7188 42.0996 40.9703 42.7284 38.3751 42.7284C33.3756 42.7284 30.9443 40.2132 30.9443 35.5653Z\" fill=\"white\"/>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.8116 33.9796H54.0733C54.0733 31.9293 53.3904 31.1911 52.0245 31.1911C50.9865 31.1911 50.0029 31.7925 49.8116 33.9796ZM45.1128 35.5653V35.21C45.1128 30.8629 47.8173 28.1289 52.0245 28.1289C56.7508 28.1289 58.5265 30.781 58.5265 35.4014V36.6042H49.8391C50.1123 38.819 51.3689 39.4476 53.7455 39.4476C55.4122 39.4476 56.8598 39.0375 57.9527 38.6001V41.4706C56.8873 42.0996 55.1388 42.7284 52.5436 42.7284C47.5441 42.7284 45.1128 40.2132 45.1128 35.5653Z\" fill=\"white\"/>\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M69.411 35.784V35.3465C69.411 32.4212 68.5093 31.7103 66.9249 31.7103C65.9689 31.7103 65.2312 31.9838 64.8213 32.2572V39.0374C65.2312 39.3109 65.9689 39.5569 66.761 39.5569C68.4276 39.5569 69.411 38.8189 69.411 35.784ZM60.1772 28.4022H64.6575V29.578H64.794C65.7228 28.6756 66.9797 28.1562 68.8646 28.1562C71.5964 28.1562 74.1646 29.7692 74.1646 34.9091V35.2372C74.1646 40.7871 71.5146 42.7282 67.6626 42.7282C66.242 42.7282 65.3404 42.455 64.8213 42.2361V46.5831H60.1772V28.4022Z\" fill=\"white\"/>\n                    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"75\" y=\"28\" width=\"12\" height=\"15\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.3237 28.1289H86.4154V42.7283H75.3237V28.1289Z\" fill=\"white\"/>\n                    </mask>\n                    <g mask=\"url(#mask0)\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.4059 41.7987V38.6819C76.4984 39.0922 77.6734 39.5024 79.5856 39.5024C81.2793 39.5024 81.9622 39.0922 81.9622 38.3266C81.9622 37.6431 81.5523 37.3972 80.3503 37.2603L79.0666 37.0691C76.6623 36.7138 75.3237 35.4013 75.3237 32.6673C75.3237 29.8514 77.1814 28.1289 81.088 28.1289C83.1095 28.1289 84.4757 28.4023 85.5412 28.8671V31.9564C84.6397 31.6832 83.3556 31.3277 81.6892 31.3277C80.296 31.3277 79.6401 31.6832 79.6401 32.4213C79.6401 33.1047 80.132 33.3509 81.252 33.5149L82.5634 33.6789C85.4044 34.0616 86.4155 35.5927 86.4155 38.0259C86.4155 41.1152 84.4757 42.7283 80.2685 42.7283C78.3836 42.7283 76.5258 42.3728 75.4059 41.7987Z\" fill=\"white\"/>\n                    </g>\n                    <mask id=\"mask1\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"2\" y=\"3\" width=\"41\" height=\"40\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 3.10156H42.4811V42.4729H2V3.10156Z\" fill=\"white\"/>\n                    </mask>\n                    <g mask=\"url(#mask1)\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.4811 14.5491L22.2486 3.10156L2 14.5491V42.4729H13.6992V36.176H8.02327V18.7701L22.2469 10.8622L27.8278 13.793L36.4579 18.3254V22.0811H42.4811V14.5491Z\" fill=\"white\"/>\n                    </g>\n                </svg>\n\n            \n                <h1 className=\"cs-form2-title cs-title1\">사이트에 오신걸 </h1>\n              </div>\n              <h1 className=\"cs-form2-title\">환영합니다!</h1>\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Form.Item\n                  label=\"\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      type: \"email\",\n                      message: \"이메일을 입력해주세요.\",\n                    },\n                  ]}\n                >\n                  <Input\n                    placeholder=\"이메일을 입력해주세요. \"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"\"\n                  name=\"full_name\"\n                  rules={[{ required: true, message: \"이름을 입력해주세요.\" }]}\n                >\n                  <Input\n                    placeholder=\"이름을 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"\"\n                  name=\"password\"\n                  rules={[\n                    { required: true, message: \"비밀번호를 입력해주세요.\" },\n                  ]}\n                >\n                  <Input.Password\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"confirm\"\n                  label=\"\"\n                  dependencies={[\"password\"]}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: \"비밀번호를 입력해주세요.\",\n                    },\n                    ({ getFieldValue }) => ({\n                      validator(rule, value) {\n                        if (!value || getFieldValue(\"password\") === value) {\n                          return Promise.resolve();\n                        }\n                        return Promise.reject(\n                          \"비밀번호가 일치하지 않습니다!\"\n                        );\n                      },\n                    }),\n                  ]}\n                >\n                  <Input.Password\n                    placeholder=\"비밀번호를 입력해주세요.\"\n                    className=\"login-input cs-input2\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"phone\"\n                  label=\"\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"휴대폰번호를 입력해주세요.\",\n                    },\n                  ]}\n                >\n                  {/* <Input className=\"login-input cs-input2\" /> */}\n\n                  <InputMask\n                    className=\"login-input cs-input2 ant-input-affix-wrapper\"\n                    mask=\"099-9999-9999\"\n                    // onChange={this.onMobileChange}\n                    placeholder=\"휴대폰번호를 입력해주세요.\"\n                    maskChar=\"\"\n                    // value={\"01023453554\"}\n                  />\n                </Form.Item>\n\n                <Row className=\"cs-agreement-wrap\">\n                  <Col span={18}>\n                    <Form.Item\n                      name=\"terms_conditions\"\n                      valuePropName=\"checked\"\n                      rules={[\n                        {\n                          validator: (_, value) =>\n                            value\n                              ? Promise.resolve()\n                              : Promise.reject(\n                                  \"이용약관 개인정보에 동의 해주세요 (필수)\"\n                                ),\n                        },\n                      ]}\n                    >\n                      <Checkbox className=\"cs-form2-agree-title\">\n                        이용약관∙개인정보 동의 내용\n                      </Checkbox>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"text-right \" span={6}>\n                    <Link\n                      href=\"#\"\n                      className=\"cs-form2-agree-link\"\n                      onClick={this.showTermsModal}\n                    >\n                      {/* Terms and conditions */}\n                      약관보기\n                    </Link>\n                  </Col>\n                </Row>\n\n                <Row className=\"cs-agreement-wrap\">\n                  <Col span={18}>\n                    <Form.Item\n                      name=\"third_party_conditions\"\n                      valuePropName=\"checked\"\n                      rules={[\n                        {\n                          validator: (_, value) =>\n                            value\n                              ? Promise.resolve()\n                              : Promise.reject(\n                                  \"제 3자 정보제공에 동의 해주세요 (필수)\"\n                                ),\n                        },\n                      ]}\n                    >\n                      <Checkbox className=\"cs-form2-agree-title\">\n                        제 3자 정보 제공(필수) 동의\n                      </Checkbox>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"text-right \" span={6}>\n                    <Link\n                      href=\"#\"\n                      className=\"cs-form2-agree-link\"\n                      onClick={this.show3rdPartyModal}\n                    >\n                      약관보기\n                    </Link>\n                  </Col>\n                </Row>\n\n                <Row className=\"cs-agreement-wrap\">\n                  <Col span={18}>\n                    <Form.Item\n                      name=\"benificial_info\"\n                      valuePropName=\"checked\"\n                      // rules={[\n                      //   {\n                      //     validator: (_, value) =>\n                      //       value\n                      //         ? Promise.resolve()\n                      //         : Promise.reject(\n                      //           \"Should accept Beneficial information acceptance agreement\"\n                      //         ),\n                      //   },\n                      // ]}\n                    >\n                      <Checkbox className=\"cs-form2-agree-title\">\n                        혜택성 정보 수신 동의 내용\n                      </Checkbox>\n                    </Form.Item>\n                  </Col>\n                  <Col className=\"text-right\" span={6}>\n                    <Link\n                      href=\"#\"\n                      className=\"cs-form2-agree-link\"\n                      onClick={this.showBeneficialInformationModal}\n                    >\n                      {/* Beneficial information acceptance */}\n                      약관보기\n                    </Link>\n                  </Col>\n                </Row>\n\n                <Form.Item {...tailLayout}>\n                  <Button\n                    loading={loading}\n                    block\n                    type=\"primary\"\n                    shape=\"round\"\n                    htmlType=\"submit\"\n                    className=\"login-btn-bg cs-form2-btn\"\n                  >\n                    가입하기\n                  </Button>\n                </Form.Item>\n              </Form>\n\n              {/* Terms and condtions modal */}\n              <Modal\n                visible={showTermsModal}\n                title=\"이용약관∙개인정보 동의 내용\"\n                // onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n                closable={false}\n                className=\"cs-popup cs-t1-popup\"\n              >\n                <Row className=\"cs-modal-body\">\n                  <p>{modalsData.termsOfService}</p>\n                  <Divider />\n\n                  <Space direction=\"vertical\" className=\"width100\">\n                    <Col span={24}>\n                      <Button\n                        key=\"back\"\n                        className=\"theme-btn cs-btn3\"\n                        onClick={this.handleCancel}\n                        size={\"large\"}\n                      >\n                        {\" \"}\n                        확인{\" \"}\n                      </Button>\n                    </Col>\n                  </Space>\n                </Row>\n              </Modal>\n\n              {/* showBeneficialInformationModal modal */}\n              <Modal\n                visible={showBeneficialInformationModal}\n                title=\"혜택성 정보 수신 동의 내용\"\n                // onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                closable={false}\n                footer={null}\n                className=\"cs-popup cs-t3-popup\"\n              >\n                <Row className=\"cs-modal-body\">\n                  <p>{modalsData.eventNews}</p>\n                  <Divider />\n\n                  <Space direction=\"vertical\" className=\"width100\">\n                    <Col span={24}>\n                      <Button\n                        key=\"back\"\n                        className=\"theme-btn cs-btn3\"\n                        onClick={this.handleCancel}\n                        size={\"large\"}\n                      >\n                        {\" \"}\n                        확인{\" \"}\n                      </Button>\n                    </Col>\n                  </Space>\n                </Row>\n              </Modal>\n\n              {/*  3rd party conditions modal */}\n              <Modal\n                visible={show3rdPartyModal}\n                title=\"제 3자 정보 제공(필수) 동의\"\n                // onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                closable={false}\n                footer={null}\n                className=\"cs-popup cs-t2-popup\"\n              >\n                <Row className=\"cs-modal-body\">\n                  <p>{modalsData.thirdPartyOffer}</p>\n                  <Divider />\n\n                  <Space direction=\"vertical\" className=\"width100\">\n                    <Col span={24}>\n                      <Button\n                        key=\"back\"\n                        className=\"theme-btn cs-btn3\"\n                        onClick={this.handleCancel}\n                        size={\"large\"}\n                      >\n                        {\" \"}\n                        확인{\" \"}\n                      </Button>\n                    </Col>\n                  </Space>\n                </Row>\n              </Modal>\n\n              <LoginFormFooter />\n            </div>\n          </Row>\n        </Content>\n\n        <WithoutAuthFooter />\n      </Layout>\n    );\n  }\n}\nexport default Register;\n","/home/codexive/work/demo/zeep/src/components/LandingPage/LandingPage.js",["619","620","621","622","623","624","625","626","627","628","629","630"],"import React, { Component } from \"react\";\nimport { Layout, Button, Divider, Row, Col, Space } from \"antd\";\nimport { PicCenterOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./landing.css\";\nimport \"../css/global.css\";\nimport { Link } from \"react-router-dom\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport Cookies from \"universal-cookie\";\nimport main1 from \"../images/main1.png\";\nimport main2 from \"../images/main2.png\";\nimport main3 from \"../images/main3.png\";\nimport main4 from \"../images/main4.png\";\n\nimport slider1 from \"../images/slider1.png\";\nimport slider2 from \"../images/slider2.png\";\nimport slider3 from \"../images/slider3.svg\";\nimport slider4 from \"../images/slider4.svg\";\nimport { Carousel, WingBlank } from 'antd-mobile';\n\nconst { Content } = Layout;\n\nclass LandingPage extends Component {\n  state = {\n    isLoggedIn: false,\n    splashScreen: true,\n    isMobileView: ( window.innerWidth <= 768 ) && !localStorage.getItem('splashScreen')\n  }\n\n  componentDidMount() {\n      if (localStorage.getItem('splashScreen')) {\n        this.setState({ isMobileView: false })\n      }\n      \n    const cookies = new Cookies();\n    var cookieName = btoa('zeeps');\n    var finalCookieName = '';\n    finalCookieName = cookieName.replace('=', 'aAaA')\n\n    var encodedStringBtoA = btoa('authorized');\n    var finalCookieValue = '';\n    finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\n\n    if (cookies.get('emVlcHMaAaA') == 'YXV0aG9yaXplZAaAaA') {\n      this.setState({ isLoggedIn: true })\n    }\n    setTimeout(\n        function() {\n            this.setState({ splashScreen: false});\n        }\n        .bind(this),\n        3000\n    );\n  }\n\n  render() {\n    const { isLoggedIn, splashScreen, isMobileView } = this.state;\n\n\n    return (\n      <Layout className=\"cs-homepage\">\n        {!isMobileView && (<div>\n          <div className={isLoggedIn ? 'landing-banner-auth cs-slider-banner' : 'landing-banner-without-auth cs-slider-banner'}>\n              <WithAuthHeader />\n\n              <div className=\"cs-slider-content cs-new-1080\">\n                <div style={{display: 'flex'}}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"120\" height=\"66\" viewBox=\"0 0 120 66\" className=\"cs-home-logo\">\n                        <defs>\n                            <path id=\"lmyyy2at0a\" d=\"M0.007 0.106L14.58 0.106 14.58 19.381 0.007 19.381z\"/>\n                            <path id=\"6n7rbno8lc\" d=\"M0 0.051L53.187 0.051 53.187 52.033 0 52.033z\"/>\n                        </defs>\n                        <g fill=\"none\" fill-rule=\"evenodd\" opacity=\".8\">\n                            <g>\n                                <g>\n                                    <g>\n                                        <g>\n                                            <path fill=\"#FFF\" d=\"M19.75 47.473L30.195 32.854 30.195 32.746 20.36 32.746 20.36 27.872 37.912 27.872 37.912 32.493 27.431 47.148 27.431 47.256 37.876 47.256 37.876 52.13 19.75 52.13z\" transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119)\"/>\n                                            <g>\n                                                <path fill=\"#FFF\" d=\"M44.203 40.819h5.6c0-2.707-.898-3.682-2.692-3.682-1.364 0-2.657.794-2.908 3.682m-6.174 2.093v-.469c0-5.74 3.554-9.349 9.082-9.349 6.21 0 8.542 3.502 8.542 9.602v1.588H44.24c.359 2.924 2.01 3.754 5.133 3.754 2.19 0 4.092-.541 5.527-1.119v3.79c-1.4.83-3.697 1.66-7.106 1.66-6.57 0-9.764-3.32-9.764-9.457M62.819 40.819h5.599c0-2.707-.897-3.682-2.692-3.682-1.364 0-2.656.794-2.907 3.682m-6.174 2.093v-.469c0-5.74 3.553-9.349 9.081-9.349 6.21 0 8.543 3.502 8.543 9.602v1.588H62.855c.359 2.924 2.01 3.754 5.132 3.754 2.19 0 4.092-.541 5.528-1.119v3.79c-1.4.83-3.697 1.66-7.107 1.66-6.569 0-9.763-3.32-9.763-9.457M88.57 43.201v-.577c0-3.863-1.185-4.801-3.267-4.801-1.256 0-2.225.36-2.764.722v8.952c.539.36 1.508.686 2.549.686 2.19 0 3.481-.975 3.481-4.982zm-12.132-9.746h5.886v1.553h.18c1.22-1.192 2.871-1.878 5.348-1.878 3.589 0 6.963 2.13 6.963 8.916v.433c0 7.328-3.482 9.89-8.543 9.89-1.866 0-3.05-.36-3.733-.649v5.74h-6.101V33.454z\" transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119) translate(0 .084)\"/>\n                                                <g transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119) translate(0 .084) translate(96.331 32.988)\">\n                                                    <mask id=\"y0bbsvjksb\" fill=\"#fff\">\n                                                        <use href=\"#lmyyy2at0a\"/>\n                                                    </mask>\n                                                    <path fill=\"#FFF\" d=\"M.115 18.154v-4.115c1.435.542 2.98 1.083 5.491 1.083 2.226 0 3.123-.541 3.123-1.552 0-.903-.539-1.227-2.118-1.408l-1.687-.252C1.766 11.44.007 9.707.007 6.098.007 2.38 2.447.106 7.58.106c2.656 0 4.451.36 5.851.974v4.08c-1.184-.362-2.871-.83-5.06-.83-1.831 0-2.693.468-2.693 1.443 0 .902.646 1.227 2.118 1.444l1.723.216c3.733.506 5.061 2.527 5.061 5.74 0 4.079-2.549 6.208-8.076 6.208-2.477 0-4.918-.469-6.39-1.227\" mask=\"url(#y0bbsvjksb)\"/>\n                                                </g>\n                                                <g transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119) translate(0 .084)\">\n                                                    <mask id=\"7v7pkbn2ld\" fill=\"#fff\">\n                                                        <use href=\"#6n7rbno8lc\"/>\n                                                    </mask>\n                                                    <path fill=\"#FFF\" d=\"M53.187 15.165L26.604 0.051 0 15.165 0 52.033 15.371 52.033 15.371 43.719 7.914 43.719 7.914 20.738 26.602 10.297 33.935 14.167 45.273 20.151 45.273 25.109 53.187 25.109z\" mask=\"url(#7v7pkbn2ld)\"/>\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </svg>\n                \n                  <h2 className=\"text-white cs-title\" style={{marginBottom: '0px'}}>사이트에 오신걸 </h2>\n                </div>\n                  <h2 className=\"text-white cs-subtitle\" style={{lineHeight: '55px'}}>환영합니다!</h2>\n                  <p className=\"text-white cs-desc\">분양 매물 신청 관리, 분양 계약 관리 등 이 모든 것을 <br />집스에서 더욱 편리하게 관리하세요.  </p>\n\n                  <Space>\n                      <Button type=\"primary\" className=\"theme-btn cs-sliderbtn\" shape=\"\" htmlType=\"submit\">\n                          <Link to=\"/register-property\">집 내놓기</Link>\n                      </Button>\n\n                      {isLoggedIn ? '' : <Button className=\"btn-default cs-sliderbtn cs-loginbtn\" shape=\"\" >\n                          <Link to=\"/login\" >\n                              로그인\n                          </Link>\n                      </Button>\n\n                      }\n                  </Space>\n              </div>\n          </div>\n          <Content>\n              <Layout className=\"site-layout-background\" >\n                  <Content className=\"content-padding cs-services-main\" >\n                      <Row className=\"landing-services-section cs-service-wrapper cs-sec-1\">\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\n                              <div className=\"text-center\">\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin  </h3> */}\n                                  {/* <i> <PicCenterOutlined /></i> */}\n                                  <h3 className=\"cs-title\">임대인 중개수수료가 무료에요!</h3>\n                                  <img src={main1} width=\"119px\" className=\"cs-service-img\" />\n                                  <p className=\"cs-desc\">집스를 통해 집을 임대하는 모든 고객은<br />\n                                  임대인 중개수수료가 무료에요!</p>\n                              </div>\n                          </Col>\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\n                              <div className=\"text-center\">\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin </h3> */}\n                                  <h3 className=\"cs-title\">실시간 중개 정보를 알려드려요!</h3>\n                                  <img src={main2} width=\"119px\" className=\"cs-service-img\"/>\n                                  <p className=\"cs-desc\"> 집스 서비스를 이용하는 고객에게<br />\n                                  중개 정보를 실시간으로 알려드려요!</p>\n                              </div>\n                          </Col>\n                          <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\n                          </Col>\n                      </Row>\n                      < Divider />\n                      <Row className=\"landing-services-section cs-service-wrapper cs-sec-2\">\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} className=\"cs-service-block\" >\n                              <div className=\"text-center\">\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin  </h3> */}\n                                  <h3 className=\"cs-title\">모든 법률 서비스가 무료에요!</h3>\n                                  <img src={main3} width=\"119px\" className=\"cs-service-img\" />\n                                  <p className=\"cs-desc\">집스 서비스를 이용하는 고객에게 <br />\n                                  모든 법률 서비스를 무료로 제공해 드려요! </p>\n                              </div>\n                          </Col>\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} className=\"cs-service-block\">\n                              <div className=\"text-center\">\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin </h3> */}\n                                  <h3 className=\"cs-title\">집 내놓기가 간편해졌어요!</h3>\n                                  <img src={main4} width=\"119px\" className=\"cs-service-img\" />\n                                  <p className=\"cs-desc\">집을 내놓을때 생기는 번거로운 과정을 <br />\n                                  생략한 계약서 작성이 가능해요! </p>\n                              </div>\n                          </Col>\n                      </Row>\n\n                  </Content>\n              </Layout>\n          </Content>\n\n          <WithAuthFooter />\n        </div>)}\n        {isMobileView && (<div className={splashScreen ? 'mobile-dashboard login-bg': 'mobile-dashboard'}>\n            {splashScreen &&\n                (<div className=\"logo-div\">\n                <div className=\"logo\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" width=\"93\" height=\"50\" viewBox=\"0 0 120 60\">\n                        <defs>\n                            <path id=\"lmyyy2at0a\" d=\"M0.007 0.106L14.58 0.106 14.58 19.381 0.007 19.381z\"/>\n                            <path id=\"6n7rbno8lc\" d=\"M0 0.051L53.187 0.051 53.187 52.033 0 52.033z\"/>\n                        </defs>\n                        <g fill=\"none\" fill-rule=\"evenodd\" opacity=\".8\">\n                            <g>\n                                <g>\n                                    <g>\n                                        <g>\n                                            <path fill=\"#FFF\" d=\"M19.75 47.473L30.195 32.854 30.195 32.746 20.36 32.746 20.36 27.872 37.912 27.872 37.912 32.493 27.431 47.148 27.431 47.256 37.876 47.256 37.876 52.13 19.75 52.13z\" transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119)\"/>\n                                            <g>\n                                                <path fill=\"#FFF\" d=\"M44.203 40.819h5.6c0-2.707-.898-3.682-2.692-3.682-1.364 0-2.657.794-2.908 3.682m-6.174 2.093v-.469c0-5.74 3.554-9.349 9.082-9.349 6.21 0 8.542 3.502 8.542 9.602v1.588H44.24c.359 2.924 2.01 3.754 5.133 3.754 2.19 0 4.092-.541 5.527-1.119v3.79c-1.4.83-3.697 1.66-7.106 1.66-6.57 0-9.764-3.32-9.764-9.457M62.819 40.819h5.599c0-2.707-.897-3.682-2.692-3.682-1.364 0-2.656.794-2.907 3.682m-6.174 2.093v-.469c0-5.74 3.553-9.349 9.081-9.349 6.21 0 8.543 3.502 8.543 9.602v1.588H62.855c.359 2.924 2.01 3.754 5.132 3.754 2.19 0 4.092-.541 5.528-1.119v3.79c-1.4.83-3.697 1.66-7.107 1.66-6.569 0-9.763-3.32-9.763-9.457M88.57 43.201v-.577c0-3.863-1.185-4.801-3.267-4.801-1.256 0-2.225.36-2.764.722v8.952c.539.36 1.508.686 2.549.686 2.19 0 3.481-.975 3.481-4.982zm-12.132-9.746h5.886v1.553h.18c1.22-1.192 2.871-1.878 5.348-1.878 3.589 0 6.963 2.13 6.963 8.916v.433c0 7.328-3.482 9.89-8.543 9.89-1.866 0-3.05-.36-3.733-.649v5.74h-6.101V33.454z\" transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119) translate(0 .084)\"/>\n                                                <g transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119) translate(0 .084) translate(96.331 32.988)\">\n                                                    <mask id=\"y0bbsvjksb\" fill=\"#fff\">\n                                                        <use href=\"#lmyyy2at0a\"/>\n                                                    </mask>\n                                                    <path fill=\"#FFF\" d=\"M.115 18.154v-4.115c1.435.542 2.98 1.083 5.491 1.083 2.226 0 3.123-.541 3.123-1.552 0-.903-.539-1.227-2.118-1.408l-1.687-.252C1.766 11.44.007 9.707.007 6.098.007 2.38 2.447.106 7.58.106c2.656 0 4.451.36 5.851.974v4.08c-1.184-.362-2.871-.83-5.06-.83-1.831 0-2.693.468-2.693 1.443 0 .902.646 1.227 2.118 1.444l1.723.216c3.733.506 5.061 2.527 5.061 5.74 0 4.079-2.549 6.208-8.076 6.208-2.477 0-4.918-.469-6.39-1.227\" mask=\"url(#y0bbsvjksb)\"/>\n                                                </g>\n                                                <g transform=\"translate(-421 -178) translate(421 178) translate(0 .887) translate(4.138 3.119) translate(0 .084)\">\n                                                    <mask id=\"7v7pkbn2ld\" fill=\"#fff\">\n                                                        <use href=\"#6n7rbno8lc\"/>\n                                                    </mask>\n                                                    <path fill=\"#FFF\" d=\"M53.187 15.165L26.604 0.051 0 15.165 0 52.033 15.371 52.033 15.371 43.719 7.914 43.719 7.914 20.738 26.602 10.297 33.935 14.167 45.273 20.151 45.273 25.109 53.187 25.109z\" mask=\"url(#7v7pkbn2ld)\"/>\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </svg>\n                </div>\n                <div className=\"always-zeeps\">\n                    Always Zeeps!\n                </div>\n                </div>)}\n            {!splashScreen && (<WingBlank>\n                    <Carousel\n                    autoplay={false}\n                    infinite\n                    beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\n                    afterChange={index => console.log('slide to', index)}\n                    >\n                     <div className=\"text-center\">\n                         <div className=\"image-slider login-bg\">\n                            <img src={slider1} className=\"image-slider-img\" />\n                         </div>\n                        <div className=\"slider-description\">\n                            <h3 className=\"title\">임대인 중개수수료가 무료에요!</h3>\n                            <p className=\"desc\">집스를 통해 집을 임대하는 모든 고객은<br />\n                            임대인 중개수수료가 무료에요!</p>\n                        </div>   \n                            \n                        </div>\n                            <div className=\"text-center\">\n                              <div className=\"image-slider login-bg\">\n                                <img src={slider2} className=\"image-slider-img\" />\n                              </div>\n                              <div className=\"slider-description\">\n                                  <h3 className=\"title\">실시간 중개 정보를 알려드려요!</h3>\n                                  <p className=\"desc\"> 집스 서비스를 이용하는 고객에게<br />\n                                  중개 정보를 실시간으로 알려드려요!</p>\n                                </div>\n                            </div>\n                              <div className=\"text-center\">\n                                <div className=\"image-slider login-bg\">\n                                    <img src={slider3} className=\"image-slider-img\" />\n                                </div>\n                                <div className=\"slider-description\">\n                                  <h3 className=\"title\">모든 법률 서비스가 무료에요!</h3>\n                                  <p className=\"desc\">집스 서비스를 이용하는 고객에게 <br />\n                                  모든 법률 서비스를 무료로 제공해 드려요! </p>\n                                </div>\n                              </div>\n                              <div className=\"text-center\">\n                              <div className=\"image-slider login-bg\">\n                                    <img src={slider4} className=\"image-slider-img\" />\n                                </div>\n                                <div className=\"slider-description\">\n                                  <h3 className=\"title\">집 내놓기가 간편해졌어요!</h3>\n                                  <p className=\"desc\">집을 내놓을때 생기는 번거로운 과정을 <br />\n                                  생략한 계약서 작성이 가능해요! </p>\n                                  <Button type=\"primary\" className=\"theme-btn cs-sliderbtn\" shape=\"\" htmlType=\"submit\" style={{width: '285px'}}>\n                                        <Link onClick={() => {this.setState({isMobileView:false}); localStorage.setItem('splashScreen', true)}}>집스 시작하기</Link>\n                                    </Button>\n\n                                </div>\n                              </div>\n                    </Carousel>\n                </WingBlank>)}\n        </div> )}\n      </Layout>\n\n  );\n    // state = {\n    //   isLoggedIn: false,\n    // };\n\n    // componentDidMount() {\n    //   const cookies = new Cookies();\n    //   var cookieName = btoa(\"zeeps\");\n    //   var finalCookieName = \"\";\n    //   finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    //   var encodedStringBtoA = btoa(\"authorized\");\n    //   var finalCookieValue = \"\";\n    //   finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    //   if (cookies.get(\"emVlcHMaAaA\") == \"YXV0aG9yaXplZAaAaA\") {\n    //     this.setState({ isLoggedIn: true });\n    //   }\n    // }\n\n    // render() {\n    //   const { isLoggedIn } = this.state;\n    //   return (\n    //     <Layout>\n    //       <div className=\"landing-banner\">\n    //         <WithAuthHeader />\n\n    //         <div style={{ padding: \"70px 50px 80px 50px\" }}>\n    //           <h2 className=\"text-white\">Welcome to Zeeps!</h2>\n    //           <p className=\"text-white\">\n    //             Nulla quis lorem ut libero. <br /> Cras ultricies ligula sed magna\n    //             dictum porta.{\" \"}\n    //           </p>\n\n    //           <Space>\n    //             <Button\n    //               type=\"primary\"\n    //               className=\"theme-btn\"\n    //               shape=\"\"\n    //               htmlType=\"submit\"\n    //             >\n    //               <Link to=\"/register-property\">Register Property</Link>\n    //             </Button>\n\n    //             {isLoggedIn ? (\n    //               \"\"\n    //             ) : (\n    //               <Button className=\"btn-default landing-page-btn\" shape=\"\">\n    //                 <Link to=\"/login\">Login</Link>\n    //               </Button>\n    //             )}\n    //           </Space>\n    //         </div>\n    //       </div>\n    //       <Content>\n    //         <Layout className=\"site-layout-background\">\n    //           <Content className=\"content-padding\">\n    //             <Row className=\"landing-services-section\">\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n    //                 <div className=\"text-center\">\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\n    //                   <i>\n    //                     <PicCenterOutlined />\n    //                   </i>\n    //                   <p>\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\n    //                     <br />\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\n    //                   </p>\n    //                 </div>\n    //               </Col>\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n    //                 <div className=\"text-center\">\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\n    //                   <i>\n    //                     <PicCenterOutlined />\n    //                   </i>\n    //                   <p>\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\n    //                     <br />\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\n    //                   </p>\n    //                 </div>\n    //               </Col>\n    //               <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }}></Col>\n    //             </Row>\n    //             <Divider />\n    //             <Row className=\"landing-services-section\">\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n    //                 <div className=\"text-center\">\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\n    //                   <i>\n    //                     <PicCenterOutlined />\n    //                   </i>\n    //                   <p>\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\n    //                     <br />\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\n    //                   </p>\n    //                 </div>\n    //               </Col>\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n    //                 <div className=\"text-center\">\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\n    //                   <i>\n    //                     <PicCenterOutlined />\n    //                   </i>\n    //                   <p>\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\n    //                     <br />\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\n    //                   </p>\n    //                 </div>\n    //               </Col>\n    //             </Row>\n    //           </Content>\n    //         </Layout>\n    //       </Content>\n\n    //       <WithAuthFooter />\n    //     </Layout>\n    //   );\n    // }\n  }\n}\n\nexport default LandingPage;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/RegisterPropertyStepTwo.js",["631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  Steps,\n  Radio,\n  Select,\n  Tag,\n  DatePicker,\n  Upload,\n  message,\n  Card,\n} from \"antd\";\n\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport { Link } from \"react-router-dom\";\n\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport nationalLogo from \"../images/national.png\";\nimport history from \"./history\";\nimport Cookies from \"universal-cookie\";\nimport BaseUrl from \"../services/axios-url\";\n\nconst axios = require(\"axios\");\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Step } = Steps;\n\nclass RegisterPropertyStepTwo extends Component {\n  formRef = React.createRef();\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    selectedTags: [\"Electricity\"],\n    optionTags: [\"Refrigerator\"],\n    previewVisible: false,\n    previewImage: \"\",\n    fileList: [],\n    forSale: false,\n    forRent: false,\n  };\n\n  componentDidMount() {\n    if (!this.props.location.state) {\n      // console.log(\"this.state\", this.state);\n      history.push(\"/register-property\");\n      return;\n    }\n    // console.log(\"this.props.location\", this.props.location);\n    if (this.props.location.state.data != \"undefined\") {\n      console.log(\"data\", this.props.location.state.data);\n      var str = this.props.location.state.data;\n\n      console.log(str.search(\"For Sale\"));\n\n      if (str.search(\"For Rent\") != \"-1\" && str.search(\"For Sale\") == \"-1\") {\n        console.log(\"componentdidmount ----> for rent\");\n        this.setState({ forRent: true, forSale: false }, () => {});\n      } else if (\n        str.search(\"For Sale\") != \"-1\" &&\n        str.search(\"For Rent\") == \"-1\"\n      ) {\n        console.log(\"componentdidmount ----> for sale\");\n        this.setState({ forRent: false, forSale: true }, () => {});\n      } else if (\n        str.indexOf(\"For Sale\") != \"-1\" &&\n        str.indexOf(\"For Rent\") != \"-1\"\n      ) {\n        this.setState({ forRent: true, forSale: true });\n      } else {\n        return \"\";\n      }\n      // str.search(\"For Rent\");\n    }\n    if (this.props.location.state.editData) {\n      this.formRef.current.setFieldsValue({\n        rent_price: this.props.location.state.editData.propertyRent,\n        deposit: this.props.location.state.editData.propertyDeposite,\n        sales_price: this.props.location.state.editData.propertyCost,\n      });\n    }\n  }\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    console.log(\"Success:\", values);\n\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    // console.log('encodedStringBtoA', encodedStringBtoA);\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    // Form data begins\n    let apiEndpoint = \"\";\n    let formData = new FormData();\n\n    // already logged in user\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      if (cookies.get(\"UU\")) {\n        var LoggedInUserId = \"\";\n        var LoggedInUserId = cookies.get(\"UU\");\n        formData.append(\"memberId\", LoggedInUserId);\n\n        apiEndpoint = \"MemberInsertProperty\";\n      } else {\n        message.error(\"확인이 되지 않은 회원입니다.\");\n        return;\n      }\n    }\n    // Not logged in user\n    else if (\n      cookies.get(finalCookieName) == undefined ||\n      cookies.get(finalCookieName) == \"undefined\"\n    ) {\n      formData.append(\"m_name\", values.m_name);\n      apiEndpoint = \"UnSignedMemberInsertProperty\";\n    }\n    // Not a normal user\n    else {\n      message.error(\"확인이 되지 않은 회원입니다.\");\n      return;\n    }\n\n    // formData.append(\"propertyCost\", values.sales_price);\n    // formData.append(\"propertyRent\", values.deposit);\n    // formData.append(\"propertyDeposite\", values.rent_price);\n    //console.log(\"formData\", formData);\n    console.log(\"this.props.location.state.id\", this.props.location.state.id);\n\n    const data = {\n      propertyId: this.props.location.state.id,\n      propertyCost: values.sales_price,\n      propertyRent: values.rent_price,\n      propertyDeposite: values.deposit,\n    };\n    axios\n      .post(BaseUrl + \"/propertyapi/addPropertySecondStep\", data)\n      .then((res) => {\n        console.log(\"register property\", res);\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되어있습니다.\");\n          history.push(\"/register-property-step-three\", {\n            id: this.props.location.state.id,\n            editData: this.props.location.state.editData,\n          });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"Sorry!! Something went wrong\");\n        this.setState({ loading: false });\n      });\n  };\n\n  showtextboxes = () => {\n    if (this.state.forSale == false && this.state.forRent == true) {\n      console.log(\"this.state.forRent\");\n      return (\n        <React.Fragment>\n          <Col className=\"\" span={24}>\n            <Form.Item\n              label=\"\"\n              name=\"rent_price\"\n              className=\"cs-rpst\"\n              rules={[\n                { required: true, message: \"월세가를 입력해 주세요!\" },\n                {\n                  pattern: /^\\d*\\.?\\d*$/,\n                  message: \"숫자만 입력해주세요\",\n                },\n              ]}\n            >\n              <Input placeholder=\"월세가를 입력하세요\" maxLength={10} />\n            </Form.Item>\n            <span className=\"right-placeholder\">만원</span>\n          </Col>\n\n          <Col className=\"\" span={24}>\n            <Form.Item\n              label=\"\"\n              name=\"deposit\"\n              className=\"cs-rpst\"\n              rules={[\n                { required: true, message: \"전세가를 입력해 주세요!\" },\n                {\n                  pattern: /^\\d*\\.?\\d*$/,\n                  message: \"숫자만 입력해주세요\",\n                },\n              ]}\n            >\n              <Input placeholder=\"보증금을 입력하세요\" maxLength={10} />\n            </Form.Item>\n            <span className=\"right-placeholder\">만원</span>\n          </Col>\n        </React.Fragment>\n      );\n    } else if (this.state.forSale == true && this.state.forRent == false) {\n      console.log(\"this.state.forSale\");\n      return (\n        <React.Fragment>\n          <Col className=\"\" span={24}>\n            <Form.Item\n              label=\"\"\n              name=\"sales_price\"\n              className=\"cs-rpst\"\n              rules={[\n                { required: true, message: \"매매가를 입력해 주세요!\" },\n                {\n                  pattern: /^\\d*\\.?\\d*$/,\n                  message: \"숫자만 입력해주세요\",\n                },\n              ]}\n            >\n              <Input placeholder=\"매매가를 입력하세요\" maxLength={10} />\n            </Form.Item>\n            <span className=\"right-placeholder\">만원</span>\n          </Col>\n        </React.Fragment>\n      );\n    } else if (this.state.forSale == true && this.state.forRent == true) {\n      console.log(\"forboth\");\n      return (\n        <React.Fragment>\n          <Col className=\"\" span={24}>\n            <Form.Item\n              label=\"\"\n              name=\"sales_price\"\n              className=\"cs-rpst\"\n              rules={[\n                { required: true, message: \"매매가를 입력해 주세요!\" },\n                {\n                  pattern: /^\\d*\\.?\\d*$/,\n                  message: \"숫자만 입력해주세요\",\n                },\n              ]}\n            >\n              <Input placeholder=\"매매가를 입력하세요\" maxLength={10} />\n            </Form.Item>\n            <span className=\"right-placeholder\">만원</span>\n          </Col>\n\n          <Col className=\"\" span={24}>\n            <Form.Item\n              label=\"\"\n              name=\"deposit\"\n              className=\"cs-rpst\"\n              rules={[\n                { required: true, message: \"전세가를 입력해 주세요!\" },\n                {\n                  pattern: /^\\d*\\.?\\d*$/,\n                  message: \"숫자만 입력해주세요\",\n                },\n              ]}\n            >\n              <Input placeholder=\"보증금을 입력하세요\" maxLength={10} />\n            </Form.Item>\n            <span className=\"right-placeholder\">만원</span>\n          </Col>\n\n          <Col className=\"\" span={24}>\n            <Form.Item\n              label=\"\"\n              name=\"rent_price\"\n              className=\"cs-rpst\"\n              rules={[\n                { required: true, message: \"월세가를 입력해 주세요!\" },\n                {\n                  pattern: /^\\d*\\.?\\d*$/,\n                  message: \"숫자만 입력해주세요\",\n                },\n              ]}\n            >\n              <Input placeholder=\"월세가를 입력하세요\" maxLength={10} />\n            </Form.Item>\n            <span className=\"right-placeholder\">만원</span>\n          </Col>\n        </React.Fragment>\n      );\n    } else {\n      console.log(\"else\");\n      return \"\";\n    }\n  };\n\n  render() {\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n      // message.error(errorInfo);\n    };\n\n    return (\n      <Layout className=\"register-property-layout cs-step-2\">\n        <WithAuthHeader />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"text-center cs-main-block\">\n                    <Row>\n                      <Col className=\" mb-15\" span={24}>\n                        <h2 className=\"cs-h2\">집 내놓기</h2>\n                      </Col>\n\n                      <Col className=\"mb-15 cs-p-80\" span={24}>\n                        <Steps progressDot current={1} className=\"cs-step\">\n                          <Step title=\"1단계\" description=\"\" />\n                          <Step title=\"2단계\" subTitle=\"\" description=\"\" />\n                          <Step title=\"3단계\" description=\"\" />\n                        </Steps>\n                      </Col>\n\n                      <Col className=\" mb-15\" span={24}>\n                        <h3 className=\"cs-h3\">\n                          내놓으실 집의 금액을 등록해주세요!\n                        </h3>\n                      </Col>\n                    </Row>\n\n                    <Form\n                      // {...layout}\n                      name=\"basic\"\n                      ref={this.formRef}\n                      initialValues={{ remember: true }}\n                      onFinish={this.onFinish}\n                      onFinishFailed={onFinishFailed}\n                    >\n                      <Row>\n                        {this.showtextboxes()}\n                        {/* <Divider /> */}\n                        {/* <Col className=\"text-left mb-15 cs-dc-img-wrap\" span={24}>\n                          <img\n                            src={nationalLogo}\n                            height=\"50\"\n                            className=\"cs-dc-img\"\n                          />\n                        </Col>\n\n                        <Col\n                          span={24}\n                          className=\"text-left cs-font-28 font-bold\"\n                        >\n                          <p style={{ margin: \"0\" }}>\n                            국토교통부 최근 실거래가 정보{\" \"}\n                          </p>\n                        </Col> */}\n\n                        <Space\n                          direction=\"vertical\"\n                          style={{\n                            height: \"630px\",\n                            overflow: \"auto\",\n                            width: \"100%\",\n                            marginTop: \"30px\",\n                            marginBottom: \"20px\",\n                          }}\n                          className=\"cs-address-block\"\n                        >\n                          {/* <Col\n                            className=\"text-left cs-address-block-list\"\n                            span={24}\n                          >\n                            <Card>\n                              <p className=\"cs-font-26 cs-block-add-desc\">\n                                서울시 양천구 목동북로 12\n                                <br />\n                                i목동아파트 102동 302호{\" \"}\n                              </p>\n                              <b\n                                className=\"color-red cs-font-30\"\n                                style={{ lineHeight: \"40px\" }}\n                              >\n                                14억 3,000\n                              </b>\n                            </Card>\n                          </Col> */}\n                          {/* <Col\n                            className=\"text-left cs-address-block-list\"\n                            span={24}\n                          >\n                            <Card>\n                              <p className=\"cs-font-26 cs-block-add-desc\">\n                                서울시 양천구 목동북로 12\n                                <br />\n                                i목동아파트 102동 302호{\" \"}\n                              </p>\n                              <b\n                                className=\"color-red cs-font-30\"\n                                style={{ lineHeight: \"40px\" }}\n                              >\n                                14억 3,000\n                              </b>\n                            </Card>\n                          </Col> */}\n                          {/* <Col\n                            className=\"text-left cs-address-block-list\"\n                            span={24}\n                          >\n                            <Card>\n                              <p className=\"cs-font-26 cs-block-add-desc\">\n                                서울시 양천구 목동북로 12\n                                <br />\n                                i목동아파트 102동 302호{\" \"}\n                              </p>\n                              <b\n                                className=\"color-red cs-font-30\"\n                                style={{ lineHeight: \"40px\" }}\n                              >\n                                14억 3,000\n                              </b>\n                            </Card>\n                          </Col> */}\n                          {/* <Col\n                            className=\"text-left cs-address-block-list\"\n                            span={24}\n                          >\n                            <Card>\n                              <p className=\"cs-font-26 cs-block-add-desc\">\n                                서울시 양천구 목동북로 12\n                                <br />\n                                i목동아파트 102동 302호{\" \"}\n                              </p>\n                              <b\n                                className=\"color-red cs-font-30\"\n                                style={{ lineHeight: \"40px\" }}\n                              >\n                                14억 3,000\n                              </b>\n                            </Card>\n                          </Col> */}\n                        </Space>\n\n                        {/* <Divider /> */}\n\n                        <Col span={24} className=\"mb-15 text-left\">\n                          <Form.Item>\n                            <Button\n                              className=\"theme-btn  cs-submit-button\"\n                              type=\"primary\"\n                              htmlType=\"submit\"\n                              style={{ width: \"100%\" }}\n                            >\n                              등록하기\n                            </Button>\n                          </Form.Item>\n                        </Col>\n                      </Row>{\" \"}\n                      {/* Form row end */}\n                    </Form>\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterPropertyStepTwo;\n","/home/codexive/work/demo/zeep/src/components/FindPassword/FindPassword.js",["667","668","669","670","671","672","673","674","675","676","677"],"import React, { Component } from \"react\";\n\nimport { Layout, Form, Input, Button, Tabs, message } from \"antd\";\n\nimport \"../css/global.css\";\nimport \"antd/dist/antd.css\";\nimport \"./findpassword.css\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { Redirect } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\nimport LoginFormFooter from \"../WithoutAuthHeaderFooter/LoginFormFooter\";\nimport BaseUrl from \"../services/axios-url\";\nimport Cookies from \"universal-cookie\";\n\nconst axios = require(\"axios\");\n\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst layout = {\n  labelCol: { span: 0 },\n  wrapperCol: { span: 24 },\n};\n\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 24 },\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nclass FindPassword extends Component {\n  state = {\n    mem_name: \"\",\n    mobile_no_for_email_used: \"\",\n    redirectToGetEmail: false,\n    userEmail: \"\",\n    mobile_no_for_password: \"\",\n    redirectToChangePassword: false,\n    verificationCodeLoadingForEmail: false,\n    verificationCodeLoadingForPassword: false,\n  };\n\n  getVerificationCodeForEmail = () => {\n    console.log(this.state.mem_name);\n    console.log(this.state.mobile_no_for_email);\n\n    if (this.state.mem_name == \"\" || this.state.mobile_no_for_email == \"\") {\n      message.error(\"이름과 핸드폰 번호를 정확히 입력해주세요\");\n      return;\n    }\n    this.setState({\n      verificationCodeLoadingForEmail: true,\n    });\n\n    axios\n      .post(BaseUrl + \"/memberapi/SendOTPMember\", {\n        name: this.state.mem_name,\n        mobile: this.state.mobile_no_for_email, // this.state.mobile_no_for_email\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"인증번호가 발송되었습니다.\");\n          this.setState({\n            showVerification: true, // show the textbox\n            // visible: true,           // show the modal\n          });\n        } else {\n          //   console.log(\"-------------->\", res.data.message);\n          message.error(res.data.message);\n        }\n        this.setState({\n          verificationCodeLoadingForEmail: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        // console.log(\"-------------->\", res.data.message);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({\n          verificationCodeLoadingForEmail: false,\n        });\n      });\n  };\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    var mobile = values.mobile_number.toString();\n    var verificationcode = values.verify_number.toString();\n\n    axios\n      .post(BaseUrl + \"/memberapi/ConfirmOTPEmailResetPassword\", {\n        mobile: mobile,\n        verificationcode: verificationcode,\n        mode: \"2\",\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"인증이 완료되었습니다.\");\n\n          this.setState({ userEmail: res.data.data.email }, () => {});\n\n          this.setState({ redirectToGetEmail: true });\n\n          // const cookies = new Cookies();\n          // var cookieName = btoa('zeeps');\n          // // console.log('encodedStringBtoA', cookieName);\n          // var finalCookieName = '';\n          // finalCookieName = cookieName.replace('=', 'aAaA')\n\n          // var encodedStringBtoA = btoa('authorized');\n          // // console.log('encodedStringBtoA', encodedStringBtoA);\n          // var finalCookieValue = '';\n          // finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\n\n          // // already logged in user\n          // if (cookies.get(finalCookieName) == finalCookieValue) {\n          //     this.setState({\n          //         visible: true,           // show the modal\n          //     })\n          // }\n          // // Not logged in user\n          // else if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\n          //     this.setState({\n          //         noRegisteredModalvisible: true,           // show the non member modal\n          //     })\n          // }\n          // // Not a normal user\n          // else {\n          //     message.error('Unauthenticated User!')\n          //     return;\n          // }\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n    message.error(\"에러입니다.\");\n  };\n\n  getVerificationCodeForPassword = () => {\n    //console.log(this.state.mobile_no_for_password);\n\n    if (this.state.mobile_no_for_password == \"\") {\n      message.error(\"핸드폰 번호를 입력해주세요\");\n      return;\n    }\n    this.setState({\n      verificationCodeLoadingForPassword: true,\n    });\n\n    axios\n      .post(BaseUrl + \"/memberapi/SendOTPFindPassword\", {\n        mobile: this.state.mobile_no_for_password,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"인증번호가 발송되었습니다.\");\n          this.setState({\n            showVerification: true, // show the textbox\n            // visible: true,           // show the modal\n          });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({\n          verificationCodeLoadingForPassword: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({\n          verificationCodeLoadingForPassword: false,\n        });\n      });\n  };\n\n  onFinishPassword = (values) => {\n    console.log(\"Success:\", values);\n\n    var mobile = values.mobile.toString();\n    var verificationcode = values.verify_number.toString();\n\n    axios\n      .post(BaseUrl + \"/memberapi/ConfirmOTPEmailResetPassword\", {\n        mobile: mobile,\n        verificationcode: verificationcode,\n        mode: \"1\",\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"인증이 완료되었습니다.\");\n\n          this.setState({ userIdForPassReset: res.data.data.id }, () => {});\n\n          this.setState({ redirectToChangePassword: true });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  render() {\n    console.log(\"-------------->\", this.state);\n    const {\n      mem_name,\n      mobile_no_for_email,\n      verificationCodeLoadingForEmail,\n      verificationCodeLoadingForPassword,\n      mobile_no_for_password,\n      userEmail,\n      userIdForPassReset,\n    } = this.state;\n    // {\n    //   console.log(\"this.props\", this.props.location.state.mode);\n    // }\n    if (this.state.redirectToGetEmail) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/show-email-addresss\",\n            state: { userEmail: userEmail },\n          }}\n        />\n      );\n    }\n\n    if (this.state.redirectToChangePassword) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/change-password\",\n            state: { userId: userIdForPassReset },\n          }}\n        />\n      );\n    }\n\n    return (\n      <Layout className=\"login-bg cs-form2 cs-find-pass-email\">\n        <WithoutAuthHeader />\n\n        <Content className=\"login-content cs-content-wrapper\">\n          <Row className=\"cs-form-outer\">\n            <div className=\"cs-back-btn\">\n              <Button\n                type=\"default\"\n                icon={<ArrowLeftOutlined />}\n                size=\"large\"\n                shape=\"circle\"\n                onClick={GoBack}\n              />\n            </div>\n\n            <div className=\"form2-main\">\n              <div className=\"cs-form2-title-wrapper\">\n              <svg width=\"90\" height=\"50\" viewBox=\"0 0 90 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0322 38.957L24.9821 27.8843V27.8022H17.4965V24.1113H30.8556V27.6108L22.8784 38.7108V38.7928H30.8283V42.4837H17.0322V38.957Z\" fill=\"white\"/>\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.6432 33.9806H39.9051C39.9051 31.9303 39.2219 31.1921 37.856 31.1921C36.8179 31.1921 35.8344 31.7934 35.6432 33.9806ZM30.9443 35.5663V35.2109C30.9443 30.8639 33.6488 28.1299 37.856 28.1299C42.5822 28.1299 44.358 30.7819 44.358 35.4023V36.6052H35.6705C35.9437 38.8199 37.2004 39.4486 39.5771 39.4486C41.2435 39.4486 42.6916 39.0385 43.7842 38.6011V41.4716C42.7188 42.1006 40.9703 42.7294 38.3751 42.7294C33.3756 42.7294 30.9443 40.2142 30.9443 35.5663Z\" fill=\"white\"/>\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.8116 33.9806H54.0733C54.0733 31.9303 53.3904 31.1921 52.0245 31.1921C50.9865 31.1921 50.0029 31.7934 49.8116 33.9806ZM45.1128 35.5663V35.2109C45.1128 30.8639 47.8173 28.1299 52.0245 28.1299C56.7508 28.1299 58.5265 30.7819 58.5265 35.4023V36.6052H49.8391C50.1123 38.8199 51.3689 39.4486 53.7455 39.4486C55.4122 39.4486 56.8598 39.0385 57.9527 38.6011V41.4716C56.8873 42.1006 55.1388 42.7294 52.5436 42.7294C47.5441 42.7294 45.1128 40.2142 45.1128 35.5663Z\" fill=\"white\"/>\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M69.411 35.785V35.3474C69.411 32.4222 68.5093 31.7113 66.9249 31.7113C65.9689 31.7113 65.2312 31.9847 64.8213 32.2581V39.0384C65.2312 39.3119 65.9689 39.5578 66.761 39.5578C68.4276 39.5578 69.411 38.8198 69.411 35.785ZM60.1772 28.4032H64.6575V29.5789H64.794C65.7228 28.6766 66.9797 28.1572 68.8646 28.1572C71.5964 28.1572 74.1646 29.7701 74.1646 34.9101V35.2382C74.1646 40.7881 71.5146 42.7292 67.6626 42.7292C66.242 42.7292 65.3404 42.456 64.8213 42.2371V46.5841H60.1772V28.4032Z\" fill=\"white\"/>\n                <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"75\" y=\"28\" width=\"12\" height=\"15\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.3237 28.1299H86.4154V42.7293H75.3237V28.1299Z\" fill=\"white\"/>\n                </mask>\n                <g mask=\"url(#mask0)\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.4059 41.7997V38.6829C76.4984 39.0931 77.6734 39.5033 79.5856 39.5033C81.2793 39.5033 81.9622 39.0931 81.9622 38.3276C81.9622 37.6441 81.5523 37.3982 80.3503 37.2613L79.0666 37.0701C76.6623 36.7148 75.3237 35.4022 75.3237 32.6683C75.3237 29.8524 77.1814 28.1299 81.088 28.1299C83.1095 28.1299 84.4757 28.4033 85.5412 28.8681V31.9574C84.6397 31.6842 83.3556 31.3287 81.6892 31.3287C80.296 31.3287 79.6401 31.6842 79.6401 32.4223C79.6401 33.1057 80.132 33.3519 81.252 33.5159L82.5634 33.6799C85.4044 34.0625 86.4155 35.5937 86.4155 38.0268C86.4155 41.1161 84.4757 42.7293 80.2685 42.7293C78.3836 42.7293 76.5258 42.3738 75.4059 41.7997Z\" fill=\"white\"/>\n                </g>\n                <mask id=\"mask1\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"2\" y=\"3\" width=\"41\" height=\"40\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 3.10254H42.4811V42.4739H2V3.10254Z\" fill=\"white\"/>\n                </mask>\n                <g mask=\"url(#mask1)\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.4811 14.55L22.2486 3.10254L2 14.55V42.4739H13.6992V36.177H8.02327V18.7711L22.2469 10.8631L27.8278 13.794L36.4579 18.3263V22.0821H42.4811V14.55Z\" fill=\"white\"/>\n                </g>\n                </svg>\n\n                <h1 className=\"cs-form2-title cs-title1\">사이트에 오신걸 </h1>\n              </div>\n              <h1 className=\"cs-form2-title\">환영합니다!</h1>\n\n              <Tabs defaultActiveKey=\"1\" className=\"findpass-tab\" centered>\n                <TabPane\n                  tab=\"&nbsp; 비밀번호 찾기 &nbsp;\"\n                  key={this.props.location.state.mode == 1 ? 1 : 2}\n                >\n                  <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinishPassword}\n                    onFinishFailed={this.onFinishFailed}\n                  >\n                    {/* <Form.Item\n                                            label=\"\"\n                                            name=\"mobile_number\"\n                                            rules={[{ required: true, message: '핸드폰 번호를 입력해 주세요!' }]}\n\n                                        >\n                                            <Input placeholder=\"Mobile Number\" className=\"login-input\" />\n                                        </Form.Item> */}\n                    <Row className=\"cs-dcinput-wrapper\">\n                      <Col xs={24} sm={24} lg={24}>\n                        <Form.Item\n                          label=\"\"\n                          name=\"mobile\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"핸드폰 번호를 입력해 주세요!\",\n                            },\n                          ]}\n                          value={mobile_no_for_password}\n                          onChange={(e) =>\n                            this.setState({\n                              mobile_no_for_password: e.target.value,\n                            })\n                          }\n                        >\n                          <Input\n                            placeholder=\"휴대폰번호를 입력해주세요.\"\n                            className=\"login-input cs-input2\"\n                          />\n                        </Form.Item>\n                        <Button\n                          loading={verificationCodeLoadingForPassword}\n                          className=\"theme-btn cs-form2-btn2\"\n                          onClick={this.getVerificationCodeForPassword}\n                        >\n                          인증번호 보내기\n                        </Button>\n                      </Col>\n                    </Row>\n                    <Form.Item\n                      label=\"\"\n                      name=\"verify_number\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"인증번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"인증번호를 입력해주세요.\"\n                        className=\"login-input cs-input2\"\n                      />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                      <Button\n                        block\n                        type=\"primary\"\n                        shape=\"round\"\n                        htmlType=\"submit\"\n                        className=\"login-btn-bg cs-form2-btn\"\n                      >\n                        비밀번호 찾기\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                </TabPane>\n\n                <TabPane\n                  tab=\"&nbsp; 이메일 찾기 &nbsp;\"\n                  key={this.props.location.state.mode == 2 ? 1 : 2}\n                >\n                  <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                  >\n                    <Form.Item\n                      label=\"\"\n                      name=\"name\"\n                      rules={[\n                        { required: true, message: \"이름을 입력해 주세요!\" },\n                      ]}\n                      value={mem_name}\n                      onChange={(e) =>\n                        this.setState({ mem_name: e.target.value })\n                      }\n                    >\n                      <Input\n                        placeholder=\"이름을 입력해주세요.\"\n                        className=\"login-input cs-input2\"\n                      />\n                    </Form.Item>\n\n                    <Row className=\"cs-dcinput-wrapper\">\n                      <Col xs={24} sm={24} lg={24}>\n                        <Form.Item\n                          label=\"\"\n                          name=\"mobile_number\"\n                          rules={[\n                            {\n                              required: true,\n                              message: \"핸드폰 번호를 입력해 주세요!\",\n                            },\n                          ]}\n                          value={mobile_no_for_email}\n                          onChange={(e) =>\n                            this.setState({\n                              mobile_no_for_email: e.target.value,\n                            })\n                          }\n                        >\n                          <Input\n                            placeholder=\"휴대폰번호를 입력해주세요.\"\n                            className=\"login-input cs-input2\"\n                          />\n                        </Form.Item>\n                        <Button\n                          loading={verificationCodeLoadingForEmail}\n                          className=\"theme-btn cs-form2-btn2\"\n                          onClick={this.getVerificationCodeForEmail}\n                        >\n                          인증번호 보내기\n                        </Button>\n                      </Col>\n                    </Row>\n\n                    <Form.Item\n                      label=\"\"\n                      name=\"verify_number\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"인증번호를 입력해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        placeholder=\"인증번호를 입력해주세요.\"\n                        className=\"login-input cs-input2\"\n                      />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                      <Button\n                        block\n                        type=\"primary\"\n                        shape=\"round\"\n                        htmlType=\"submit\"\n                        className=\"login-btn-bg cs-form2-btn\"\n                      >\n                        이메일 찾기\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                </TabPane>\n              </Tabs>\n\n              {/* <LoginFormFooter /> */}\n            </div>\n          </Row>\n        </Content>\n\n        <WithoutAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default FindPassword;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/RegisterPropertyStepThree.js",["678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  Steps,\n  Radio,\n  Select,\n  Tag,\n  DatePicker,\n  Upload,\n  message,\n  InputNumber,\n} from \"antd\";\n\nimport {\n  UploadOutlined,\n  SearchOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\nimport history from \"./history\";\nimport requiredIcon from \"../images/required.png\";\n// import NumericInput from \"../common/NumericInput\";\nimport MobileNumericInput from \"../common/MobileNumericInput\";\nimport InputMask from \"react-input-mask\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Step } = Steps;\nconst requiiredIconStyle = {\n  marginTop: \"-8px\",\n  width: \"12px\",\n};\n\nclass RegisterPropertyStepThree extends Component {\n  formRef = React.createRef();\n\n  state = {\n    showVerification: false,\n    loading: false,\n    visible: false,\n    noRegisteredModalvisible: false,\n    mem_name: \"\",\n    mobile_no_used: \"\",\n    verificationBtn: \"인증번호 받기\",\n    okBtn: \"확인\",\n    mobile_no: \"\",\n    btndisable: true,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  // onMobileChange = (e) => {\n  //   this.setState({ mobile_no: mobileNumber });\n  // };\n  noRegisteredModalvisible = () => {\n    this.setState({\n      noRegisteredModalvisible: true,\n    });\n  };\n\n  handleOkMember = () => {\n    this.setState({ loading: true });\n    axios\n      .post(BaseUrl + \"/propertyapi/confirmProperty\", {\n        //name: this.state.mem_name,\n        propertyId: this.props.location.state.id, // this.state.mobile_no '9888295279'\n        status: true,\n      })\n      .then(async (res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n          // setTimeout(() => {\n          this.setState({ loading: false, visible: false });\n          history.push(\"/property-processing\");\n\n          //window.location = \"/register-property\";\n          // }, 1500);\n\n          // biztalk 내놓기 접수 requset here\n          const { data } = await axios.get(\n            `http://${process.env.REACT_APP_KAKAO_HOST}:${process.env.REACT_APP_BACKEND_PORT}/register`,\n            {\n              params: {\n                username: this.state.mem_name,\n                phone: this.state.mobile_no,\n              },\n            }\n          );\n          console.log(data);\n        } else {\n          message.error(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  handleOkNonMember = () => {\n    this.setState({ loading: true });\n    axios\n      .post(BaseUrl + \"/propertyapi/confirmProperty\", {\n        //name: this.state.mem_name,\n        propertyId: this.props.location.state.id, // this.state.mobile_no '9888295279'\n        status: true,\n      })\n      .then(async (res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n          // setTimeout(() => {\n          this.setState({ loading: false, visible: false });\n          history.push(\"/\");\n\n          //window.location = \"/register-property\";\n          // }, 1500);\n\n          // biztalk 내놓기 접수 requset here\n          const { data } = await axios.get(\n            `http://${process.env.REACT_APP_KAKAO_HOST}:${process.env.REACT_APP_BACKEND_PORT}/register`,\n            {\n              params: {\n                username: this.state.mem_name,\n                phone: this.state.mobile_no,\n              },\n            }\n          );\n          console.log(data);\n        } else {\n          message.error(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      visible: false,\n      noRegisteredModalvisible: false,\n    });\n    history.push(\"/register-property\");\n  };\n\n  getVerificationCode = () => {\n    console.log(\"????\", this.state.mobile_no);\n    if (this.state.mobile_no == 0 || !this.state.mobile_no) {\n      // console.log(\"hello\");\n      message.warning(\"핸드폰 번호를 입력해주세요\");\n      return;\n    }\n\n    this.setState({\n      verificationCodeLoading: true,\n    });\n    // this.setState({\n    //\n    //   showVerification: true, // show the textbox\n    //   // visible: true,           // show the modal\n    // });\n\n    axios\n      .post(BaseUrl + \"/propertyapi/sendOTPOnMobile\", {\n        //name: this.state.mem_name,\n        mobile: this.state.mobile_no, // this.state.mobile_no '9888295279'\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"인증번호가 발송되었습니다.\");\n          this.setState({\n            //verificationBtn: \"receive verification code\",\n            showVerification: true,\n            verificationBtn: \"인증번호 재전송\", // show the textbox\n            // visible: true,           // show the modal\n          });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({\n          verificationCodeLoading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({\n          verificationCodeLoading: false,\n        });\n      });\n  };\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n\n    this.setState({ loading: true });\n\n    // if (this.state.mobile_no_used != values.mobile_no) {\n    //   message.error(\n    //     \"Sorry!! Your mobile number is changed from the previous one\"\n    //   );\n    //   return;\n    // }\n\n    // var mobile = values.mobile_no.toString();\n    // var verificationcode = values.verification_code.toString();\n\n    axios\n      .post(BaseUrl + \"/propertyapi/addPropertyThirdStep\", {\n        phone: this.state.mobile_no,\n        otp: values.verification_code,\n        name: values.name,\n        propertyId: this.props.location.state.id,\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"인증이 완료되었습니다.\");\n\n          const cookies = new Cookies();\n          var cookieName = btoa(\"zeeps\");\n          // console.log('encodedStringBtoA', cookieName);\n          var finalCookieName = \"\";\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n          var encodedStringBtoA = btoa(\"authorized\");\n          // console.log('encodedStringBtoA', encodedStringBtoA);\n          var finalCookieValue = \"\";\n          finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n          // already logged in user\n          if (cookies.get(finalCookieName) == finalCookieValue) {\n            console.log(\n              \"this.props.location.state.editData.length\",\n              this.props.location.state.editData\n            );\n            console.log(\n              \"----------------->\",\n              this.props.location.state.editData\n            );\n            if (this.props.location.state.editData.phone) {\n              history.push(\"/property-processing\");\n            }\n            this.setState({\n              visible: true, // show the modal\n            });\n          }\n          // Not logged in user\n          else if (\n            cookies.get(finalCookieName) == undefined ||\n            cookies.get(finalCookieName) == \"undefined\"\n          ) {\n            this.setState({\n              noRegisteredModalvisible: true, // show the non member modal\n            });\n          }\n          // Not a normal user\n          else {\n            message.error(\"확인이 되지 않은 회원입니다.\");\n            return;\n          }\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n  componentDidMount() {\n    console.log(\"this.props\", this.props);\n    console.log(\"this.props.location.state\", this.props.location.state);\n    // this.formRef.current.setFieldsValue({\n    //   mobile_no: \"00123456789\",\n    // });\n    // return;\n    if (!this.props.location.state) {\n      // console.log(\"this.state\", this.state);\n      history.push(\"/register-property\");\n      return;\n    }\n    if (this.props.location.state.editData) {\n      this.setState({ mobile_no: this.props.location.state.editData.phone });\n      this.formRef.current.setFieldsValue({\n        name: this.props.location.state.editData.name,\n        mobile_no: this.props.location.state.editData.phone,\n      });\n    }\n\n    // if (this.props.location.state.editData) {\n    //   this.formRef.current.setFieldsValue({\n    //     rent_price: this.props.location.state.editData.propertyRent,\n    //     deposit: this.props.location.state.editData.propertyDeposite,\n    //     sales_price: this.props.location.state.editData.propertyCost,\n    //   });\n    //}\n  }\n\n  render() {\n    console.log(\"this.formRef\", this.state);\n\n    const {\n      visible,\n      noRegisteredModalvisible,\n      loading,\n      mem_name,\n      mobile_no,\n      verificationCodeLoading,\n    } = this.state;\n\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n      <Layout className=\"register-property-layout\">\n        <WithAuthHeader />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"text-center cs-main-block\">\n                    <Row>\n                      <Col className=\" mb-15\" span={24}>\n                        <h2 className=\"cs-h2\">본인인증</h2>\n                      </Col>\n\n                      <Col className=\"mb-15 cs-p-80\" span={24}>\n                        <Steps progressDot current={2} className=\"cs-step\">\n                          <Step title=\"1단계\" description=\"\" />\n                          <Step title=\"2단계\" subTitle=\"\" description=\"\" />\n                          <Step title=\"3단계\" description=\"\" />\n                        </Steps>\n                      </Col>\n\n                      <Col className=\" mb-15\" span={24}>\n                        <h3 className=\"cs-h3\">\n                          마지막으로 본인 인증을 완료해주세요!\n                        </h3>\n                      </Col>\n                    </Row>\n\n                    <Divider />\n\n                    <Form\n                      // {...layout}\n                      name=\"basic\"\n                      initialValues={{ remember: true }}\n                      onFinish={this.onFinish}\n                      onFinishFailed={onFinishFailed}\n                      ref={this.formRef}\n                    >\n                      <Row>\n                        <Col span={24} className=\"text-left cs-font-28 mb-15\">\n                          이름{\" \"}\n                          <img\n                            style={requiiredIconStyle}\n                            src={requiredIcon}\n                            className=\"cs-validation-dot\"\n                          />{\" \"}\n                        </Col>\n                        <Col className=\"text-left\" span={24}>\n                          <Form.Item\n                            label=\"\"\n                            name=\"name\"\n                            rules={[\n                              {\n                                required: true,\n                                message: \"이름을 입력해 주세요!\",\n                              },\n                            ]}\n                            value={mem_name}\n                            onChange={(e) =>\n                              this.setState({ mem_name: e.target.value })\n                            }\n                          >\n                            <Input placeholder=\"회원명\" />\n                          </Form.Item>\n                        </Col>\n\n                        <Col span={24} className=\"text-left cs-font-28 mb-15\">\n                          휴대폰 번호{\" \"}\n                          <img\n                            style={requiiredIconStyle}\n                            src={requiredIcon}\n                            className=\"cs-validation-dot\"\n                          />{\" \"}\n                        </Col>\n                        <Col className=\"text-left\" span={24}>\n                          <Form.Item\n                            label=\"\"\n                            name=\"mobile_no\"\n                            rules={[\n                              {\n                                required: true,\n                                message: \"핸드폰 번호를 입력해 주세요!\",\n                              },\n                            ]}\n                            onChange={(e) => {\n                              const mobileNumber = e.target.value.replaceAll(\n                                \"-\",\n                                \"\"\n                              );\n                              this.setState({ mobile_no: mobileNumber });\n                            }}\n                          >\n                            {/* <MobileNumericInput\n                              \n                             \n                              value={this.state.mobile_no}\n                              placeholder=\"010-1234-5678\"\n                             \n                              maxLength={11}\n                            /> */}\n                            <InputMask\n                              style={{\n                                width: \"100%\",\n                                position: \"relative\",\n                              }}\n                              className=\"ant-input\"\n                              mask=\"099-9999-9999\"\n                              // onChange={this.onMobileChange}\n                              placeholder=\"010-1234-5678\"\n                              maskChar=\"\"\n                              // value={\"01023453554\"}\n                            />\n                          </Form.Item>\n                          <Button\n                            loading={verificationCodeLoading}\n                            className=\"cs-verification-button\"\n                            type=\"link\"\n                            onClick={this.getVerificationCode}\n                            disabled={this.state.mobile_no == \"\" ? true : false}\n                          >\n                            {this.state.verificationBtn}\n                          </Button>\n                        </Col>\n\n                        {/* <Col span={9} className=\"text-right\"> */}\n\n                        {/* </Col> */}\n\n                        {this.state.showVerification ? (\n                          <Col className=\"\" span={24}>\n                            <Col\n                              span={24}\n                              className=\"text-left cs-font-28 mb-15\"\n                            >\n                              인증번호{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />{\" \"}\n                            </Col>\n                            <Col\n                              span={24}\n                              className=\"text-left cs-font-28 mb-15\"\n                            >\n                              <Form.Item\n                                label=\"\"\n                                name=\"verification_code\"\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"인증번호를 입력해 주세요!\",\n                                  },\n                                ]}\n                              >\n                                <Input\n                                  style={{\n                                    width: \"100%\",\n                                    position: \"relative\",\n                                  }}\n                                  className=\"cs-pr180\"\n                                  onChange={() =>\n                                    this.setState({\n                                      btndisable: false,\n                                    })\n                                  }\n                                />\n                              </Form.Item>\n                              <Button\n                                className=\"cs-verification-button\"\n                                style={{ width: \"100px\" }}\n                                type=\"link\"\n                              >\n                                {this.state.okBtn}\n                              </Button>\n                            </Col>\n                          </Col>\n                        ) : (\n                          \"\"\n                        )}\n\n                        <Col span={24} className=\"mb-15 text-left\">\n                          <Form.Item>\n                            <Button\n                              loading={loading}\n                              disabled={this.state.btndisable}\n                              className=\"theme-btn cs-submit-button\"\n                              type=\"primary\"\n                              htmlType=\"submit\"\n                              style={{ width: \"100%\" }}\n                            >\n                              인증하기\n                            </Button>\n                          </Form.Item>\n                        </Col>\n\n                        {/* <Col span={24} className=\"mb-15 text-left\">\n                                                    <Form.Item >\n                                                        <Button onClick={this.noRegisteredModalvisible} className=\"theme-btn\" type=\"primary\" style={{ 'width': '100%' }}>\n                                                            Non Registered Modal\n                                                        </Button>\n                                                    </Form.Item>\n                                                </Col> */}\n                      </Row>{\" \"}\n                      {/* Form row end */}\n                    </Form>\n                  </Col>\n                </Row>\n\n                <Modal\n                  visible={visible}\n                  title=\"매물등록에 동의하시나요?\"\n                  onOk={this.handleOkMember}\n                  onCancel={this.handleCancel}\n                  footer={null}\n                  closable={false}\n                  className=\"cs-popup cs-contract-agree-popup\"\n                >\n                  <Row>\n                    <p>\n                      매물등록에 동의하시면 매물이 최종적으로 등록됩니다. 정말\n                      매물등록에 동의하시나요?\n                    </p>\n\n                    <Space direction=\"vertical\" className=\"width100\">\n                      <Col span={24}>\n                        <Button\n                          className=\"theme-btn cs-btn3\"\n                          key=\"submit\"\n                          type=\"default\"\n                          loading={loading}\n                          onClick={this.handleOkMember}\n                        >\n                          모든 사항을 확인 후 동의합니다.\n                        </Button>\n                      </Col>\n\n                      <Col span={24}>\n                        <Button\n                          key=\"back\"\n                          className=\"cs-btn4\"\n                          onClick={this.handleCancel}\n                        >\n                          아니오, 취소할게요.\n                        </Button>\n                      </Col>\n                    </Space>\n                  </Row>\n                </Modal>\n\n                {/* non-sign up user pop up  */}\n                <Modal\n                  visible={noRegisteredModalvisible}\n                  title=\"매물등록이 완료되었습니다.\"\n                  onOk={this.handleOkNonMember}\n                  onCancel={this.handleCancel}\n                  closable={false}\n                  footer={null}\n                  className=\"cs-popup cs-nm-contract-agree-popup\"\n                >\n                  <Row>\n                    <p>\n                      담당자가 배정될 예정입니다.\n                      <br />\n                      배정이 완료되면 연락을 드리오니 기다려 주세요. :){\" \"}\n                    </p>\n                    <div className=\"desc\">\n                      *회원가입을 하시면 내가 등록한 매물의 정보와 진행상황을\n                      확인하실 수 있습니다.*{\" \"}\n                    </div>\n                    <Space direction=\"vertical\" className=\"width100\">\n                      <Col span={24}>\n                        <Button\n                          className=\"theme-btn cs-btn3\"\n                          key=\"submit\"\n                          type=\"default\"\n                          loading={loading}\n                          onClick={this.handleOkNonMember}\n                        >\n                          네, 확인했습니다. 홈으로 돌아가기\n                        </Button>\n                      </Col>\n\n                      <Col span={24}>\n                        <Button\n                          key=\"back\"\n                          className=\"cs-btn4\"\n                          onClick={this.handleCancel}\n                        >\n                          아니오, 취소할게요.\n                        </Button>\n                      </Col>\n                    </Space>\n                  </Row>\n                </Modal>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterPropertyStepThree;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/MemberSettings.js",["709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  message,\n} from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport MemberSettingsAside from \"./member-settings-aside\";\nimport ReactExport from \"react-export-excel\";\nimport moment from \"moment\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst regLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { offset: 0, span: 20 },\n};\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction GoBack() {\n  window.history.back();\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"이메일\",\n    dataIndex: \"email\",\n  },\n  {\n    title: \"이름\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"핸드폰 번호 \",\n    dataIndex: \"mobile\",\n  },\n  {\n    title: \"회원 가입일\",\n    dataIndex: \"sign_up_date\",\n  },\n  {\n    title: \"최종 로그인\",\n    dataIndex: \"last_login\",\n  },\n  {\n    title: \"정보수정\",\n    dataIndex: \"setting\",\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    number: \"1\",\n    email: \"someone@gmail.com\",\n    name: \"someone\",\n    mobile: \"123456789\",\n    sign_up_date: \"01-01-2020\",\n    last_login: \"20-01-2020\",\n    setting: \"setting\",\n  },\n  {\n    key: \"2\",\n    number: \"2\",\n    email: \"someone@gmail.com\",\n    name: \"someone\",\n    mobile: \"123456789\",\n    sign_up_date: \"01-01-2020\",\n    last_login: \"20-01-2020\",\n    setting: \"setting\",\n  },\n];\n\n// rowSelection object indicates the need for row selection\n// const rowSelection = {\n//   onChange: (selectedRowKeys, selectedRows) => {\n//     console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n//   },\n//   getCheckboxProps: record => ({\n//     disabled: record.name === 'Disabled User', // Column configuration not to be checked\n//     name: record.name,\n//   }),\n// };\n\nclass MemberSettings extends Component {\n  state = {\n    allData: \"\",\n    minDate: \"\",\n    maxDate: \"\",\n    totalrecord: 0,\n    selectedRowKeys: [],\n    loading: false,\n    delloading: false,\n    dataForExcel: [],\n    beginExcelDownload: false,\n    finalExcelData: [],\n    size: \"large\",\n  };\n\n  // rowSelection = selectedRowKeys => {\n  //   // console.log('selectedRowKeys changed: ', selectedRowKeys);\n  //   this.setState({\n  //      selectedRowKeys: selectedRowKeys\n  //   }, () => {\n\n  //     console.log(this.state.selectedRowKeys)\n  //   });\n\n  // };\n\n  onDateChange = (date, dateString) => {\n    // console.log(dateString[0]);\n    this.setState({\n      minDate: dateString[0],\n      maxDate: dateString[1],\n    });\n  };\n\n  componentDidMount() {\n    console.log(\"API calll----------------\");\n    axios\n      .post(BaseUrl + \"/adminapi/SeachMemberDetail\", {\n        name: \"\",\n        minDate: \"\",\n        maxDate: \"\",\n      })\n      .then((response) => {\n        console.log(\"Got responce-----------\");\n        console.log(response);\n        this.setState({ allData: \"\" });\n\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          var AllData = response.data.data.members || [];\n\n          console.log(\"AllData----------\", AllData);\n          this.setState({ dataForExcel: response.data.data.members });\n\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              email: AllData[i].email,\n              name: AllData[i].name,\n              mobile: AllData[i].mobile,\n              sign_up_date: moment(AllData[i].signupdate).format(\"YYYY.MM.DD\"),\n              last_login: moment(new Date(AllData[i].lastlogindate)).format(\n                \"YYYY.MM.DD\"\n              ),\n              setting: (\n                <Button className=\"jc-cs-editlink\">\n                  {\" \"}\n                  <Link to={\"edit-member/\" + AllData[i].id}>수정</Link>\n                </Button>\n              ),\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n            totalrecord: response.data.data.total,\n            finalExcelData: finalData,\n            loading: false,\n          });\n\n          console.log(\"this.state.finalExcelData\", this.state.finalExcelData);\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  onFinish = (values) => {\n    this.setState({ loading: true });\n    // console.log('Success:', values);\n    axios\n      .post(BaseUrl + \"/adminapi/SeachMemberDetail\", {\n        name: values.search_keyword,\n        minDate: this.state.minDate,\n        maxDate: this.state.maxDate,\n      })\n      .then((res) => {\n        this.setState({ allData: \"\" });\n        console.log(res);\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var AllData = res.data.data.members;\n\n          // console.log(AllData)\n          this.setState({ dataForExcel: res.data.data.members });\n          var finalData = [];\n\n          for (var i = 0; i < AllData.length; i++) {\n            finalData[i] = {\n              key: AllData[i].id,\n              id: AllData[i].id,\n              number: i + 1,\n              email: AllData[i].email,\n              name: AllData[i].name,\n              mobile: AllData[i].mobile,\n              sign_up_date: AllData[i].signupdate,\n              last_login: AllData[i].lastlogindate,\n              setting: (\n                <Button className=\"jc-cs-editlink\">\n                  {\" \"}\n                  <Link to={\"edit-member/\" + AllData[i].id}>수정</Link>\n                </Button>\n              ),\n            };\n          }\n\n          // console.log(finalData)\n          this.setState({\n            allData: finalData,\n            totalrecord: res.data.data.total,\n            loading: false,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ loading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  onSelectChange = (selectedRowKeys) => {\n    var selected = [];\n    var allData = [];\n    var finalArray = [];\n\n    allData = this.state.dataForExcel;\n\n    if (this.state.selectedRowKeys.length >= 0) {\n      selected = selectedRowKeys;\n    } else {\n      selected = allData.map((x) => x.id);\n    }\n\n    for (var i = 0; i < selected.length; i++) {\n      for (var j = 0; j < allData.length; j++) {\n        if (selected[i] == allData[j].id) {\n          finalArray[i] = {\n            key: allData[j].id,\n            id: allData[j].id,\n            number: i + 1,\n            email: allData[j].email,\n            name: allData[j].name,\n            mobile: allData[j].mobile,\n            sign_up_date: allData[j].signupdate,\n            last_login: allData[j].lastlogindate,\n          };\n        }\n      }\n    }\n\n    finalArray.length\n      ? this.setState(\n          {\n            finalExcelData: finalArray,\n            selectedRowKeys,\n          },\n          () => {}\n        )\n      : this.setState(\n          {\n            finalExcelData: this.state.allData,\n            selectedRowKeys,\n          },\n          () => {}\n        );\n  };\n\n  deleteRecords = () => {\n    this.setState({ delloading: true });\n    axios\n      .post(BaseUrl + \"/adminapi/DeleteMemberDetail\", {\n        id: this.state.selectedRowKeys,\n      })\n      .then((res) => {\n        console.log(res);\n        this.setState({ allData: \"\" });\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          axios\n            .get(BaseUrl + \"/adminapi/GetAllMembers\")\n            .then((response) => {\n              if (response.data.status == 1 || response.data.status == \"1\") {\n                // console.log(\"dddd: \", data.data.id);\n\n                var AllData = response.data.data;\n\n                // console.log(AllData)\n\n                var finalData = [];\n\n                for (var i = 0; i < AllData.length; i++) {\n                  finalData[i] = {\n                    key: AllData[i].id,\n                    id: AllData[i].id,\n                    number: i + 1,\n                    email: AllData[i].email,\n                    name: AllData[i].name,\n                    mobile: AllData[i].mobile,\n                    sign_up_date: AllData[i].signupdate,\n                    last_login: AllData[i].lastlogindate,\n                    setting: <Button>Setting</Button>,\n                  };\n                }\n\n                // console.log(finalData)\n                this.setState({\n                  allData: finalData,\n                  delloading: false,\n                });\n\n                message.success(\"삭제되었습니다\");\n              } else {\n                this.setState({ delloading: false });\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              this.setState({ delloading: false });\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n        } else {\n          this.setState({ delloading: false });\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        this.setState({ delloading: false });\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    // console.log(this.state.selectedRowKeys)\n    const { loading, selectedRowKeys, delloading, size } = this.state;\n\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <MemberSettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <Row>\n                  <Col\n                    className=\"cs-admin-basic-info flex-center\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                  >\n                    {/* <p>Member list  </p> */}\n                    <p className=\"m-0\">회원 리스트</p>\n                  </Col>\n                  <Col\n                    className=\"cs-admin-basic-info-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      size={size}\n                    >\n                      <Link to=\"/register-member\">회원 등록</Link>\n                    </Button>\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n                  <Col className=\"cs-admin-company\" xs={{ span: 24 }}>\n                    회원 검색\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"검색\"\n                      name=\"search_keyword\"\n                      rules={\n                        [\n                          // { required: true, message: '담당자이름을 검색해주세요.' }\n                        ]\n                      }\n                    >\n                      <Input\n                        placeholder=\"검색어를 입력해주세요.\"\n                        className=\"cs-ml20\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member cs-admin-member-range\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Form.Item\n                      {...compLayout}\n                      label=\"회원 가입일\"\n                      name=\"sign_up_date\"\n                      rules={\n                        [\n                          // { required: true, message: 'Please select date!' }\n                        ]\n                      }\n                    >\n                      {/* <Space direction=\"vertical\" size={12}> */}\n                      <RangePicker\n                        onChange={this.onDateChange}\n                        placeholder={[\"YYYY.MM.DD\", \"YYYY.MM.DD\"]}\n                        className=\"cs-ml20\"\n                      />\n                      {/* </Space> */}\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }}>\n                    {/* <p>Member list  </p> */}\n                  </Col>\n                  <Col\n                    className=\"cs-admin-member-button\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Form.Item {...compLayout}>\n                      <Button\n                        loading={loading}\n                        type=\"primary\"\n                        className=\"theme-btn float-right\"\n                        htmlType=\"submit\"\n                        shape=\"round\"\n                        size={size}\n                      >\n                        검색\n                      </Button>\n                    </Form.Item>\n                  </Col>\n\n                  <Divider />\n                  <div class=\"cs-admin-member-des\">\n                    <p>\n                      검색 {this.state.allData.length}개 / 전체{\" \"}\n                      {this.state.totalrecord}개\n                    </p>\n                  </div>\n\n                  <Col\n                    className=\"cs-admin-member-table\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 24 }}\n                  >\n                    <Table\n                      // rowSelection={{\n                      //   type: 'checkbox',\n                      //   ...rowSelection,\n                      // }}\n                      rowSelection={rowSelection}\n                      columns={columns}\n                      dataSource={this.state.allData}\n                    />\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-button-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 12 }}\n                    lg={{ span: 12 }}\n                  >\n                    <Button\n                      loading={delloading}\n                      type=\"primary\"\n                      className=\"theme-btn \"\n                      disabled={!this.state.selectedRowKeys.length}\n                      size={size}\n                      shape=\"round\"\n                      onClick={this.deleteRecords}\n                    >\n                      선택 탈퇴처리\n                    </Button>\n                  </Col>\n\n                  <Col\n                    className=\"cs-admin-member-button-inner\"\n                    xs={{ span: 24 }}\n                    sm={{ span: 12 }}\n                    lg={{ span: 12 }}\n                  >\n                    <ExcelFile\n                      filename=\"members-list\"\n                      element={\n                        <Button\n                          type=\"primary\"\n                          size={size}\n                          className=\"theme-btn float-right\"\n                          shape=\"round\"\n                        >\n                          엑셀 다운로드\n                        </Button>\n                      }\n                    >\n                      <ExcelSheet\n                        data={this.state.finalExcelData}\n                        name=\"Members\"\n                      >\n                        <ExcelColumn label=\"S.no\" value=\"number\" />\n                        <ExcelColumn label=\"Email\" value=\"email\" />\n                        <ExcelColumn label=\"Name\" value=\"name\" />\n                        <ExcelColumn label=\"Mobile\" value=\"mobile\" />\n                        <ExcelColumn\n                          label=\"Sign Up Date\"\n                          value=\"sign_up_date\"\n                        />\n                        <ExcelColumn label=\"Last Login\" value=\"last_login\" />\n                      </ExcelSheet>\n                    </ExcelFile>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default MemberSettings;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/RegisterProperty.js",["730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  Select,\n  Upload,\n  message,\n} from \"antd\";\n\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport PropertySettingsAside from \"./property-settings-aside\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 7 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst fullLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 24 },\n};\nconst { Option } = Select;\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n  message.error(\"다시 시도해주세요.\");\n};\n\nfunction handleSelectChange(value) {\n  console.log(`selected ${value}`);\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"이름\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"지우다\",\n    dataIndex: \"delete\",\n  },\n];\n// const data = [\n//   {\n//     key: '1',\n//     number: '1',\n//     name: 'file name',\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\n//   },\n//   {\n//     key: '2',\n//     number: '2',\n//     name: 'file name',\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\n//   },\n// ];\n\nclass RegisterProperty extends Component {\n  state = {\n    maintenance_fee: [],\n    options: [],\n    selected_maintenance_fee: \"\",\n    selectedOptions: \"\",\n    test: \"\",\n  };\n\n  formRef = React.createRef();\n\n  handleMaintenancefeeChange = (value) => {\n    // console.log(`selected ${value}`);\n    var mFee = value.join(\",\");\n    this.setState({ selected_maintenance_fee: mFee });\n  };\n\n  handleOptionChange = (value) => {\n    console.log(`selected ${value}`);\n    var opt = value.join(\",\");\n    this.setState({ selectedOptions: opt });\n  };\n\n  deleteContractById = (e) => {\n    console.log(\"Content: \", e.currentTarget.dataset.id);\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .get(\n        BaseUrl +\n          \"/adminapi/DeleteContractFileById/\" +\n          e.currentTarget.dataset.id\n      )\n      .then((response) => {\n        // console.log(response.data.data)\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // get contract list\n          axios\n            .get(\n              BaseUrl + \"/adminapi/GetAllContractsByPropertyId/\" + propertyId\n            )\n            .then((res) => {\n              this.setState({ searchData: \"\" });\n              // console.log(res)\n              if (res.data.status == 1 || res.data.status == \"1\") {\n                var searchData = res.data.data;\n\n                console.log(searchData);\n\n                var searchDataResult = [];\n\n                for (var i = 0; i < searchData.length; i++) {\n                  searchDataResult[i] = {\n                    key: searchData[i].id,\n                    id: searchData[i].id,\n                    number: i + 1,\n                    name: searchData[i].contractFile,\n                    delete: (\n                      <Button\n                        data-id={searchData[i].id}\n                        onClick={this.deleteContractById}\n                      >\n                        Delete\n                      </Button>\n                    ),\n                  };\n                }\n\n                // console.log(searchDataResult)\n                this.setState({\n                  searchData: searchDataResult,\n                  loading: false,\n                });\n              } else {\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  onFinish = (values) => {\n    // this.setState({ loading: true });\n    console.log(\"Success:-\", values);\n\n    let formData = new FormData();\n\n    // formData.append(\"propertyId\", window.location.pathname.split(\"/\").pop());\n    formData.append(\"m_name\", values.m_name);\n    formData.append(\"name\", values.property_name);\n    formData.append(\"address\", values.address);\n    formData.append(\"detailAddress\", values.detail_address);\n    formData.append(\"showAddress\", values.showAddress); // public, private------------------\n    formData.append(\"areaSquare\", values.square);\n    formData.append(\"propertyType\", values.type); // Sale, rent\n    formData.append(\"elevator\", values.elevator);\n    formData.append(\"rooms\", values.number_of_rooms);\n    formData.append(\"direction\", values.direction);\n    // formData.append(\"availableMoveInStatus\", values.available_date);\n    formData.append(\"availableMoveInDate\", values.available_move_in_date);\n    // formData.append(\"isLandlord\", values.house_owner); // -----------------------------pending\n    formData.append(\"isPetAvailable\", values.pet);\n    formData.append(\"isMortgage\", values.mortgage);\n    formData.append(\"contractName\", values.contract_name);\n    formData.append(\"contractStatus\", values.contract_status);\n    formData.append(\"memberContractStatus\", \"no\");\n    formData.append(\"propertyCost\", \"0\");\n    formData.append(\"maintanceFee\", \"100\");\n    formData.append(\"propertyFeatureId\", this.state.selectedOptions); // options ids\n    formData.append(\"propertyFacilityId\", this.state.selected_maintenance_fee); //maintainence fee id\n    formData.append(\"managerComment\", values.manager_comment);\n\n    formData.append(\"mobile\", values.mobile_number);\n    formData.append(\"phone\", values.phone_no);\n    formData.append(\"email\", values.email);\n\n    // images\n    if (values.images) {\n      values.images.fileList.forEach((file) => {\n        formData.append(\"property\", file.originFileObj);\n      });\n    }\n\n    // contract files\n    if (values.contract_files) {\n      values.contract_files.fileList.forEach((file) => {\n        formData.append(\"contractfile\", file.originFileObj);\n      });\n    }\n\n    axios\n      .post(BaseUrl + \"/propertyapi/AdminInsertProperty\", formData)\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n\n          // window.location = '/register-property-step-two';\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  componentDidMount() {\n    // console.log(window.location.pathname.split(\"/\").pop())\n\n    // get maintanence fee / facilities ------------------------------------------\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllPropertyFacilities/\")\n      .then((response) => {\n        console.log(response.data.data);\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n          this.setState({\n            maintenance_fee: response.data.data,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n\n    // get options ----------------------------------------------\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllPropertyFeatures/\")\n      .then((response) => {\n        console.log(response.data.data);\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n          this.setState({\n            options: response.data.data,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const {\n      maintenance_fee,\n      options,\n      selectedOptions,\n      selected_maintenance_fee,\n      searchData,\n    } = this.state;\n    // console.log(this.state.test)\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <PropertySettingsAside />\n\n            <Content style={{ padding: \"10px 24px\" }}>\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }}>\n                    <p>부동산 편집</p>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }}>\n                    <Button\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      저장\n                    </Button>\n\n                    {/* \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider />\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <p>부동산 정보 </p>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"이름\"\n                      name=\"m_name\"\n                      rules={[\n                        { required: true, message: \"Please input name!\" },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"이메일\"\n                      name=\"email\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input email address!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"전화 번호\"\n                      name=\"phone_no\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input phone number!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"모바일 번호\"\n                      name=\"mobile_number\"\n                      rules={[\n                        { required: true, message: \"Please input mobile no!\" },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"주소\"\n                      name=\"address\"\n                      rules={[\n                        { required: true, message: \"Please input address!\" },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"상세 주소\"\n                      name=\"detail_address\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input Detail address!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"광장\"\n                      name=\"square\"\n                      rules={[\n                        { required: true, message: \"Please input square!\" },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"유형\"\n                      name=\"type\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"거래유형을 선택해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        onChange={handleSelectChange}\n                      >\n                        <Option value=\"For Sale\">판매용</Option>\n                        <Option value=\"For Rent\">전/월세</Option>\n                        <Option value=\"For Sale, For Rent\">판매용,모두</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"엘리베이터\"\n                      name=\"elevator\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"엘레베이터 여부를 선택해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"yes\">예</Option>\n                        <Option value=\"no\">아니</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"객실 수\"\n                      name=\"number_of_rooms\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input Number of rooms!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        // onChange={handleSelectChange}\n                      >\n                     <Option value=\"원룸\">원룸</Option>\n                    <Option value=\"투룸\">투룸</Option>\n                    <Option value=\"쓰리룸\">쓰리룸</Option>\n                    <Option value=\"포룸\">포룸</Option>\n                    <Option value=\"포룸+\">포룸+</Option>\n                    <Option value=\"기타\">기타</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"방향\"\n                      name=\"direction\"\n                      rules={[\n                        { required: true, message: \"Please input direction!\" },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"East\">동쪽</Option>\n                        <Option value=\"West\">서쪽</Option>\n                        <Option value=\"South\">남쪽</Option>\n                        <Option value=\"North\">북쪽</Option>\n                        <Option value=\"North-east\">북동</Option>\n                        <Option value=\"North-west\">북서</Option>\n                        <Option value=\"South-east\">남동</Option>\n                        <Option value=\"South-west\">남서</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"입주 가능 날짜\"\n                      name=\"available_move_in_date\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Available move in date !\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"집주인 연락처\"\n                      name=\"landlord_contact\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please enter Landlord contact !\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"애완 동물\"\n                      name=\"pet\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"반려동물 동거 여부를 선택해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"yes\">유효한</Option>\n                        <Option value=\"no\">사용 불가</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"주소 표시\"\n                      name=\"showAddress\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Show address !\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"public\">공공의</Option>\n                        <Option value=\"private\">은밀한</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Divider />\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"저당\"\n                      name=\"mortgage\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Mortgage  !\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"yes\">유효한</Option>\n                        <Option value=\"no\">사용 불가e</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"계약 상태\"\n                      name=\"contract_status\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Contract status !\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요\"\n                        defaultValue=\"선택해주세요\"\n                        onChange={handleSelectChange}\n                      >\n                        <Option value=\"confirmation pending\">\n                          확인 대기 중\n                        </Option>\n                        <Option value=\"confirmed\">확인</Option>\n                        <Option value=\"closed\">닫은</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <p>세부 정보 (필요한 경우)</p>\n                    {/* <Form.Item\n                      {...compLayout}\n                      label=\"Detail info(if needs)\"\n                      name=\"additional_detail_info\"\n                      rules={[{ required: false, message: 'Please select detail info!' }]}\n                    >\n                      <Input />\n                    </Form.Item> */}\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      {...compLayout}\n                      label=\"부동산 이름\"\n                      name=\"property_name\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input property name!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  <Divider />\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      // {...compLayout}\n                      label=\"선택권\"\n                      name=\"option\"\n                      rules={[\n                        { required: true, message: \"Please select option !\" },\n                      ]}\n                    >\n                      {/* {getFieldDecorator(\"option\", {\n                        rules: [\n                          {\n                            required: true,\n                            message: \"Selecciona alumnos\"\n                          }\n                        ]\n                      })(\n                        <Select\n                          size=\"large\"\n                          mode=\"multiple\"\n                          placeholder=\"Selecciona alumnos\"\n                        >\n                          {\n                          options.map((o, i) => {\n                            return <Option key={o.id}>{o.propertyFeatures}</Option>\n                          })\n                        }\n                        </Select>\n                      )} */}\n\n                      <Select\n                        mode=\"tags\"\n                        placeholder=\"Option\"\n                        onChange={this.handleOptionChange}\n                      >\n                        {options.map((o, i) => {\n                          return (\n                            <Option key={o.id}>{o.propertyFeatures}</Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      // {...compLayout}\n                      label=\"유지 보수 비용\"\n                      name=\"maintenance_fee\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select Maintenance fee !\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        mode=\"tags\"\n                        placeholder=\"Maintenance fee\"\n                        onChange={this.handleMaintenancefeeChange}\n                      >\n                        {maintenance_fee.map((m, i) => {\n                          return (\n                            <Option key={m.id}>{m.propertyFacility}</Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      label=\"매니저 \"\n                      name=\"manager\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select Manager  !\",\n                        },\n                      ]}\n                    >\n                      <Input readonly disabled />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      label=\"이미지 업로드 \"\n                      name=\"images\"\n                      rules={[\n                        { required: false, message: \"이미지를 선택해주세요\" },\n                      ]}\n                    >\n                      <Upload multiple maxCount={18} beforeUpload={() => false}>\n                        <Button icon={<UploadOutlined />}>\n                          클릭하여 업로드\n                        </Button>\n                      </Upload>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      label=\"계약 업로드\"\n                      name=\"contract_files\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select Contract files  !\",\n                        },\n                      ]}\n                    >\n                      <Upload multiple maxCount={20} beforeUpload={() => false}>\n                        <Button icon={<UploadOutlined />}>\n                          클릭하여 업로드\n                        </Button>\n                      </Upload>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      label=\"계약 명\"\n                      name=\"contract_name\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please select contract name  !\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  {/* <img src=\"https://zeepsapis.herokuapp.com/property/1610955479184-bezkoder-73190697.jpg\"/> */}\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      label=\"계약 목록\"\n                      name=\"contract_list\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select Manager  !\",\n                        },\n                      ]}\n                    >\n                      <Table\n                        // rowSelection={{\n                        //   type: 'checkbox',\n                        //   ...rowSelection,\n                        // }}\n                        // rowSelection={rowSelection}\n                        columns={columns}\n                        dataSource={searchData}\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      {...fullLayout}\n                      label=\"   관리자 코멘트\"\n                      name=\"manager_comment\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please add Manager comment !\",\n                        },\n                      ]}\n                    >\n                      <TextArea rows={4} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterProperty;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/PropertyConfirmContract.js",["752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport util from \"../../util/Util\";\nimport {\n  Layout,\n  Button,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  message,\n  Carousel,\n  Card,\n} from \"antd\";\n\nimport {\n  DownloadOutlined,\n  CheckOutlined,\n  RightCircleOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\nimport logoRound from \"../images/logo-round.svg\";\nimport docIcon from \"../images/doc-icon.png\";\nimport history from \"./history\";\nimport moment from \"moment\";\nimport KakaoMap from \"./KakaoMap\";\n\nconst axios = require(\"axios\");\nconst { Content } = Layout;\n\n// /property-detail/:id\nclass PropertyConfirmContract extends Component {\n  state = {\n    showVerification: false,\n    loading: false,\n    visible: false,\n    propertyData: [],\n    propertyImages: [],\n    CCLoading: false,\n    redirectTo404: false,\n    actualMaintainenceArray: [],\n    actualOptionsArray: [],\n    showPriceModal: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ loading: false, visible: false });\n    }, 3000);\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  confirmContract = (id) => {\n    console.log(id);\n    this.setState({ CCLoading: true });\n    axios\n      .post(BaseUrl + \"/memberapi/UpdatePropertyStatusByPropertyId\", {\n        id: id,\n        memberContractStatus: \"Completed\",\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"확인 되었습니다.\");\n\n          var propertyId = window.location.pathname.split(\"/\").pop();\n          axios\n            .get(BaseUrl + \"/adminapi/GetPropertyDetailById/\" + propertyId)\n            .then((response) => {\n              if (response.data.status == 1 || response.data.status == \"1\") {\n                // console.log(\"dddd: \", data.data.id);\n\n                //   var AllData = response.data.data;\n                console.log(response.data.data);\n\n                this.setState({\n                  propertyData: response.data.data,\n                  propertyImages: response.data.data.images,\n                });\n              } else {\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ CCLoading: false });\n        // 계약서 컨펌하기 request here\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ CCLoading: false });\n      });\n  };\n\n  componentDidMount() {\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .get(BaseUrl + \"/adminapi/GetPropertyDetailById/\" + propertyId)\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n\n          //   var AllData = response.data.data;\n          console.log(response.data.data);\n\n          const cookies = new Cookies();\n          var cookieName = btoa(\"zeeps\");\n          // console.log('encodedStringBtoA', cookieName);\n          var finalCookieName = \"\";\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n          var encodedStringBtoA = btoa(\"authorized\");\n          // console.log('encodedStringBtoA', encodedStringBtoA);\n          var finalCookieValue = \"\";\n          finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n          // already logged in user\n          if (cookies.get(finalCookieName) == finalCookieValue) {\n            if (cookies.get(\"UU\")) {\n              if (response.data.data.memberId == cookies.get(\"UU\")) {\n                this.setState({\n                  propertyData: response.data.data,\n                  propertyImages: response.data.data.images,\n                });\n\n                var maintanceFeeOfProperty = response.data.data.facilities;\n                var optionsOfProperty = response.data.data.features;\n\n                // get maintanence fee / facilities ------------------------------------------\n                var allMaintanenceData = [];\n                var allOptionsData = [];\n                var i = 0;\n                var j = 0;\n                var actualMaintainenceArray = [];\n                var actualOptionsArray = [];\n\n                axios\n                  .get(BaseUrl + \"/adminapi/GetAllPropertyFacilities/\")\n                  .then((resp) => {\n                    console.log(resp.data.data);\n                    if (resp.data.status == 1 || resp.data.status == \"1\") {\n                      allMaintanenceData = resp.data.data;\n\n                      for (i = 0; i < maintanceFeeOfProperty.length; i++) {\n                        for (j = 0; j < allMaintanenceData.length; j++) {\n                          if (\n                            maintanceFeeOfProperty[i] ==\n                            allMaintanenceData[j].id\n                          ) {\n                            actualMaintainenceArray[i] = {\n                              id: allMaintanenceData[j].id,\n                              image: allMaintanenceData[j].FacilityImage,\n                              name: allMaintanenceData[j].propertyFacility,\n                            };\n                          }\n                        }\n                      }\n                      //   console.log(\n                      //     \"actualMaintainenceArray\",\n                      //     actualMaintainenceArray\n                      //   );\n                      this.setState({\n                        actualMaintainenceArray: actualMaintainenceArray,\n                      });\n                    } else {\n                      message.error(resp.data.message);\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                    message.error(\"관리비 항목을 불러오는데에 실패하였습니다.\");\n                  });\n\n                // get options ----------------------------------------------\n                axios\n                  .get(BaseUrl + \"/adminapi/GetAllPropertyFeatures/\")\n                  .then((res) => {\n                    console.log(res.data.data);\n                    if (res.data.status == 1 || res.data.status == \"1\") {\n                      allOptionsData = res.data.data;\n\n                      for (i = 0; i < optionsOfProperty.length; i++) {\n                        for (j = 0; j < allOptionsData.length; j++) {\n                          if (optionsOfProperty[i] == allOptionsData[j].id) {\n                            actualOptionsArray[i] = {\n                              id: allOptionsData[j].id,\n                              image: allOptionsData[j].FeatureImage,\n                              name: allOptionsData[j].propertyFeatures,\n                            };\n                          }\n                        }\n                      }\n                      console.log(actualOptionsArray);\n                      this.setState({\n                        actualOptionsArray: actualOptionsArray,\n                      });\n                    } else {\n                      message.error(res.data.message);\n                    }\n                  })\n                  .catch((error) => {\n                    console.log(error);\n                    message.error(\"정보를 불러 오는데에 실패하였습니다.\");\n                  });\n              } else {\n                message.error(\"정보를 불러오지 못하였습니다.\");\n                this.setState({ redirectTo404: true });\n                return;\n              }\n            } else {\n              message.error(\"정보를 불러오지 못하였습니다.\");\n              this.setState({ redirectTo404: true });\n              return;\n            }\n          }\n          // Not logged in user\n          else if (\n            cookies.get(finalCookieName) == undefined ||\n            cookies.get(finalCookieName) == \"undefined\"\n          ) {\n            message.error(\"정보를 불러오지 못하였습니다.\");\n            this.setState({ redirectTo404: true });\n            return;\n          }\n          // Not a normal user\n          else {\n            message.error(\"정보를 불러오지 못하였습니다.\");\n            this.setState({ redirectTo404: true });\n            return;\n          }\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const {\n      visible,\n      loading,\n      propertyData,\n      propertyImages,\n      CCLoading,\n    } = this.state;\n\n    console.log(this.state.showVerification);\n    // File Upload code end ------------------------------------------------------------------------------\n    const contentStyle = {\n      height: \"280px\",\n      // color: '#fff',\n      lineHeight: \"280px\",\n      textAlign: \"center\",\n      // backgroundImage: url('https://dummyimage.com/350x40/'),\n    };\n\n    if (this.state.redirectTo404 === true) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/not-found\",\n          }}\n        />\n      );\n    }\n\n    return (\n      <Layout className=\"register-property-layout cs-confirm-contract\">\n        <WithAuthHeader />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"cs-main-block\">\n                    <Row>\n                      <Col className=\"text-center mb-15\" span={24}>\n                        <img src={logoRound} className=\"csd-round-logo\" />\n                      </Col>\n                      <Col className=\"text-center mb-15\" span={24}>\n                        <div className=\"cs-contract-title\">\n                          <svg\n                            className=\"cs-back-button\"\n                            width=\"48\"\n                            height=\"48\"\n                            viewBox=\"0 0 48 48\"\n                            fill=\"none\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            onClick={() => history.goBack()}\n                          >\n                            <path\n                              d=\"M24.0081 16.3074L32.8857 24.4003L24.0081 32.4933\"\n                              stroke=\"#44358F\"\n                              stroke-width=\"1.6\"\n                              stroke-linecap=\"round\"\n                            />\n                            <path\n                              d=\"M32.3988 24.4H13.1988\"\n                              stroke=\"#44358F\"\n                              stroke-width=\"1.6\"\n                              stroke-linecap=\"round\"\n                            />\n                            <circle\n                              r=\"23.2\"\n                              transform=\"matrix(-1 0 0 1 24 24)\"\n                              stroke=\"#44358F\"\n                              stroke-width=\"1.6\"\n                            />\n                          </svg>\n                          <h2 className=\"contact-header-h2\">\n                            {propertyData.address}\n                          </h2>\n                        </div>\n                        <div className=\"cs-contract-subtitle\">\n                          <div className=\"second-primary-color contact-header-p\">\n                            {(propertyData.propertyType == \"For Sale\" ||\n                              propertyData.propertyType ==\n                                \"For Sale,For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Rent,For Sale\") && (\n                              <>매매 {propertyData.propertyCost}만원 </>\n                            )}\n                          </div>\n                          <div className=\"second-primary-color contact-header-p\">\n                            {(propertyData.propertyType == \"For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Sale,For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Rent,For Sale\") && (\n                              <>보증금 {propertyData.propertyDeposite}만원</>\n                            )}\n                          </div>\n                          <div className=\"second-primary-color contact-header-p\">\n                            {(propertyData.propertyType == \"For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Sale,For Rent\" ||\n                              propertyData.propertyType ==\n                                \"For Rent,For Sale\") && (\n                              <>월세 {propertyData.propertyRent}만원</>\n                            )}\n                          </div>\n                        </div>\n                      </Col>\n\n                      <Divider />\n\n                      {propertyImages && propertyImages.length > 0 && (\n                        <>\n                          <Col span={24} className=\"mb-15 cs-img-carosel\">\n                            <Carousel autoplay effect=\"fade\">\n                              {propertyImages.map((img, i) => (\n                                <div className=\"cs-img-wrap\">\n                                  <img\n                                    src={`${BaseUrl}/property/${img}`}\n                                    style={{ height: 300 }}\n                                  />\n                                </div>\n                              ))}\n                            </Carousel>\n                          </Col>\n                          <Divider />\n                        </>\n                      )}\n                      {propertyData.manager && (\n                        <>\n                          <Col className=\"mb-15 cs-row2\" span={24}>\n                            <h4>\n                              <div className=\"cs-manager-label\">\n                                담당자 <br />{\" \"}\n                              </div>\n                              <div className=\"cs-manager-name\">\n                                {propertyData.manager.name}{\" \"}\n                                {/* {propertyData.manager.adminlogin.role} */}\n                              </div>{\" \"}\n                            </h4>\n                            <Link\n                              onClick={this.showModal}\n                              to=\"#\"\n                              className=\"cs-next-btn\"\n                            >\n                              <svg\n                                width=\"48\"\n                                height=\"48\"\n                                viewBox=\"0 0 48 48\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  d=\"M24.0081 16.3074L32.8857 24.4003L24.0081 32.4933\"\n                                  stroke=\"#44358F\"\n                                  stroke-width=\"1.6\"\n                                  stroke-linecap=\"round\"\n                                />\n                                <path\n                                  d=\"M32.3988 24.4H13.1988\"\n                                  stroke=\"#44358F\"\n                                  stroke-width=\"1.6\"\n                                  stroke-linecap=\"round\"\n                                />\n                                <circle\n                                  r=\"23.2\"\n                                  transform=\"matrix(-1 0 0 1 24 24)\"\n                                  stroke=\"#44358F\"\n                                  stroke-width=\"1.6\"\n                                />\n                              </svg>\n                            </Link>\n\n                            {/* contact buttons for responsive */}\n                            <Space className=\"cs-contatct-btn-main\">\n                              <Row className=\"cs-ctbtn-wrapper\">\n                                <div className=\"cs-ctbtn2-main\">\n                                  <a\n                                    href={\"tel:\" + propertyData.manager.mobile}\n                                  >\n                                    <Button\n                                      block\n                                      className=\"cs-ctbtn cs-ctbtn-2\"\n                                    >\n                                      <svg\n                                        width=\"19\"\n                                        height=\"19\"\n                                        viewBox=\"0 0 19 19\"\n                                        fill=\"none\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                      >\n                                        <path\n                                          d=\"M17.6296 12.963C16.3333 12.963 15.0889 12.7556 13.9274 12.3719C13.5644 12.2578 13.16 12.3407 12.8696 12.6207L10.5881 14.9022C7.65333 13.4089 5.24741 11.0133 3.75407 8.06815L6.03556 5.7763C6.32593 5.50667 6.40889 5.10222 6.29481 4.73926C5.91111 3.57778 5.7037 2.33333 5.7037 1.03704C5.7037 0.466667 5.23704 0 4.66667 0H1.03704C0.466667 0 0 0.466667 0 1.03704C0 10.7748 7.89185 18.6667 17.6296 18.6667C18.2 18.6667 18.6667 18.2 18.6667 17.6296V14C18.6667 13.4296 18.2 12.963 17.6296 12.963Z\"\n                                          fill=\"white\"\n                                        />\n                                      </svg>\n                                      <span>전화하기 </span>\n                                    </Button>\n                                  </a>\n                                </div>\n                                <div className=\"cs-ctbtn3-main\">\n                                  <Button\n                                    block\n                                    className=\"cs-ctbtn cs-ctbtn-3\"\n                                    onClick={() =>\n                                      this.confirmContract(propertyData.id)\n                                    }\n                                  >\n                                    <svg\n                                      width=\"20\"\n                                      height=\"19\"\n                                      viewBox=\"0 0 20 19\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                      <path\n                                        fill-rule=\"evenodd\"\n                                        clip-rule=\"evenodd\"\n                                        d=\"M20 9.15276C20 4.09775 15.5229 0 9.9999 0C4.47713 0 0 4.09775 0 9.15276C0 14.2076 4.47713 18.3055 9.9999 18.3055C11.4948 18.3055 12.912 18.0032 14.1855 17.4651L17.5442 18.9781C17.7184 19.0565 17.9103 18.9137 17.8917 18.7201L17.5458 15.1551C19.0732 13.5481 20 11.4501 20 9.15276Z\"\n                                        fill=\"white\"\n                                      />\n                                    </svg>\n\n                                    <span>계약서 컨펌하기</span>\n                                  </Button>\n                                </div>\n                              </Row>\n                            </Space>\n                          </Col>\n                        </>\n                      )}\n                    </Row>\n                    {propertyData.manager && (\n                      <>\n                        <Modal\n                          visible={visible}\n                          title=\"담당자 정보\"\n                          onOk={this.handleOk}\n                          onCancel={this.handleCancel}\n                          closable={false}\n                          footer={null}\n                          className=\"cs-popup cs-manager-popup\"\n                        >\n                          <div className=\"cs-modal-body\">\n                            <Row className=\"text-center\">\n                              <p style={{ width: \"100%\" }}>\n                                담당자 <br />\n                                <b>\n                                  {propertyData.manager.name}{\" \"}\n                                  {/* {propertyData.manager.adminlogin.role} */}\n                                </b>{\" \"}\n                                <br />\n                                <b>{propertyData.manager.mobile}</b>\n                              </p>\n\n                              <Space direction=\"vertical\" className=\"width100\">\n                                <Col span={24}>\n                                  <Button\n                                    key=\"back\"\n                                    className=\"theme-btn cs-btn3\"\n                                    onClick={this.handleCancel}\n                                    size={\"large\"}\n                                  >\n                                    확인했습니다.\n                                  </Button>\n                                </Col>\n                              </Space>\n                            </Row>\n                          </div>\n                        </Modal>\n                      </>\n                    )}\n\n                    <Row\n                      className=\"cs-card-block cs-card-detail-block mb-15\"\n                      style={{ position: \"relative\" }}\n                    >\n                      <div className=\"cs-card-block-top\">\n                        <div className=\"cs-row1\">\n                          <div className=\"cs-label-o\">매물정보 </div>\n                          <div className=\"cs-btn1-main\">\n                            <Button\n                              shape=\"round\"\n                              className=\"theme-btn-default cs-btn-1\"\n                              onClick={() =>\n                                this.props.history.push(\n                                  `/contract-history/${propertyData.id}`\n                                )\n                              }\n                            >\n                              <img src={docIcon} />\n                              계약서 히스토리{\" \"}\n                            </Button>\n                          </div>\n                        </div>\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">주소 </div>\n                          <div className=\"cs-right-val address\">\n                            {propertyData.address}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">거래유형 </div>\n                          <div className=\"cs-right-val\">\n                            {propertyData.propertyType == \"For Rent\" &&\n                              \"전/월세\"}\n                            {propertyData.propertyType == \"For Sale\" && \"매매\"}\n                            {propertyData.propertyType == \"For Sale,For Rent\" &&\n                              \"매매,전/월세\"}\n                            {propertyData.propertyType == \"For Rent,For Sale\" &&\n                              \"전/월세,매매\"}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">관리비</div>\n                          <div className=\"cs-right-val\">\n                            {propertyData.maintanceFee}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">구조 </div>\n                          <div className=\"cs-right-val\">\n                            {propertyData.rooms}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">방향 </div>\n                          <div className=\"cs-right-val\">\n                            {propertyData.direction}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">전용면적 </div>\n                          <div className=\"cs-right-val\">\n                            {Math.round(\n                              (Number(propertyData.areaSquare) +\n                                Number.EPSILON) *\n                                100\n                            ) / 100}\n                            {propertyData.areaUnit == \"Pyeong\" ? (\n                              \"평\"\n                            ) : (\n                              <span>\n                                m<sup>2</sup>\n                              </span>\n                            )}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">엘레베이터 </div>\n                          <div className=\"cs-right-val\">\n                            {propertyData.elevator ? \"있음\" : \"결석\"}\n                          </div>\n                        </Col>\n\n                        <Col className=\"cs-field-outer\" span={24}>\n                          <div className=\"cs-left-label\">입주가능일 </div>\n                          <div className=\"cs-right-val\">\n                            {propertyData.availableMoveInStatus ==\n                              \"Immediately\" && <>즉시입주</>}\n                            {propertyData.availableMoveInStatus ==\n                              \"Negotiable\" &&\n                              propertyData.availableMoveInDate &&\n                              moment(propertyData.availableMoveInDate).format(\n                                \"YYYY.MM.DD\"\n                              )}\n                          </div>\n                        </Col>\n\n                        {propertyData.memberContractStatus == \"Waiting\" ? (\n                          <Space className=\"cs-block-btn-main\">\n                            <Row className=\"cs-btn-wrapper\">\n                              <div className=\"cs-btn2-main\">\n                                {/* <Button block shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">Download Contract </Button> */}\n                                <Button\n                                  block\n                                  shape=\"round\"\n                                  className=\"cs-btn-2 cs-btn-2-hover\"\n                                  onClick={() => {\n                                    util.downloadFileByURL(\n                                      \"contractfile\",\n                                      propertyData.PropertyContracts[0]\n                                        .contractFile\n                                    );\n                                  }}\n                                >\n                                  <div className=\"cs-icon-hover\">\n                                    <svg\n                                      width=\"25\"\n                                      height=\"27\"\n                                      viewBox=\"0 0 25 26\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                      <path\n                                        d=\"M12.8612 1.44531V22.5653\"\n                                        stroke=\"#9A86FF\"\n                                        stroke-width=\"2\"\n                                        stroke-linecap=\"square\"\n                                      />\n                                      <path\n                                        d=\"M24.0806 13.8691L12.8606 24.4291L1.64062 13.8691\"\n                                        stroke=\"#9A86FF\"\n                                        stroke-width=\"2\"\n                                      />\n                                    </svg>\n                                  </div>\n                                  <span>계약 다운로드 </span>\n                                </Button>\n                              </div>\n                              <div className=\"cs-btn3-main\">\n                                <Button\n                                  loading={CCLoading}\n                                  block\n                                  shape=\"round\"\n                                  className=\"cs-btn-3 cs-btn-3-hover\"\n                                  onClick={() =>\n                                    this.confirmContract(propertyData.id)\n                                  }\n                                >\n                                  <div className=\"cs-icon\">\n                                    {!CCLoading && (\n                                      <svg\n                                        width=\"26\"\n                                        height=\"20\"\n                                        viewBox=\"0 0 26 20\"\n                                        fill=\"none\"\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                      >\n                                        <path\n                                          d=\"M25.0472 1L9.26621 17.8L1 9.4\"\n                                          stroke=\"white\"\n                                          stroke-width=\"2\"\n                                        />\n                                      </svg>\n                                    )}\n                                  </div>\n                                  <span>계약서 컨펌하기</span>\n                                </Button>\n                              </div>\n                            </Row>\n                          </Space>\n                        ) : (\n                          <Space className=\"cs-block-btn-main\">\n                            <Row className=\"cs-btn-wrapper\">\n                              <div className=\"cs-btn2-main\">\n                                <Button\n                                  shape=\"round\"\n                                  className=\"disabled-btn-default cs-btn-2\"\n                                  disabled=\"disabled\"\n                                >\n                                  <div className=\"cs-icon\">\n                                    <svg\n                                      width=\"25\"\n                                      height=\"27\"\n                                      viewBox=\"0 0 24 27\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                      <path\n                                        d=\"M12.0018 1.87109V22.9911\"\n                                        stroke=\"#CBCBCB\"\n                                        stroke-width=\"2\"\n                                        stroke-linecap=\"square\"\n                                      />\n                                      <path\n                                        d=\"M23.2213 14.2949L12.0013 24.8549L0.78125 14.2949\"\n                                        stroke=\"#CBCBCB\"\n                                        stroke-width=\"2\"\n                                      />\n                                    </svg>\n                                  </div>\n                                  <span>계약 다운로드 </span>\n                                </Button>\n                              </div>\n                              <div className=\"cs-btn3-main\">\n                                <Button\n                                  shape=\"round\"\n                                  className=\"disabled-btn  cs-btn-3\"\n                                  disabled=\"disabled\"\n                                >\n                                  <div className=\"cs-icon\">\n                                    <svg\n                                      width=\"26\"\n                                      height=\"20\"\n                                      viewBox=\"0 0 26 20\"\n                                      fill=\"none\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                    >\n                                      <path\n                                        d=\"M25.0472 1L9.26621 17.8L1 9.4\"\n                                        stroke=\"white\"\n                                        stroke-width=\"2\"\n                                      />\n                                    </svg>\n                                  </div>\n                                  <span>계약서 컨펌하기</span>\n                                </Button>\n                              </div>\n                            </Row>\n                          </Space>\n                        )}\n                      </div>\n                      {/* <Col className=\" mb-15\" span={12} >\n                                                <Button shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">Download Contract </Button>\n                                            </Col>\n                                            <Col className=\"text-right mb-15\" span={12} >\n                                                <Button shape=\"round\" icon={<CheckOutlined />} className=\"theme-btn\">Confirm Contract </Button>\n                                            </Col> */}\n\n                      <Col span={24} className=\"cs-editbtn\">\n                        <Link to={`/register-property/${propertyData.id}`}>\n                          수정하기\n                        </Link>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Divider />\n                      <Col className=\"cs-font-24  cs-mb10 cs-mt20\" span={24}>\n                        옵션{\" \"}\n                      </Col>\n                      <Col className=\"\" span={24}>\n                        <Row className=\"cs-option-item-outer\">\n                          {this.state.actualOptionsArray.map((o, i) => {\n                            return (\n                              <Col\n                                span={6}\n                                key={o.id}\n                                className=\"text-center cs-option-item\"\n                              >\n                                {/* <img src=\" https://placeimg.com/80/80/tech\" /> */}\n                                <img src={BaseUrl + o.image} />\n                                <br />\n                                <span className=\"cs-font-24\">{o.name}</span>\n                              </Col>\n                            );\n                          })}\n                        </Row>\n                      </Col>\n\n                      <Divider />\n\n                      <Col className=\"cs-font-24 cs-mb10 cs-mt20\" span={24}>\n                        관리비 포함 항목\n                      </Col>\n                      <Col className=\"\" span={24}>\n                        <Row className=\"cs-option-item-outer\">\n                          {this.state.actualMaintainenceArray.map((m, i) => {\n                            if (!m.image) {\n                              return;\n                            }\n                            return (\n                              <Col\n                                span={6}\n                                key={m.id}\n                                className=\"text-center cs-option-item\"\n                              >\n                                <img src={BaseUrl + m.image} />\n                                <br />\n                                {/* <img src={BaseUrl+m.image} /> */}\n                                <span className=\"cs-font-24\">{m.name}</span>\n                              </Col>\n                            );\n                          })}\n                        </Row>\n                      </Col>\n\n                      <Divider />\n\n                      <Col\n                        className=\"cs-font-24\"\n                        style={{ marginTop: \"20px\" }}\n                        span={24}\n                      >\n                        상세위치 정보\n                      </Col>\n\n                      <Col className=\"mb-15\" span={24}>\n                        {/* <iframe\n                          src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3411.9914896658825!2d75.76701051462322!3d31.220965168989835!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x391af4e636b784dd%3A0xd8f1509263158c8a!2sProtolabz%20Eservices!5e0!3m2!1sen!2sin!4v1611820347886!5m2!1sen!2sin\"\n                          width=\"100%\"\n                          height=\"200\"\n                          className=\"cs-address-map\"\n                          frameborder=\"0\"\n                          style={{ border: \"0\" }}\n                          allowfullscreen=\"\"\n                          aria-hidden=\"false\"\n                          tabindex=\"0\"\n                        ></iframe> */}\n                        <KakaoMap searchWord={propertyData.address} />\n                      </Col>\n                      <Divider />\n                      {/* <Button\n                        className=\"cs-secondary-button mb-15\"\n                        size={\"large\"}\n                        type=\"primary\"\n                        block\n                        danger\n                        onClick={() => {\n                          history.push(`/PropertyPrice/${propertyData.id}`);\n                        }}\n                      >\n                        국토교통부 실거래가 보기\n                      </Button> */}\n                    </Row>\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default PropertyConfirmContract;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/PropertyProcessing.js",["796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport util from \"../../util/Util\";\n\nimport {\n  Layout,\n  Button,\n  Divider,\n  Row,\n  Col,\n  Space,\n  message,\n  Collapse,\n  Tabs,\n  Alert,\n} from \"antd\";\n\nimport { DownloadOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport { Link } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\nimport logoRound from \"../images/logo-round.svg\";\nimport docIcon from \"../images/doc-icon.png\";\nimport moment from \"moment\";\nconst axios = require(\"axios\");\nconst { Content } = Layout;\n\nconst { Panel } = Collapse;\nconst { TabPane } = Tabs;\n\nclass PropertyProcessing extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    showVerification: false,\n    loading: false,\n    visible: false,\n    ongoingPropertyData: [],\n    confirmPropertyData: [],\n    CCLoading: false,\n    notLoggenInUser: false,\n    userName: \"\",\n    numOfProperty: 0,\n  };\n\n  componentDidMount() {\n    const cookie = new Cookies();\n    const memberId = cookie.get(\"UU\");\n\n    // Ongoing property list\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    // console.log('encodedStringBtoA', encodedStringBtoA);\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    // Form data begins\n    let apiEndpoint = \"\";\n    let formData = new FormData();\n\n    // already logged in user\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      this.setState({ userName: cookies.get(\"UN\") });\n      axios\n        .get(\n          BaseUrl + \"/memberapi/GetOnGoingPropertyDeatilByMemberId/\" + memberId\n        )\n        .then((res) => {\n          // console.log(res)\n          if (res.data.status == 1 || res.data.status == \"1\") {\n            this.setState({\n              ongoingPropertyData: res.data.data,\n              numOfProperty: this.state.numOfProperty + res.data.data.length,\n            });\n          } else {\n            message.error(\"다시 시도해주세요.\");\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          message.error(\"다시 시도해주세요.\");\n        });\n\n      // get confirmed contract list\n      this.confirmPropertyData(memberId);\n    }\n    // Not logged in user\n    else if (\n      cookies.get(finalCookieName) == undefined ||\n      cookies.get(finalCookieName) == \"undefined\"\n    ) {\n      this.props.history.push(\"/login\");\n\n      this.setState({\n        ongoingPropertyData: [],\n        confirmPropertyData: [],\n        notLoggenInUser: true,\n      });\n    }\n    // Not a normal user\n    else {\n      message.error(\"확인이 되지 않은 회원입니다.\");\n      return;\n    }\n  }\n\n  // 계약서 컨펌하기\n  confirmContract = (id, managername) => {\n    console.log(id);\n    this.setState({ CCLoading: true });\n\n    axios\n      .post(BaseUrl + \"/memberapi/UpdatePropertyStatusByPropertyId\", {\n        id: id,\n        memberContractStatus: \"Completed\",\n      })\n      .then(async (res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"확인 되었습니다.\");\n\n          const { data } = await axios.get(\n            `http://${process.env.REACT_APP_KAKAO_HOST}:${process.env.REACT_APP_BACKEND_PORT}/contractConfirm`,\n            {\n              params: {\n                username: res.data.data.name,\n                phone: res.data.data.phone,\n                manager: managername,\n              },\n            }\n          );\n          console.log(data);\n\n          const cookie = new Cookies();\n          const memberId = cookie.get(\"UU\");\n\n          axios\n            .get(\n              BaseUrl +\n                \"/memberapi/GetOnGoingPropertyDeatilByMemberId/\" +\n                memberId\n            )\n            .then((res) => {\n              // console.log(res)\n              if (res.data.status == 1 || res.data.status == \"1\") {\n                this.setState({ ongoingPropertyData: res.data.data });\n              } else {\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n          this.confirmPropertyData(memberId);\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ CCLoading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ CCLoading: false });\n      });\n  };\n\n  downloadFile = (folder, file) => {\n    axios({\n      url: `${BaseUrl}/${folder}/${file}`,\n      method: \"GET\",\n      responseType: \"blob\", // important\n    }).then((response) => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", file);\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  confirmPropertyData = (memberId) => {\n    axios\n      .get(\n        BaseUrl + \"/memberapi/GetConfirmedClosedPropertyByMemberId/\" + memberId\n      )\n      .then((res) => {\n        // console.log(res)\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          this.setState({\n            confirmPropertyData: res.data.data,\n            numOfProperty: this.state.numOfProperty + res.data.data.length,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n\n  render() {\n    const {\n      loading,\n      ongoingPropertyData,\n      confirmPropertyData,\n      CCLoading,\n      notLoggenInUser,\n    } = this.state;\n\n    const onFinish = (values) => {\n      console.log(\"Success:\", values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    console.log(this.state.confirmPropertyData);\n    // File Upload code end ------------------------------------------------------------------------------\n\n    return (\n      <Layout className=\"register-property-layout cs-property-processing\">\n        <WithAuthHeader />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content>\n                <div className=\"cs-main-block\">\n                  <div className=\"cs-form-main-logo\">\n                    <img src={logoRound} />\n                  </div>\n\n                  <div className=\"cs-form-title-wrapper\">\n                    <h2 className=\"cs-h2 cs-form-title\">\n                      {this.state.userName}\n                    </h2>\n                    <p className=\"color-them\">{this.state.numOfProperty}건</p>\n                  </div>\n\n                  <Button className=\"property-btn\">\n                    <Link to=\"/register-property\">집 내놓기</Link>\n                  </Button>\n\n                  <Divider />\n\n                  <Tabs\n                    defaultActiveKey=\"1\"\n                    className=\"width100 mb-15 property-tab\"\n                    style={{ marginTop: \"16px\" }}\n                  >\n                    <TabPane tab=\"중개중 부동산\" key=\"1\">\n                      {ongoingPropertyData.map((d, i) => {\n                        return (\n                          // <Link to={`/property-detail/${d.id}`}>\n                          <Row\n                            key={i}\n                            className=\"cs-card-block\"\n                            style={{ position: \"relative\" }}\n                          >\n                            {/* <Col span={24}>\n                                  <Link to={\"/property-detail/\" + d.id}>\n                                    <h2 className=\"theme-color\">Edit</h2>\n                                  </Link>\n                                </Col> */}\n                            <div className=\"cs-card-block-top\">\n                              <div className=\"cs-row1\">\n                                <div className=\"cs-label-o\">\n                                  <span style={{ marginRight: \"4px\" }}>\n                                    계약정보\n                                  </span>{\" \"}\n                                  <span\n                                    style={{\n                                      position: \"absolute\",\n                                      margin: \"-6px\",\n                                    }}\n                                  >\n                                    .\n                                  </span>\n                                  {/* {d.memberContractStatus == \"Pending\" ? (\n                                    \"\"\n                                  ) : ( */}\n                                  <span\n                                    className=\"blur-primary-color\"\n                                    style={{ marginLeft: \"4px\" }}\n                                  >\n                                    {d.memberContractStatus == \"Waiting\"\n                                      ? \"계약 대기\"\n                                      : d.memberContractStatus === \"Completed\"\n                                      ? \"계약완료\"\n                                      : d.memberContractStatus === \"Ended\"\n                                      ? \"종료\"\n                                      : \"\"}\n                                  </span>\n                                  {/* )} */}\n                                </div>\n\n                                <div className=\"cs-btn1-main\">\n                                  <Button\n                                    shape=\"round\"\n                                    className=\"theme-btn-default cs-btn-1\"\n                                    onClick={() =>\n                                      this.props.history.push(\n                                        `/contract-history/${d.id}`\n                                      )\n                                    }\n                                  >\n                                    <img src={docIcon} />\n                                    계약서 히스토리\n                                  </Button>\n                                </div>\n                              </div>\n                              <Link to={\"/property-detail/\" + d.id}>\n                                <Col span={24} className=\"cs-label-main\">\n                                  <div className=\"cs-label-t\">\n                                    {(d.propertyType === \"For Sale\" ||\n                                      d.propertyType === \"For Sale,For Rent\" ||\n                                      d.propertyType ===\n                                        \"For Rent,For Sale\") && (\n                                      <>매매 {d.propertyCost}만원 </>\n                                    )}\n                                  </div>\n                                  <div className=\"cs-label-t\">\n                                    {(d.propertyType === \"For Rent\" ||\n                                      d.propertyType === \"For Sale,For Rent\" ||\n                                      d.propertyType ===\n                                        \"For Rent,For Sale\") && (\n                                      <>보증금 {d.propertyDeposite}만원</>\n                                    )}\n                                  </div>\n                                  <div className=\"cs-label-t\">\n                                    {(d.propertyType === \"For Rent\" ||\n                                      d.propertyType === \"For Sale,For Rent\" ||\n                                      d.propertyType ===\n                                        \"For Rent,For Sale\") && (\n                                      <>월세 {d.propertyRent}만원</>\n                                    )}\n                                  </div>\n                                </Col>\n\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">담당자 </div>\n                                  {d.manager ? (\n                                    <div className=\"cs-right-val cs-val\">\n                                      {d.manager.name}{\" \"}\n                                    </div>\n                                  ) : (\n                                    <div className=\"cs-right-val cs-val1\">\n                                      담당자 배정중\n                                    </div>\n                                  )}\n                                </Col>\n\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">주소 </div>\n                                  <div className=\"cs-right-val address\">\n                                    {d.address}\n                                  </div>\n                                </Col>\n\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">거래유형 </div>\n                                  <div className=\"cs-right-val\">\n                                    {d.propertyType === \"For Rent\" && \"전/월세\"}\n                                    {d.propertyType === \"For Sale\" && \"매매\"}\n                                    {d.propertyType === \"For Sale,For Rent\" &&\n                                      \"매매,전/월세\"}\n                                    {d.propertyType === \"For Rent,For Sale\" &&\n                                      \"전/월세,매매\"}\n                                  </div>\n                                </Col>\n\n                                {/* <Col className=\" mb-15\" span={12} >Maintenance fee </Col> */}\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">관리비 </div>\n                                  <div className=\"cs-right-val\">\n                                    {d.maintanceFee}\n                                  </div>\n                                </Col>\n                              </Link>\n                              {d.memberContractStatus === \"Waiting\" ? (\n                                <Space className=\"cs-block-btn-main\">\n                                  <Row className=\"cs-btn-wrapper\">\n                                    <div className=\"cs-btn2-main\">\n                                      <Button\n                                        block\n                                        shape=\"round\"\n                                        className=\"cs-btn-2 cs-btn-2-hover\"\n                                        onClick={() => {\n                                          util.downloadFileByURL(\n                                            \"contractfile\",\n                                            d.PropertyContracts[0].contractFile\n                                          );\n                                        }}\n                                      >\n                                        <div className=\"cs-icon-hover\">\n                                          <svg\n                                            width=\"25\"\n                                            height=\"27\"\n                                            viewBox=\"0 0 25 26\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                          >\n                                            <path\n                                              d=\"M12.8612 1.44531V22.5653\"\n                                              stroke=\"#9A86FF\"\n                                              stroke-width=\"2\"\n                                              stroke-linecap=\"square\"\n                                            />\n                                            <path\n                                              d=\"M24.0806 13.8691L12.8606 24.4291L1.64062 13.8691\"\n                                              stroke=\"#9A86FF\"\n                                              stroke-width=\"2\"\n                                            />\n                                          </svg>\n                                        </div>\n                                        {d.PropertyContracts.length ? (\n                                          <span>계약서 다운로드</span>\n                                        ) : (\n                                          <span> 계약서 다운로드 </span>\n                                        )}\n                                      </Button>\n                                    </div>\n                                    <div className=\"cs-btn3-main\">\n                                      <Button\n                                        block\n                                        shape=\"round\"\n                                        className=\"cs-btn-3 cs-btn-3-hover\"\n                                        onClick={() => {\n                                          console.log(d);\n                                          this.confirmContract(\n                                            d.id,\n                                            d.manager.name\n                                          );\n                                        }}\n                                        loading={CCLoading}\n                                      >\n                                        <div className=\"cs-icon\">\n                                          {!CCLoading && (\n                                            <svg\n                                              width=\"26\"\n                                              height=\"20\"\n                                              viewBox=\"0 0 26 20\"\n                                              fill=\"none\"\n                                              xmlns=\"http://www.w3.org/2000/svg\"\n                                            >\n                                              <path\n                                                d=\"M25.0472 1L9.26621 17.8L1 9.4\"\n                                                stroke=\"white\"\n                                                stroke-width=\"2\"\n                                              />\n                                            </svg>\n                                          )}\n                                        </div>\n                                        <span>계약서 컨펌하기</span>\n                                      </Button>\n                                    </div>\n                                  </Row>\n                                </Space>\n                              ) : (\n                                <Space className=\"cs-block-btn-main\">\n                                  <Row className=\"cs-btn-wrapper\">\n                                    <div className=\"cs-btn2-main\">\n                                      <Button\n                                        block\n                                        shape=\"round\"\n                                        className=\"disabled-btn-default cs-btn-2\"\n                                        disabled=\"disabled\"\n                                      >\n                                        <div className=\"cs-icon\">\n                                          <svg\n                                            width=\"25\"\n                                            height=\"27\"\n                                            viewBox=\"0 0 24 27\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                          >\n                                            <path\n                                              d=\"M12.0018 1.87109V22.9911\"\n                                              stroke=\"#CBCBCB\"\n                                              stroke-width=\"2\"\n                                              stroke-linecap=\"square\"\n                                            />\n                                            <path\n                                              d=\"M23.2213 14.2949L12.0013 24.8549L0.78125 14.2949\"\n                                              stroke=\"#CBCBCB\"\n                                              stroke-width=\"2\"\n                                            />\n                                          </svg>\n                                        </div>\n                                        <span>계약서 다운로드 </span>\n                                      </Button>\n                                    </div>\n                                    <div className=\"cs-btn3-main\">\n                                      <Button\n                                        block\n                                        shape=\"round\"\n                                        className=\"disabled-btn cs-btn-3\"\n                                        disabled=\"disabled\"\n                                      >\n                                        <div className=\"cs-icon\">\n                                          <svg\n                                            width=\"26\"\n                                            height=\"20\"\n                                            viewBox=\"0 0 26 20\"\n                                            fill=\"none\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                          >\n                                            <path\n                                              d=\"M25.0472 1L9.26621 17.8L1 9.4\"\n                                              stroke=\"white\"\n                                              stroke-width=\"2\"\n                                            />\n                                          </svg>\n                                        </div>\n                                        <span>계약서 컨펌하기 </span>\n                                      </Button>\n                                    </div>\n                                  </Row>\n                                </Space>\n                              )}\n                            </div>\n                            <div className=\"cs-card-block-bottom\">\n                              <Collapse\n                                className=\"cs-collapse-section\"\n                                defaultActiveKey=\"\"\n                              >\n                                <Panel header=\"&nbsp;\" key=\"1\">\n                                  <Row>\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">구조 </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.rooms}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">방향 </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.direction}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">\n                                        전용면적{\" \"}\n                                      </div>\n                                      <div className=\"cs-right-val\">\n                                        {Math.round(\n                                          (Number(d.areaSquare) +\n                                            Number.EPSILON) *\n                                            100\n                                        ) / 100}\n                                        {d.areaUnit == \"Pyeong\" ? (\n                                          \"평\"\n                                        ) : (\n                                          <span>\n                                            m<sup>2</sup>\n                                          </span>\n                                        )}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">\n                                        엘레베이터{\" \"}\n                                      </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.elevator ? \"있음\" : \"결석\"}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">\n                                        입주가능일{\" \"}\n                                      </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.availableMoveInStatus ==\n                                          \"Immediately\" && <>즉시입주</>}\n                                        {d.availableMoveInStatus ==\n                                          \"Negotiable\" &&\n                                          d.availableMoveInDate &&\n                                          moment(d.availableMoveInDate).format(\n                                            \"YYYY.MM.DD\"\n                                          )}\n                                      </div>\n                                    </Col>\n                                  </Row>\n                                </Panel>\n                              </Collapse>\n                            </div>\n                          </Row>\n                          // </Link>\n                        );\n                      })}\n                    </TabPane>\n\n                    <TabPane tab=\"마이 부동산\" key=\"2\" className=\"cs-pptab2\">\n                      {notLoggenInUser && (\n                        <Row>\n                          <Col span={24}>\n                            <Alert\n                              showIcon\n                              message=\"Please Login\"\n                              description=\"Please login to view your property list\"\n                              type=\"info\"\n                              type=\"info\"\n                            />\n                          </Col>\n                        </Row>\n                      )}\n                      {confirmPropertyData.map((d, i) => {\n                        return (\n                          // <Link to={`/property-detail/${d.id}`}>\n                          <Row\n                            key={i}\n                            className=\"cs-card-block\"\n                            style={{ position: \"relative\" }}\n                          >\n                            {/* <Col span={24}>\n                                  <Link to={\"/property-detail/\" + d.id}>\n                                    <h2 className=\"theme-color\">Edit</h2>\n                                  </Link>\n                                </Col> */}\n\n                            <div className=\"cs-card-block-top pb-0\">\n                              <div className=\"cs-row1\">\n                                <div className=\"cs-label-o\">\n                                  계약정보∙\n                                  {d.memberContractStatus == \"Completed\" && (\n                                    <span className=\"second-primary-color\">\n                                      계약완료\n                                    </span>\n                                  )}\n                                  {d.memberContractStatus == \"Ended\" && (\n                                    <span className=\"color-red\">종료</span>\n                                  )}\n                                </div>\n\n                                <div className=\"cs-btn1-main\">\n                                  <Button\n                                    shape=\"round\"\n                                    className=\"theme-btn-default cs-btn-1\"\n                                    onClick={() =>\n                                      this.props.history.push(\n                                        `/contract-history/${d.id}`\n                                      )\n                                    }\n                                  >\n                                    <img src={docIcon} />\n                                    계약서 히스토리\n                                  </Button>\n                                </div>\n                              </div>\n                              <Link to={\"/property-detail/\" + d.id}>\n                                <Col span={24} className=\"cs-label-main\">\n                                  <div className=\"cs-label-t\">\n                                    {(d.propertyType == \"For Sale\" ||\n                                      d.propertyType == \"For Sale,For Rent\" ||\n                                      d.propertyType ==\n                                        \"For Rent,For Sale\") && (\n                                      <>매매 {d.propertyCost}만원</>\n                                    )}\n                                  </div>\n                                  <div className=\"cs-label-t\">\n                                    {(d.propertyType == \"For Rent\" ||\n                                      d.propertyType == \"For Sale,For Rent\" ||\n                                      d.propertyType ==\n                                        \"For Rent,For Sale\") && (\n                                      <>보증금 {d.propertyDeposite}만원</>\n                                    )}\n                                  </div>\n                                  <div className=\"cs-label-t\">\n                                    {(d.propertyType == \"For Rent\" ||\n                                      d.propertyType == \"For Sale,For Rent\" ||\n                                      d.propertyType ==\n                                        \"For Rent,For Sale\") && (\n                                      <>월세 {d.propertyRent}만원</>\n                                    )}\n                                  </div>\n                                </Col>\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">담당자 </div>\n                                  {d.manager ? (\n                                    <div className=\"cs-right-val cs-val\">\n                                      {d.manager.name}{\" \"}\n                                    </div>\n                                  ) : (\n                                    <div className=\"cs-right-val cs-val1\">\n                                      담당자 배정중\n                                    </div>\n                                  )}\n                                </Col>\n\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">주소 </div>\n                                  <div className=\"cs-right-val address\">\n                                    {d.address}\n                                  </div>\n                                </Col>\n\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">거래유형 </div>\n                                  <div className=\"cs-right-val\">\n                                    {d.propertyType == \"For Rent\" && \"전/월세\"}\n                                    {d.propertyType == \"For Sale\" && \"매매\"}\n                                    {d.propertyType == \"For Sale,For Rent\" &&\n                                      \"매매,전/월세\"}\n                                    {d.propertyType == \"For Rent,For Sale\" &&\n                                      \"전/월세,매매\"}\n                                  </div>\n                                </Col>\n\n                                {/* <Col className=\" mb-15\" span={12} >Maintenance fee </Col> */}\n                                <Col className=\"cs-field-outer\" span={24}>\n                                  <div className=\"cs-left-label\">관리비 </div>\n                                  <div className=\"cs-right-val\">\n                                    <b>{d.maintanceFee}</b>\n                                  </div>\n                                </Col>\n                              </Link>\n                            </div>\n\n                            <div className=\"cs-card-block-bottom mt-0\">\n                              <Collapse\n                                className=\"cs-collapse-section\"\n                                defaultActiveKey=\"\"\n                              >\n                                <Panel header=\"&nbsp;\" key=\"1\">\n                                  <Row>\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">구조 </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.rooms}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">방향 </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.direction}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">\n                                        전용면적{\" \"}\n                                      </div>\n                                      <div className=\"cs-right-val\">\n                                        {Math.round(\n                                          (Number(d.areaSquare) +\n                                            Number.EPSILON) *\n                                            100\n                                        ) / 100}\n                                        {d.areaUnit == \"Pyeong\" ? (\n                                          \"평\"\n                                        ) : (\n                                          <span>\n                                            m<sup>2</sup>\n                                          </span>\n                                        )}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">\n                                        엘레베이터{\" \"}\n                                      </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.elevator ? \"있음\" : \"결석\"}\n                                      </div>\n                                    </Col>\n\n                                    <Col className=\"cs-field-outer\" span={24}>\n                                      <div className=\"cs-left-label\">\n                                        입주가능일{\" \"}\n                                      </div>\n                                      <div className=\"cs-right-val\">\n                                        {d.availableMoveInStatus ==\n                                          \"Immediately\" && <>즉시입주</>}\n                                        {d.availableMoveInStatus ==\n                                          \"Negotiable\" &&\n                                          d.availableMoveInDate &&\n                                          moment(d.availableMoveInDate).format(\n                                            \"YYYY.MM.DD\"\n                                          )}\n                                      </div>\n                                    </Col>\n                                  </Row>\n                                </Panel>\n                              </Collapse>\n                            </div>\n                          </Row>\n                          // </Link>\n                        );\n                      })}\n                      {/*                                                     \n                                                    <Row className=\"border-light p-10\">\n                                                        <Col className=\" mb-15\" span={12} >\n                                                            <b>Contract info </b>\n                                                        </Col>\n                                                        <Col className=\"text-right mb-15\" span={12} >\n                                                            <Button shape=\"round\" className=\"theme-btn-default\">Contract history </Button>\n                                                        </Col>\n\n                                                        <Col span={24}>\n                                                            <h2 className=\"theme-color\">Lorem Ipsum Dollar sit amet</h2>\n                                                        </Col>\n\n                                                        <Col className=\" mb-15\" span={12} >Manager </Col>\n                                                        <Col className=\"text-right mb-15\" span={12} >\n                                                            <b>lorem ipsum</b>\n                                                        </Col>\n\n                                                        <Col className=\" mb-15\" span={12} >Address   </Col>\n                                                        <Col className=\"text-right mb-15\" span={12} >\n                                                            <b>lorem ipsum</b>\n                                                        </Col>\n\n                                                        <Col className=\" mb-15\" span={12} >Type </Col>\n                                                        <Col className=\"text-right mb-15\" span={12} >\n                                                            <b>lorem ipsum</b>\n                                                        </Col>\n\n                                                        <Col className=\" mb-15\" span={12} >Maintenance fee </Col>\n                                                        <Col className=\"text-right mb-15\" span={12} >\n                                                            <b>lorem ipsum</b>\n                                                        </Col>\n\n                                                        <Col className=\" mb-15\" span={12} >Floor </Col>\n                                                        <Col className=\"text-right mb-15\" span={12} >\n                                                            <b>7th</b>\n                                                        </Col>\n\n                                                       \n                                                        <Collapse className=\" mb-15\" defaultActiveKey={['1']} style={{ width: '100%' }} >\n                                                            <Panel header=\"&nbsp;\" key=\"1\">\n                                                                <Row>\n                                                                    <Col className=\" mb-15\" span={12} >\n                                                                    방 번호</Col>\n                                                                    <Col className=\"text-right mb-15\" span={12} >\n                                                                        <b>lorem ipsum</b>\n                                                                    </Col>\n\n                                                                    <Col className=\" mb-15\" span={12} >Direction </Col>\n\n                                                                    <Col className=\"text-right mb-15\" span={12} >\n                                                                        <b>lorem ipsum</b>\n                                                                    </Col>\n                                                                    <Col className=\" mb-15\" span={12} >전용 구역</Col>\n                                                                    <Col className=\"text-right mb-15\" span={12} >\n                                                                        <b>lorem ipsum</b>\n                                                                    </Col>\n                                                                    <Col className=\" mb-15\" span={12} >엘리베이터 </Col>\n                                                                    <Col className=\"text-right mb-15\" span={12} >\n                                                                        <b>lorem ipsum</b>\n                                                                    </Col>\n                                                                    <Col className=\" mb-15\" span={12} >입주 가능 날짜  </Col>\n                                                                    <Col className=\"text-right mb-15\" span={12} >\n                                                                        <b>lorem ipsum</b>\n                                                                    </Col>\n                                                                </Row>\n                                                            </Panel>\n                                                        </Collapse>\n\n                                                    </Row> */}\n                    </TabPane>\n                  </Tabs>\n                </div>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default PropertyProcessing;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/EditPropertyById.js",["840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875"],"import React, { Component, useState } from \"react\";\n\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  DatePicker,\n  Space,\n  Table,\n  Radio,\n  Select,\n  Upload,\n  message,\n} from \"antd\";\n\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nimport \"antd/dist/antd.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nimport BaseUrl from \"../../services/axios-url\";\nimport TopNav from \"../WithAuthHeaderFooter/TopNav\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport PropertySettingsAside from \"./property-settings-aside\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport history from \"../../RegisterProperty/history\";\nconst axios = require(\"axios\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { RangePicker } = DatePicker;\n\nconst { SubMenu } = Menu;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\nconst compLayout = {\n  labelCol: { span: 8 },\n  wrapperCol: { offset: 0, span: 20 },\n};\nconst fullLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { offset: 0, span: 24 },\n};\nconst { Option } = Select;\n\nconst onFinishFailed = (errorInfo) => {\n  console.log(\"Failed:\", errorInfo);\n  message.error(\"에러입니다.\");\n};\n\nfunction handleSelectChange(value) {\n  console.log(`selected ${value}`);\n}\n\nconst columns = [\n  {\n    title: \"번호\",\n    dataIndex: \"number\",\n    // render: text => <a>{text}</a>,\n  },\n  {\n    title: \"이름\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"지우다\",\n    dataIndex: \"delete\",\n  },\n];\n// const data = [\n//   {\n//     key: '1',\n//     number: '1',\n//     name: 'file name',\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\n//   },\n//   {\n//     key: '2',\n//     number: '2',\n//     name: 'file name',\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\n//   },\n// ];\n\nclass EditPropertyById extends Component {\n  state = {\n    maintenance_fee: [],\n    options: [],\n    selected_maintenance_fee: \"\",\n    selectedOptions: \"\",\n    selectedType: \"\",\n    searchData: [],\n    AllData: \"\",\n    fileList: [],\n    showAddress: \"\",\n  };\n\n  formRef = React.createRef();\n\n  handleMaintenancefeeChange = (value) => {\n    // console.log(`selected ${value}`);\n    var mFee = value.join(\",\");\n    this.setState({ selected_maintenance_fee: mFee });\n  };\n\n  handleOptionChange = (value) => {\n    console.log(`selected ${value}`);\n    var opt = value.join(\",\");\n    this.setState({ selectedOptions: opt });\n  };\n  handleTypeChange = (value) => {\n    console.log(`selected ${value}`);\n    var type = value.join(\",\");\n    this.setState({ selectedType: type });\n  };\n\n  deleteContractById = (e) => {\n    console.log(\"Content: \", e.currentTarget.dataset.id);\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .get(\n        BaseUrl +\n          \"/adminapi/DeleteContractFileById/\" +\n          e.currentTarget.dataset.id\n      )\n      .then((response) => {\n        // console.log(response.data.data)\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // get contract list\n          axios\n            .get(\n              BaseUrl + \"/adminapi/GetAllContractsByPropertyId/\" + propertyId\n            )\n            .then((res) => {\n              //this.setState({ searchData: \"\" });\n              // console.log(res)\n              if (res.data.status == 1 || res.data.status == \"1\") {\n                var searchData = res.data.data;\n\n                console.log(searchData);\n\n                var searchDataResult = [];\n\n                for (var i = 0; i < searchData.length; i++) {\n                  searchDataResult[i] = {\n                    key: searchData[i].id,\n                    id: searchData[i].id,\n                    number: i + 1,\n                    name: searchData[i].contractFile,\n                    delete: (\n                      <Button\n                        data-id={searchData[i].id}\n                        onClick={this.deleteContractById}\n                      >\n                        Delete\n                      </Button>\n                    ),\n                  };\n                }\n\n                // console.log(searchDataResult)\n                this.setState({\n                  searchData: searchDataResult,\n                  loading: false,\n                });\n              } else {\n                message.error(\"다시 시도해주세요.\");\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n              message.error(\"다시 시도해주세요.\");\n            });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  };\n  handleUpload = ({ fileList }) => {\n    //---------------^^^^^----------------\n    // this is equivalent to your \"const img = event.target.files[0]\"\n    // here, antd is giving you an array of files, just like event.target.files\n    // but the structure is a bit different that the original file\n    // the original file is located at the `originFileObj` key of each of this files\n    // so `event.target.files[0]` is actually fileList[0].originFileObj\n    // console.log(\"fileList\", fileList);\n\n    // you store them in state, so that you can make a http req with them later\n\n    //  const img = this.state.fileList.push(fileList);\n    // console.log(\"fileList\", fileList);\n    // console.log(\"index\", key);\n\n    // this.setState(key);\n    // fileList: [...this.state.fileList, ...fileList]\n    this.setState({ fileList });\n  };\n  onFinish = (values) => {\n    // this.setState({ loading: true });\n    // console.log(\"Success:-\", values.images);\n    // return;\n\n    let formData = new FormData();\n\n    formData.append(\"propertyId\", window.location.pathname.split(\"/\").pop());\n    //  formData.append(\"name\", values.property_name);\n    formData.append(\"address\", values.address);\n    formData.append(\"detailAddress\", values.detail_address);\n    // formData.append(\"showAddress\", values.type);   // public, private\n    formData.append(\"areaSquare\", values.square);\n    formData.append(\"propertyType\", this.state.selectedType); // Sale, rent\n    formData.append(\"elevator\", values.elevator);\n    formData.append(\"rooms\", values.number_of_rooms);\n    formData.append(\"direction\", values.direction);\n    formData.append(\"availableMoveInStatus\", values.move_in_status);\n    // formData.append(\"availableMoveInDate\", values.available_move_in_date);\n    // formData.append(\"isLandlord\", values.house_owner); // -----------------------------pending\n    formData.append(\"isPetAvailable\", values.pet);\n    formData.append(\"isMortgage\", values.mortgage);\n    formData.append(\"contractName\", values.contract_name);\n    formData.append(\"memberContractStatus\", values.memberContractStatus);\n    formData.append(\"propertyCost\", this.state.AllData.propertyCost);\n    formData.append(\"maintanceFee\", values.maintenance_cost);\n    formData.append(\"propertyFeatureId\", this.state.selectedOptions); // options ids\n    formData.append(\"propertyFacilityId\", this.state.selected_maintenance_fee); //maintainence fee id\n    formData.append(\"managerComment\", values.manager_comment); // additional_detail_info\n\n    formData.append(\"mobile\", values.owner_contact_no); //maintainence fee id\n\n    // images\n    if (values.images) {\n      values.images.fileList.forEach((file) => {\n        formData.append(\"property\", file.originFileObj);\n      });\n    }\n\n    // contract files\n    if (values.contract_files) {\n      values.contract_files.fileList.forEach((file) => {\n        formData.append(\"contractfile\", file.originFileObj);\n      });\n    }\n\n    axios\n      .post(BaseUrl + \"/propertyapi/AdminUpdateProperty\", formData)\n      .then((res) => {\n        console.log(res);\n        if (res.data.status == 1) {\n          message.success(\"업데이트가 되었습니다.\");\n\n          history.goBack();\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  componentDidMount() {\n    // console.log(window.location.pathname.split(\"/\").pop())\n\n    // get maintanence fee / facilities ------------------------------------------\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllPropertyFacilities/\")\n      .then((response) => {\n        // console.log(response.data.data)\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n          this.setState({\n            maintenance_fee: response.data.data,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n\n    // get options ----------------------------------------------\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllPropertyFeatures/\")\n      .then((response) => {\n        // console.log(response.data.data)\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n          this.setState({\n            options: response.data.data,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n\n    // ----------------------------------------------------\n\n    var propertyId = window.location.pathname.split(\"/\").pop();\n    axios\n      .get(BaseUrl + \"/adminapi/GetPropertyDetailById/\" + propertyId)\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", response);\n\n          var AllData = response.data.data;\n          console.log(AllData);\n\n          let optionsArray = [];\n          response.data.data.features.forEach((f) => {\n            if (f) {\n              optionsArray.push(f.toString());\n            }\n          });\n\n          let maintainenceFeeArray = [];\n          response.data.data.facilities.forEach((m) => {\n            if (m) {\n              maintainenceFeeArray.push(m.toString());\n            }\n          });\n\n          let propertyTypeArray = [];\n          AllData.propertyType.split(\",\").forEach((t) => {\n            propertyTypeArray.push(t.toString());\n          });\n\n          this.setState({\n            selected_maintenance_fee: maintainenceFeeArray,\n            selectedOptions: optionsArray,\n            selectedType: propertyTypeArray,\n            AllData: AllData,\n          });\n          this.setState({\n            showAddress: AllData.showAddress,\n            fileList: AllData.images.map((x, i) => {\n              return {\n                uid: i + 1,\n                name: x,\n                url: `${BaseUrl}/property/${x}`,\n              };\n            }),\n          });\n          // console.log(\"object\", {\n          //   fileList: AllData.images.map((x, i) => {\n          //     return {\n          //       uid: i + 1,\n          //       name: x,\n          //       url: `${BaseUrl}/property/${x}`,\n          //     };\n          //   }),\n          // });\n          console.log(\"AlData.images\", AllData.images);\n          this.formRef.current.setFieldsValue({\n            m_name: AllData.member && AllData.member.name,\n            email: AllData.member && AllData.member.email,\n            phone_no: AllData.phone,\n            mobile_number: AllData.member && AllData.member.mobile,\n            address: AllData.address,\n            detail_address: AllData.detailAddress,\n            square: AllData.areaSquare,\n            type: propertyTypeArray,\n            elevator: AllData.elevator ? \"yes\" : \"no\",\n            number_of_rooms: AllData.rooms,\n            direction: AllData.direction,\n            move_in_status: AllData.availableMoveInStatus,\n            //  available_move_in_date: AllData.availableMoveInDate,\n            landlord_contact: AllData.phone,\n            landlord: AllData.isLandlord,\n            pet: AllData.isPetAvailable ? \"yes\" : \"no\",\n            showAddress: AllData.showAddress,\n            mortgage: AllData.isMortgage ? \"yes\" : \"no\",\n            memberContractStatus: AllData.memberContractStatus,\n            maintenance_fee: maintainenceFeeArray,\n            option: optionsArray,\n            manager:\n              AllData.manager &&\n              `${AllData.manager.name} ${AllData.manager.adminlogin.role}`,\n            // property_name: AllData.name,\n            contract_name: AllData.contractName,\n            manager_comment: AllData.managerComment,\n            maintenance_cost: AllData.maintanceFee,\n            // images: {\n            //   fileList: AllData.images.map((x, i) => {\n            //     return {\n            //       uid: i + 1,\n            //       name: x,\n            //       url: `${BaseUrl}/property/${x}`,\n            //     };\n            //   }),\n            // },\n            // images:\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"error--->\", error);\n        message.error(\"다시 시도해주세요.\");\n      });\n\n    // get contract list\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllContractsByPropertyId/\" + propertyId)\n      .then((res) => {\n        // this.setState({ searchData: \"\" });\n        // console.log(res)\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var data = res.data.data;\n\n          console.log(\"search data---->\", data);\n\n          var searchDataResult = [];\n\n          for (var i = 0; i < data.length; i++) {\n            searchDataResult[i] = {\n              key: data[i].id,\n              id: data[i].id,\n              number: i + 1,\n              name: data[i].contractFile,\n              status: data[i].status,\n            };\n          }\n\n          // console.log(searchDataResult)\n          this.setState({\n            searchData: searchDataResult,\n            loading: false,\n          });\n        } else {\n          message.error(\"다시 시도해주세요.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  render() {\n    const {\n      maintenance_fee,\n      options,\n      selectedOptions,\n      selected_maintenance_fee,\n      searchData,\n      fileList,\n    } = this.state;\n    console.log(this.state.selectedOptions);\n    console.log(this.state.selected_maintenance_fee);\n    console.log(this.state.selectedType);\n\n    let data = searchData.filter((item) => item.status == \"Ongoing\");\n\n    // console.log(\"data.length\", disable_status);\n    return (\n      <Layout>\n        <TopNav />\n\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <PropertySettingsAside />\n\n            <Content className=\"cs-admin-basic-block\">\n              <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={onFinishFailed}\n                ref={this.formRef}\n              >\n                <Row>\n                  <Col\n                    xs={{ span: 20 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                    className=\"flex-center cs-admin-basic-info\"\n                  >\n                    <p className=\"m-0\">부동산 수정</p>\n                  </Col>\n                  <Col\n                    className=\"flex-center cs-admin-basic-info-button\"\n                    xs={{ span: 4 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      className=\"theme-btn float-right\"\n                      shape=\"round\"\n                      htmlType=\"submit\"\n                    >\n                      부동산 저장\n                    </Button>\n\n                    {/* \n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\n                        <Link to=\"/member-setting\" >\n                          Back to list\n                        </Link>\n                      </Button> */}\n                  </Col>\n\n                  <Divider className=\"cs-admin-basic-divider\" />\n\n                  <Col className=\"cs-admin-company\" span={24}>\n                    부동산 정보\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"이름\"\n                      name=\"m_name\"\n                      rules={[\n                        { required: false, message: \"Please input name!\" },\n                      ]}\n                    >\n                      <Input\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        readOnly\n                        placeholder=\"회원명\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"이메일\"\n                      name=\"email\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input email address!\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        readOnly\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        placeholder=\"이메일 주소를 입력해주세요.\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"전화번호\"\n                      name=\"phone_no\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input phone number!\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        placeholder=\"00-000-0000\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"모바일 번호\"\n                      name=\"mobile_number\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input email address!\",\n                        },\n                      ]}\n                    >\n                      <Input readOnly className=\"cs-admin-p-l-0 cs-ml20\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"주소\"\n                      name=\"address\"\n                      rules={[\n                        { required: false, message: \"Please input address!\" },\n                      ]}\n                    >\n                      <Input\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        placeholder=\"서울시 양천구 목2동 201동\"\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label={`상세주소(${\n                        this.state.showAddress == \"Private\"\n                          ? \"비공개\"\n                          : \"공공의\"\n                      })`}\n                      name=\"detail_address\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input Detail address!\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        placeholder=\"동 / 층 / 호 를 입력해주세요.\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input with-border\"\n                      {...compLayout}\n                      label=\"전용면적\"\n                      name=\"square\"\n                      rules={[\n                        { required: false, message: \"Please input square!\" },\n                      ]}\n                    >\n                      <Input\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        placeholder=\"선택해주세요.\"\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"거래유형\"\n                      name=\"type\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"거래유형을 선택해 주세요!\",\n                        },\n                      ]}\n                    >\n                      {/* <Select\n                        onChange={handleSelectChange}>\n                        <Option value=\"\">Select</Option>\n                        <Option value=\"For Sale\">For Sale</Option>\n                        <Option value=\"For Rent\">For Rent</Option>\n                        <Option value=\"For Sale, For Rent\">For Both</Option>\n                      </Select> */}\n\n                      <Select\n                        placeholder=\"선택해주세요.\"\n                        mode=\"tags\"\n                        onChange={this.handleTypeChange}\n                        className=\"cs-multiple-select cs-ml20\"\n                      >\n                        <Option value=\"\" disabled>\n                          거래유형\n                        </Option>\n                        <Option key=\"For Sale\">판매용</Option>\n                        <Option key=\"For Rent\">전/월세</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width \"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"엘레베이터\"\n                      name=\"elevator\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"엘레베이터 여부를 선택해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요.\"\n                        className=\"cs-ml20\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"yes\">있어요</Option>\n                        <Option value=\"no\">없어요</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width\"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"구조\"\n                      name=\"number_of_rooms\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input Number of rooms!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        placeholder=\"선택해주세요.\"\n                        className=\"cs-ml20\"\n                        // onChange={handleSelectChange}\n                      >\n                        <Option value=\"\" disabled>\n                          선택해주세요.\n                        </Option>\n                        <Option value=\"원룸\">원룸</Option>\n                        <Option value=\"투룸\">투룸</Option>\n                        <Option value=\"쓰리룸\">쓰리룸</Option>\n                        <Option value=\"포룸\">포룸</Option>\n                        <Option value=\"포룸+\">포룸+</Option>\n                        <Option value=\"기타\">기타</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width\"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"방향\"\n                      name=\"direction\"\n                      rules={[\n                        { required: false, message: \"Please input direction!\" },\n                      ]}\n                    >\n                      <Select\n                        // onChange={handleSelectChange}\n                        className=\"cs-ml20\"\n                      >\n                        <Option value=\"\" disabled>\n                          선택해주세요.\n                        </Option>\n                        <Option value=\"East\">동쪽</Option>\n                        <Option value=\"West\">서쪽</Option>\n                        <Option value=\"South\">남쪽</Option>\n                        <Option value=\"North\">북쪽</Option>\n                        <Option value=\"North-east\">북동</Option>\n                        <Option value=\"North-west\">북서</Option>\n                        <Option value=\"South-east\">남동</Option>\n                        <Option value=\"South-west\">남서</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width\"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"입주가능일\"\n                      name=\"move_in_status\"\n                      rules={[\n                        { required: false, message: \"Please input status!\" },\n                      ]}\n                    >\n                      <Select\n                        // onChange={handleSelectChange}\n                        className=\"cs-ml20\"\n                      >\n                        <Option value=\"\" disabled>\n                          선택해주세요.\n                        </Option>\n                        <Option value=\"Immediately\">바로</Option>\n                        <Option value=\"Negotiable\">날짜협의</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input with-border\"\n                      {...compLayout}\n                      label=\"집주인 휴대폰 번호\"\n                      name=\"landlord_contact\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please enter Landlord contact !\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"입력해주세요.\" className=\"cs-ml20\" />\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width\"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"반려견\"\n                      name=\"pet\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"반려동물 동거 여부를 선택해 주세요!\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        // onChange={handleSelectChange}\n                        className=\"cs-ml20\"\n                      >\n                        <Option value=\"\" disabled>\n                          선택해주세요.\n                        </Option>\n                        <Option value=\"yes\">가능</Option>\n                        <Option value=\"no\">불가능</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width\"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"전세대출\"\n                      name=\"mortgage\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select Mortgage  !\",\n                        },\n                      ]}\n                    >\n                      <Select\n                        // onChange={handleSelectChange}\n                        className=\"cs-ml20\"\n                      >\n                        <Option value=\"\" disabled>\n                          선택해주세요.\n                        </Option>\n                        <Option value=\"yes\">가능</Option>\n                        <Option value=\"no\">불가능</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col\n                    xs={{ span: 24 }}\n                    sm={{ span: 24 }}\n                    lg={{ span: 12 }}\n                    className=\"cs-admin-real-estate-email no-width\"\n                  >\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"매물상태\"\n                      name=\"memberContractStatus\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select Contract status !\",\n                        },\n                      ]}\n                    >\n                      <Select onChange={handleSelectChange} className=\"cs-ml20\">\n                        {/* <Option value=\"\" disabled> */}\n                        {/* 선택해주세요\n                        </Option> */}\n                        <Option value=\"Pending\">확인중</Option>\n                        <Option value=\"Waiting\">계약대기</Option>\n                        <Option value=\"Completed\">계약완료</Option>\n                        <Option value=\"Ended\">종료</Option>\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      label=\"상세설명\"\n                      name=\"additional_detail_info\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select detail info!\",\n                        },\n                      ]}\n                    >\n                      <Input\n                        className=\"cs-admin-p-l-0 cs-ml20\"\n                        placeholder=\"입력해주세요.\"\n                      />\n                    </Form.Item>\n                  </Col>\n\n                  {/* <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\n                    <Form.Item\n                    className=\"cs-admin-form-input\"\n                      {...compLayout}\n                      label=\"부동산 이름\"\n                      name=\"property_name\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please input property name!\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col> */}\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      // {...compLayout}\n                      label=\"옵션\"\n                      name=\"option\"\n                      rules={[\n                        { required: false, message: \"Please select option !\" },\n                      ]}\n                    >\n                      {/* {getFieldDecorator(\"option\", {\n                        rules: [\n                          {\n                            required: false,\n                            message: \"Selecciona alumnos\"\n                          }\n                        ]\n                      })(\n                        <Select\n                          size=\"large\"\n                          mode=\"multiple\"\n                          placeholder=\"Selecciona alumnos\"\n                        >\n                          {\n                          options.map((o, i) => {\n                            return <Option key={o.id}>{o.propertyFeatures}</Option>\n                          })\n                        }\n                        </Select>\n                      )} */}\n\n                      <Select\n                        mode=\"tags\"\n                        placeholder=\"선택해주세요.\"\n                        onChange={this.handleOptionChange}\n                        className=\"cs-multiple-select cs-ml20\"\n                      >\n                        {options.map((o, i) => {\n                          return (\n                            <Option key={o.id}>{o.propertyFeatures}</Option>\n                          );\n                        })}\n                      </Select>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item label=\"관리비\" className=\"cs-admin-form-input\">\n                      <Input.Group className=\"m-0\">\n                        <Form.Item\n                          className=\"cs-admin-form-input with-border \"\n                          style={{ borderBottom: \"none\" }}\n                          // {...compLayout}\n                          label=\"\"\n                          name=\"maintenance_cost\"\n                          rules={[\n                            {\n                              required: false,\n                              message: \"Please select Maintenance fee !\",\n                            },\n                          ]}\n                        >\n                          <Input\n                            placeholder=\"관리비 금액을 입력해주세요.\"\n                            className=\"cs-ml20\"\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          className=\"cs-admin-form-input\"\n                          // {...compLayout}\n                          name=\"maintenance_fee\"\n                          rules={[\n                            {\n                              required: false,\n                              message: \"Please select Maintenance fee !\",\n                            },\n                          ]}\n                        >\n                          <Select\n                            mode=\"tags\"\n                            placeholder=\"선택해주세요.\"\n                            onChange={this.handleMaintenancefeeChange}\n                            className=\"cs-multiple-select cs-ml20\"\n                            style={{ minWidth: \"410px\" }}\n                          >\n                            {maintenance_fee.map((m, i) => {\n                              return (\n                                <Option key={m.id}>{m.propertyFacility}</Option>\n                              );\n                            })}\n                          </Select>\n                        </Form.Item>\n                      </Input.Group>\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      label=\" 담당자 \"\n                      name=\"manager\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select Manager  !\",\n                        },\n                      ]}\n                    >\n                      <Input readonly placeholder=\"김정수 대리\" />\n                    </Form.Item>\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input cs-admin-upload-images-block\"\n                      label=\"사진등록\"\n                      name=\"images\"\n                      rules={[\n                        { required: false, message: \"이미지를 선택해주세요\" },\n                      ]}\n                    >\n                      <Upload\n                        multiple\n                        maxCount={18}\n                        beforeUpload={() => false}\n                        fileList={fileList}\n                        onChange={this.handleUpload}\n                        placeholder=\"사진을 첨부해주세요\"\n                      >\n                        <Button\n                          icon={<UploadOutlined />}\n                          className=\"cs-admin-upload-image-btn\"\n                        >\n                          첨부파일 등록\n                        </Button>\n                        <span style={{ color: \"#ADADAD\" }} className=\"cs-ml20\">\n                          {fileList.length == 0 ? \"사진을 첨부해주세요\" : null}\n                        </span>\n                      </Upload>\n                    </Form.Item>\n                  </Col>\n                  {this.state.AllData.createdbytype != \"non-member\" && (\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                      <Form.Item\n                        className=\"cs-admin-form-input cs-admin-upload-images-block\"\n                        label=\"계약서 첨부\"\n                        name=\"contract_files\"\n                        rules={[\n                          {\n                            required: false,\n                            message: \"Please select Contract files  !\",\n                          },\n                        ]}\n                      >\n                        <Upload\n                          multiple\n                          maxCount={20}\n                          beforeUpload={() => false}\n                          placeholder=\"계약서를 첨부해주세요.\"\n                        >\n                          <Button\n                            className=\"cs-admin-upload-image-btn\"\n                            icon={<UploadOutlined />}\n                          >\n                            첨부파일 등록\n                          </Button>\n                        </Upload>\n                      </Form.Item>\n                    </Col>\n                  )}\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      label=\"계약서 등록\"\n                      name=\"contract_name\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please select contract name  !\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                  </Col>\n\n                  {/* <img src=\"https://zeepsapis.herokuapp.com/property/1610955479184-bezkoder-73190697.jpg\"/> */}\n\n                  <Col\n                    xs={{ span: 4 }}\n                    sm={{ span: 4 }}\n                    lg={{ span: 4 }}\n                    className=\"ant-col ant-col-4 ant-form-item-label cs-admin-form-input\"\n                    style={{\n                      padding: \"15px 20px\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <h3\n                      style={{\n                        height: \"100%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      계약서 목록{\" \"}\n                    </h3>\n                  </Col>\n                  <Col\n                    xs={{ span: 20 }}\n                    sm={{ span: 20 }}\n                    lg={{ span: 20 }}\n                    className=\"cs-admin-form-input\"\n                  >\n                    {searchData.map((item) => (\n                      <Row className=\"cs-admin-contract-list\">\n                        <Col\n                          xs={{ span: 18 }}\n                          sm={{ span: 18 }}\n                          lg={{ span: 18 }}\n                          className=\"cs-admin-contract-name-title\"\n                        >\n                          {item.name}\n                        </Col>\n                        <Col\n                          xs={{ span: 6 }}\n                          sm={{ span: 6 }}\n                          lg={{ span: 6 }}\n                          className=\"cs-card-block\"\n                          style={{ border: \"none\", margin: \"0\" }}\n                        >\n                          <Button\n                            shape=\"round\"\n                            className={\n                              item.status == \"Completed\"\n                                ? \"theme-btn-default cs-btn-1\"\n                                : \"theme-btn-default cs-btn-4\"\n                            }\n                          >\n                            {item.status == \"Completed\"\n                              ? \"계약서 컨펌완료\"\n                              : \"계약서 컨펌대기\"}\n                          </Button>\n                        </Col>\n                      </Row>\n                    ))}\n                  </Col>\n\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}>\n                    <Form.Item\n                      className=\"cs-admin-form-input\"\n                      label=\"담당자 메모\"\n                      name=\"manager_comment\"\n                      rules={[\n                        {\n                          required: false,\n                          message: \"Please add Manager comment !\",\n                        },\n                      ]}\n                    >\n                      <TextArea className=\"cs-admin-textarea-no-border cs-admin-p-l-0 cs-ml20\" />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Form>\n            </Content>\n          </Layout>\n        </Content>\n\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default EditPropertyById;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/RegisterProperty.js",["876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941"],"import React, { Component } from \"react\";\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\nimport {\n  Layout,\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Menu,\n  Divider,\n  Row,\n  Col,\n  Space,\n  Modal,\n  Steps,\n  Radio,\n  Select,\n  Tag,\n  DatePicker,\n  Upload,\n  message,\n  Card,\n  InputNumber,\n} from \"antd\";\n\nimport {\n  UploadOutlined,\n  SearchOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./register-property.css\";\nimport \"../css/global.css\";\nimport \"./CustomRegisterProperty.css\";\nimport \"./EmptyPhase.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport BaseUrl from \"../services/axios-url\";\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\nimport Cookies from \"universal-cookie\";\nimport requiredIcon from \"../images/required.png\";\nimport metersq from \"../images/metersq.png\";\nimport pyeong from \"../images/pyeong.png\";\nimport history from \"./history\";\nimport MobileNumericInput from \"../common/MobileNumericInput\";\nimport moment from \"moment\";\nimport UploadImage from \"./UploadImage\";\nimport InputMask from \"react-input-mask\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport KakaoMap from \"./KakaoMap\";\n\nconst axios = require(\"axios\");\n// const imageToBase64 = require(\"image-to-base64\");\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Step } = Steps;\nconst { Option } = Select;\nconst { CheckableTag } = Tag;\n// const tagsData = ['Electricity', 'Gas', 'Water', 'Internet', 'Tv', 'n/a']; // maintainence fee\n\nconst DaumPostcodeStyle = {\n  cursor: \"pointer\",\n};\n\nconst optionData = [\n  \"A/C\",\n  \"Refrigerator\",\n  \"Washing machine\",\n  \"Stove\",\n  \"Induction\",\n  \"Microwave\",\n  \"Desk\",\n  \"bookshelf\",\n  \"Bed\",\n  \"Closet\",\n  \"Shoe rack\",\n  \"Sink\",\n]; // options\nconst typeData = [\n  {\n    eng: \"For Sale\",\n    korean: \"매매\",\n  },\n  {\n    eng: \"For Rent\",\n    korean: \"전월세\",\n  },\n];\n\n// function onTypeChange(e) {\n//     console.log(`radio checked:${e.target.value}`);\n// }\nfunction handleStructureChange(value) {\n  console.log(`selected ${value}`);\n}\nfunction handleDirectionChange(value) {\n  console.log(`selected ${value}`);\n}\nfunction onChangeAvailableDate(date, dateString) {\n  console.log(date, dateString);\n}\n\nclass RegisterProperty extends Component {\n  formRef = React.createRef();\n  state = {\n    search: \"\",\n    selectedTags: [],\n    selectedTagsId: [],\n    selectedTagsIdString: \"\",\n    optionTags: [],\n    optionTagsId: [],\n    optionTagsIdString: \"\",\n    previewVisible: false,\n    previewImage: \"\",\n    fileList: [],\n\n    isHouseOwner: false,\n    type: \"For Sale\",\n    elevator: \"Yes\",\n    structure: \"One Room\",\n    direction: \"East\",\n    publicPrivate: \"\",\n    pet: \"\",\n    mortgage: \"\",\n    avalDate: \"\",\n    AvalDateChangeDatePicker: \"\",\n    actual_available_date: \"\",\n    AreaInSqm: \"\",\n    loading: false,\n    tagsData: [],\n    optionData: [],\n    showMemberName: false,\n    selectedType: [],\n    selectedTypeString: \"\",\n    dedicatedArea1: 20,\n    dedicatedArea2: 30,\n    dedicatedArea3: 36,\n    HouseOwner: \"\",\n    owner_contact_no: \"\",\n    openAddressbox: false,\n    searchResults: \"\",\n    property_type: \"\",\n    address: \"\",\n    detail_address: \"\",\n    disbleToggle: false,\n    searchError: false,\n    searchWord: \"\",\n    isSubmited: false,\n    area_manual: null,\n    areaSqmFlag: false,\n    editMode: false,\n    editData: {},\n    imageList: {\n      file1: [],\n      file2: [],\n      file3: [],\n      file3: [],\n      file4: [],\n      file5: [],\n      file6: [],\n      file7: [],\n      file8: [],\n      file9: [],\n      file10: [],\n      file11: [],\n      file12: [],\n      file13: [],\n      file14: [],\n      file15: [],\n      file16: [],\n      file17: [],\n      file18: [],\n    },\n    imgbtn: false,\n    maintainenceFeeDisable: false,\n    addressVisible: false,\n  };\n\n  onAreaChange = (e) => {\n    // console.log(`radio checked:${e.target.value}`);\n    var data = e.target.value;\n\n    // console.log(data)\n    this.setState({\n      //AreaInSqm: data * 3.306,\n      area_manual: data,\n    });\n    this.formRef.current.setFieldsValue({\n      area_manual: data,\n    });\n  };\n\n  onAreaChangeInSqMt = () => {\n    let areaSq = \"\";\n    if (this.state.areaSqmFlag) {\n      areaSq = this.state.area_manual / 3.306;\n      this.setState({\n        areaSqmFlag: false,\n        area_manual: areaSq,\n        dedicatedArea1: 20,\n        dedicatedArea2: 30,\n        dedicatedArea3: 36,\n      });\n    } else {\n      areaSq = this.state.area_manual * 3.306;\n      this.setState({\n        areaSqmFlag: true,\n        area_manual: areaSq,\n        dedicatedArea1: 20 * 3.306,\n        dedicatedArea2: 30 * 3.306,\n        dedicatedArea3: 36 * 3.306,\n      });\n    }\n\n    this.formRef.current.setFieldsValue({\n      area_manual: areaSq,\n    });\n  };\n\n  onAreaManualChange = (e) => {\n    this.setState({\n      area_manual: parseInt(e.target.value),\n    });\n  };\n\n  handleMaintainenceFeeChange(tag, checked, i) {\n    const { selectedTags, selectedTagsId } = this.state;\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t !== tag);\n    const nextSelectedTagsId = checked\n      ? [...selectedTagsId, i]\n      : selectedTagsId.filter((qt) => qt !== i);\n    if (nextSelectedTagsId.includes(6)) {\n      this.setState({\n        maintainenceFeeDisable: true,\n      });\n    } else {\n      this.setState({\n        maintainenceFeeDisable: false,\n      });\n    }\n    this.setState({\n      selectedTags: nextSelectedTags,\n      selectedTagsId: nextSelectedTagsId,\n    });\n\n    var separator = \",\";\n    var implodedArray = nextSelectedTagsId.join(separator);\n    this.setState({\n      selectedTagsIdString: implodedArray,\n    });\n  }\n\n  handleOptionDataChange(tag, checked, i) {\n    const { optionTags, optionTagsId } = this.state;\n    const nextSelectedTags = checked\n      ? [...optionTags, tag]\n      : optionTags.filter((t) => t !== tag);\n    const nextSelectedTagsId = checked\n      ? [...optionTagsId, i]\n      : optionTagsId.filter((wt) => wt !== i);\n    this.setState({\n      optionTags: nextSelectedTags,\n      optionTagsId: nextSelectedTagsId,\n    });\n\n    var separator = \",\";\n    var implodedArray = nextSelectedTagsId.join(separator);\n    this.setState({\n      optionTagsIdString: implodedArray,\n    });\n  }\n\n  handleTypeChange(tag, checked) {\n    const { selectedType } = this.state;\n    const nextSelectedType = checked\n      ? [...selectedType, tag]\n      : selectedType.filter((t) => t !== tag);\n    this.setState({\n      selectedType: nextSelectedType,\n      selectedTypeString: nextSelectedType.join(\",\"),\n    });\n    // console.log(nextSelectedType.join(','))\n  }\n\n  // file upload code start----------------------------------------------\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = (file) => {\n    // console.log(\"file\", file);\n    // let imageUrl = \"\";\n    // if (this.props.match.params.id) {\n    //   imageUrl = file.url;\n    // } else {\n    //   imageUrl = file.thumbUrl;\n    // }\n\n    this.setState({\n      previewImage: file.thumbUrl ? file.thumbUrl : file.url,\n      previewVisible: true,\n    });\n  };\n\n  onHouseOwnerChange = (e) => {\n    this.setState({\n      isHouseOwner: !this.state.isHouseOwner,\n      HouseOwner: e.target.value,\n    });\n  };\n\n  onAvalDateChange = (e) => {\n    this.setState({\n      avalDate: e.target.value,\n    });\n  };\n  onAvalDateChangeDatePicker = (date, dateString) => {\n    this.setState({\n      AvalDateChangeDatePicker: dateString,\n    });\n  };\n\n  onTypeChange = (e) => {\n    this.setState({\n      type: e.target.value,\n    });\n  };\n\n  onElevatorChange = (e) => {\n    this.setState({\n      elevator: e.target.value,\n    });\n  };\n\n  handleStructureChange = (value) => {\n    this.setState({\n      structure: value,\n    });\n  };\n\n  handleDirectionChange = (value) => {\n    this.setState({\n      direction: value,\n    });\n  };\n\n  onChangePublicPrivate = (e) => {\n    this.setState({\n      publicPrivate: e.target.value,\n    });\n  };\n\n  onPetChange = (e) => {\n    this.setState({\n      pet: e.target.value,\n    });\n  };\n  propertyTypeChange = (e) => {\n    this.setState({\n      property_type: e.target.value,\n    });\n  };\n\n  onMortgageChange = (e) => {\n    this.setState({\n      mortgage: e.target.value,\n    });\n  };\n\n  onDateChange = (date, dateString) => {\n    this.setState({\n      actual_available_date: dateString,\n    });\n  };\n\n  handleUpload = ({ fileList }, item) => {\n    //---------------^^^^^----------------\n    // this is equivalent to your \"const img = event.target.files[0]\"\n    // here, antd is giving you an array of files, just like event.target.files\n    // but the structure is a bit different that the original file\n    // the original file is located at the `originFileObj` key of each of this files\n    // so `event.target.files[0]` is actually fileList[0].originFileObj\n    // console.log(\"fileList\", fileList);\n\n    // you store them in state, so that you can make a http req with them later\n\n    //  const img = this.state.fileList.push(fileList);\n    // console.log(\"fileList\", fileList);\n    // console.log(\"index\", key);\n\n    // }\n    const withoutError = fileList.filter(\n      (item) => !item.hasOwnProperty(\"error\")\n    );\n    // console.log(\"temp\", temp);\n    this.setState({\n      imageList: { ...this.state.imageList, [item]: withoutError },\n    });\n  };\n  onHouseOwnerContactChange = (e) => {\n    console.log(\"input text click\");\n  };\n\n  isLoggedIn = () => {\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    if (\n      cookies.get(finalCookieName) == undefined ||\n      cookies.get(finalCookieName) == \"undefined\"\n    ) {\n      // this.setState({ showMemberName: true });\n    } else {\n      this.setState({ showMemberName: false });\n    }\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    // console.log('encodedStringBtoA', encodedStringBtoA);\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n  };\n  onClickImgBtn = () => {\n    this.setState({\n      imgbtn: true,\n    });\n  };\n  onClickOK = () => {\n    this.setState({ imgbtn: false });\n  };\n  disabledDate = (current) => {\n    // Can not select days before today and today\n    return current && current < moment().endOf(\"day\");\n  };\n  onFinish = (values) => {\n    this.setState({ loading: true });\n\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    // Form data begins\n    let apiEndpoint = \"\";\n    let formData = new FormData();\n\n    // already logged in user\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      if (cookies.get(\"UU\")) {\n        var LoggedInUserId = \"\";\n        var LoggedInUserId = cookies.get(\"UU\");\n        formData.append(\"memberId\", LoggedInUserId);\n\n        apiEndpoint = \"MemberInsertProperty\";\n      } else {\n        message.error(\"다시 시도해주세요.\");\n        return;\n      }\n    }\n    // Not logged in user\n    else if (\n      cookies.get(finalCookieName) == undefined ||\n      cookies.get(finalCookieName) == \"undefined\"\n    ) {\n      formData.append(\"m_name\", values.m_name);\n      apiEndpoint = \"UnSignedMemberInsertProperty\";\n    }\n    // Not a normal user\n    else {\n      message.error(\"다시 시도해주세요.\");\n      return;\n    }\n    formData.append(\"propertyId\", this.props.match.params.id || 0);\n\n    formData.append(\"name\", values.name ? values.name : \"\");\n    formData.append(\"address\", values.address || \"\");\n    formData.append(\"detailAddress\", values.detail_address || \"\");\n    formData.append(\"showAddress\", values.property_type || \"\"); // public, private\n    formData.append(\"areaSquare\", values.area_manual); //area\n    formData.append(\"areaUnit\", this.state.areaSqmFlag ? \"m2\" : \"Pyeong\");\n    formData.append(\"propertyType\", this.state.selectedTypeString || \"\"); // Sale, rent\n    formData.append(\"elevator\", values.elevator);\n    formData.append(\"rooms\", values.structure || \"\");\n    formData.append(\"direction\", values.direction || \"\");\n    formData.append(\"availableMoveInStatus\", values.available_date || \"\");\n    formData.append(\n      \"availableMoveInDate\",\n      this.state.actual_available_date || \"\"\n    );\n\n    formData.append(\"isLandlord\", values.house_owner || \"\");\n    formData.append(\"isPetAvailable\", values.pet || \"\");\n    formData.append(\"isMortgage\", values.mortgage || \"\");\n    formData.append(\"contractStatus\", \"no\");\n    formData.append(\"propertyCost\", 0);\n    formData.append(\"maintanceFee\", values.maintanceFee || 0);\n    formData.append(\"propertyFeatureId\", this.state.optionTagsIdString || \"\"); // options ids\n    formData.append(\"propertyFacilityId\", this.state.selectedTagsIdString); //maintainence fee id\n    formData.append(\"memberContractStatus\", \"Pending\");\n    formData.append(\"area_manual\", values.area_manual);\n    //maintainence fee id\n    const mobile =\n      values.owner_contact_no && values.owner_contact_no.replaceAll(\"-\", \"\");\n    formData.append(\"mobile\", mobile || \"\"); //maintainence fee id\n    // formData.append(\"maintanceCost\", '20,20,20,20,20'); // maintainence fee cost\n    // formData.append(\"property\", this.state.fileList[0].originFileObj);\n    // console.log(\"values.images------\", values.images);\n    let propertyOldImg = [];\n    // console.log(\n    //   \"Object.values(this.state.imageList)\",\n    //   Object.values(this.state.imageList)\n    // );\n    Object.values(this.state.imageList).map((file) => {\n      if (file && file.length && file[0].url) {\n        propertyOldImg.push(file[0].url.split(\"/\").pop());\n      } else if (file && file.length) {\n        console.log(\"propertyOldImg\", file[0].originFileObj);\n        formData.append(\"property\", file[0].originFileObj);\n      }\n    });\n    // console.log(\"propertyOldImg\", propertyOldImg);\n    // values.images &&\n    // values.images.fileList.forEach((file) => {\n    //   if (file.url) {\n    //     propertyOldImg.push(file.url.split(\"/\").pop());\n    //   } else {\n    //     formData.append(\"property\", file.originFileObj);\n    //   }\n    // });\n    propertyOldImg.map((x, i) => {\n      formData.append(\"propertyOldImg[\" + i + \"]\", x);\n    });\n\n    axios\n      .post(BaseUrl + \"/propertyapi/\" + apiEndpoint, formData)\n      .then((res) => {\n        if (res.data.status == 1) {\n          message.success(\"매물이 성공적으로 등록되었습니다.\");\n          history.push(\"/register-property-step-two\", {\n            data: this.state.selectedTypeString,\n            editData: this.state.editData,\n            id: res.data.data.id,\n          });\n\n          // const history = createBrowserHistory();\n          // history.push(\"/register-property-step-two\");\n          //window.location = \"/register-property-step-two\";\n        } else {\n          message.error(res.data.message);\n        }\n        this.setState({ loading: false });\n      })\n      .catch((error) => {\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false });\n      });\n  };\n\n  componentDidMount() {\n    this.isLoggedIn();\n    if (this.props.match.params.id) {\n      axios\n        .get(\n          BaseUrl +\n            \"/adminapi/GetPropertyDetailById/\" +\n            this.props.match.params.id\n        )\n        .then((response) => {\n          if (response.data.status == 1 || response.data.status == \"1\") {\n            const unit = response.data.data.areaUnit == \"m2\" ? true : false;\n            if (unit) {\n              this.setState({\n                areaSqmFlag: true,\n                dedicatedArea1: 20 * 3.306,\n                dedicatedArea2: 30 * 3.306,\n                dedicatedArea3: 36 * 3.306,\n              });\n            }\n\n            response.data.data.images.map((x, i) => {\n              this.setState({\n                imageList: {\n                  ...this.state.imageList,\n                  [\"file\" + (i + 1)]: [\n                    {\n                      uid: i + 1,\n                      name: x,\n                      url: `${BaseUrl}/property/${x}`,\n                    },\n                  ],\n                },\n              });\n            });\n            this.setState({\n              editMode: true,\n              editData: response.data.data,\n              selectedTagsId: response.data.data.facilities,\n              optionTagsId: response.data.data.features,\n              selectedType: response.data.data.propertyType.split(\",\"),\n              HouseOwner: response.data.data.isLandlord == true ? \"Yes\" : \"No\",\n              disbleToggle: true,\n              //areaSqmFlag:\n              owner_contact_no: response.data.data.ownerPhone,\n              selectedTypeString: response.data.data.propertyType,\n              optionTagsIdString: response.data.data.features.join(\",\"),\n              selectedTagsIdString: response.data.data.facilities.join(\",\"),\n              // fileList: response.data.data.images.map((x, i) => {\n              //   return {\n              //     uid: i + 1,\n              //     name: x,\n              //     url: `${BaseUrl}/property/${x}`,\n              //   };\n              // }),\n\n              // previewImage: response.data.data.images.map((x, i) => {\n              //   return `${BaseUrl}/property/${x}`\n\n              // }),\n              avalDate: response.data.data.availableMoveInStatus,\n              actual_available_date: response.data.data.availableMoveInDate,\n              detail_address: response.data.data.detailAddress,\n            });\n\n            this.formRef.current.setFieldsValue({\n              address: this.state.editData.address,\n              detail_address: this.state.editData.detailAddress,\n              property_type: this.state.editData.showAddress, //public/private,\n              area_manual: this.state.editData.areaSquare,\n              type: this.state.editData.propertyType, //for sale,for rent\n              elevator: this.state.editData.elevator == true ? \"Yes\" : \"No\",\n              structure: this.state.editData.rooms, //one room\n              direction: this.state.editData.direction, //east west...\n              // maintainence_fee: \"TV\",\n              maintanceFee: this.state.editData.maintanceFee, //cost\n              //option\n              available_date: this.state.editData.availableMoveInStatus, //immediate negotiate\n              // actual_available_date: this.state.editData.availableMoveInDate, //date\n              house_owner:\n                this.state.editData.isLandlord == true ? \"Yes\" : \"No\",\n              owner_contact_no: this.state.editData.ownerPhone,\n              pet: this.state.editData.isPetAvailable == true ? \"Yes\" : \"No\",\n              mortgage: this.state.editData.isMortgage == true ? \"Yes\" : \"No\",\n              //  images: this.state.editData.images,\n            });\n\n            this.setState({\n              property_type: this.state.editData.showAddress,\n            });\n          } else {\n            message.error(response.data.message);\n          }\n        })\n        .catch((error) => {\n          message.error(\"다시 시도해주세요.\");\n        });\n    }\n    // get maintanence fee / facilities ------------------------------------------\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllPropertyFacilities/\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          this.setState({\n            tagsData: response.data.data,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        message.error(\"다시 시도해주세요.\");\n      });\n\n    // get options ----------------------------------------------\n    axios\n      .get(BaseUrl + \"/adminapi/GetAllPropertyFeatures/\")\n      .then((response) => {\n        if (response.data.status == 1 || response.data.status == \"1\") {\n          // console.log(\"dddd: \", data.data.id);\n          this.setState({\n            optionData: response.data.data,\n          });\n        } else {\n          message.error(response.data.message);\n        }\n      })\n      .catch((error) => {\n        message.error(\"다시 시도해주세요.\");\n      });\n  }\n\n  // onMobileChange = (value) => {\n  //   this.setState({ owner_contact_no: value });\n  //   console.log(\"this.state.owner_contact_no\", this.state.owner_contact_no);\n  // };\n\n  handleComplete = (data) => {\n    this.setState({\n      search: data.jibunAddress || data.autoJibunAddress,\n      addressVisible: false,\n    });\n    this.formRef.current.setFieldsValue({\n      address: data.jibunAddress || data.autoJibunAddress,\n    });\n  };\n  render() {\n    // console.log(this.state.optionTagsIdString)\n    const {\n      type,\n      elevator,\n      pet,\n      loading,\n      tagsData,\n      optionData,\n      showMemberName,\n      selectedType,\n      imageList,\n    } = this.state;\n    // const images = [1, 2, 3];\n    const onFinishFailed = (errorInfo) => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    const requiiredIconStyle = {\n      marginTop: \"-8px\",\n      width: \"12px\",\n    };\n\n    const margin24Style = {\n      marginBottom: \"24px\",\n    };\n\n    const margin0Style = {\n      marginBottom: \"0\",\n    };\n\n    const { selectedTags, selectedTagsId } = this.state;\n    const { optionTags, optionTagsId } = this.state;\n\n    // File Upload code start ----------------------------------------------------------------------------\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      imgbtn,\n      area_manual,\n    } = this.state;\n    const uploadButton = (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <PlusOutlined />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <Layout className=\"register-property-layout\">\n        <WithAuthHeader />\n        <Content>\n          <Layout className=\"site-layout-background\">\n            <Space direction=\"vertical\" size={\"large\"}>\n              <Content className=\"content-padding\">\n                <Row className=\"\">\n                  <Col className=\"text-center cs-main-block\">\n                    {!imgbtn ? (\n                      <>\n                        <Row>\n                          <Col className=\" mb-15\" span={24}>\n                            <h2 className=\"cs-h2\">집 내놓기</h2>\n                          </Col>\n\n                          <Col className=\"mb-15 cs-p-80\" span={24}>\n                            <Steps progressDot current={0} className=\"cs-step\">\n                              <Step title=\"1단계\" description=\"\" />\n                              <Step title=\"2단계\" subTitle=\"\" description=\"\" />\n                              <Step title=\"3단계\" description=\"\" />\n                            </Steps>\n                          </Col>\n\n                          <Col className=\" mb-15\" span={24}>\n                            <h3 className=\"cs-h3-change\">\n                              집 내놓기 정보를 등록해주세요!\n                            </h3>\n                          </Col>\n                        </Row>\n                      </>\n                    ) : (\n                      <>\n                        <h2 className=\"cs-h2 mb-15 csd-h2\">사진 등록하기</h2>\n                        <h2 className=\"cs-h2-title\">\n                          ∙ 사진은 최대 18장까지 등록 가능합니다.\n                        </h2>\n                        <Divider />\n                      </>\n                    )}\n\n                    <Form\n                      // {...layout}\n                      ref={this.formRef}\n                      name=\"basic\"\n                      initialValues={{ remember: true }}\n                      onFinish={this.onFinish}\n                      onFinishFailed={onFinishFailed}\n                    >\n                      <Row>\n                        {!imgbtn && (\n                          <>\n                            <Col className=\"\" span={24}>\n                              <Form.Item\n                                label=\"\"\n                                name=\"search_address\"\n                                className=\"search-address\"\n                                // onChange={(e) => {\n                                //   this.setState({\n                                //     searchWord: e.target.value,\n                                //   });\n                                // }}\n                                onClick={() =>\n                                  this.setState({\n                                    addressVisible: true,\n                                  })\n                                }\n                                //onFocus={this.handleSerachAddressChange}\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"주소를 입력해 주세요!\",\n                                  },\n                                ]}\n                              >\n                                <Input\n                                  type=\"text\"\n                                  value=\"주소를 클릭하여 찾아주세요!\"\n                                  readOnly\n                                  className=\"Kc-search-address\"\n                                />\n\n                                <Button\n                                  className=\"theme-btn cs-search\"\n                                  style={{ marginLeft: \"10px\" }}\n                                >\n                                  <svg\n                                    width=\"44\"\n                                    height=\"43\"\n                                    viewBox=\"0 0 44 43\"\n                                    fill=\"none\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                  >\n                                    <rect\n                                      x=\"-15\"\n                                      y=\"-14.125\"\n                                      width=\"75\"\n                                      height=\"75\"\n                                      rx=\"7.5\"\n                                      fill=\"#44358F\"\n                                    />\n                                    <circle\n                                      cx=\"19.3751\"\n                                      cy=\"20.2493\"\n                                      r=\"16.7708\"\n                                      stroke=\"white\"\n                                      stroke-width=\"1.875\"\n                                    />\n                                    <path\n                                      d=\"M31.7016 32.5751L40.8161 41.6897\"\n                                      stroke=\"white\"\n                                      stroke-width=\"1.875\"\n                                      stroke-linecap=\"square\"\n                                    />\n                                  </svg>\n                                </Button>\n                              </Form.Item>\n                              <Modal\n                                closable={false}\n                                centered\n                                bodyStyle={{\n                                  paddingLeft: \"0\",\n                                  paddingRight: \"0\",\n                                }}\n                                visible={this.state.addressVisible}\n                                okText=\"확인\"\n                                cancelText=\"취소\"\n                                onOk={() =>\n                                  this.setState({ addressVisible: false })\n                                }\n                                onCancel={() =>\n                                  this.setState({ addressVisible: false })\n                                }\n                                width={600}\n                              >\n                                <DaumPostcode\n                                  onComplete={this.handleComplete}\n                                  autoClose={false}\n                                  focusInput={false}\n                                  {...this.props}\n                                />\n                              </Modal>\n                              {this.state.search && (\n                                <KakaoMap searchWord={this.state.search} />\n                              )}\n                            </Col>\n\n                            <Divider />\n\n                            {showMemberName && (\n                              <Col span={24}>\n                                <Col span={24} className=\"text-left\">\n                                  Member Name\n                                </Col>\n                                <Col className=\"\" span={24}>\n                                  <Form.Item\n                                    label=\"\"\n                                    name=\"m_name\"\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message: \"이름을 입력해 주세요!\",\n                                      },\n                                    ]}\n                                  >\n                                    <Input placeholder=\"enter your name\" />\n                                  </Form.Item>\n                                </Col>\n                              </Col>\n                            )}\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              주소{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />{\" \"}\n                            </Col>\n                            <Col className=\"mb-15 text-left\" span={24}>\n                              <Form.Item\n                                label=\"\"\n                                name=\"address\"\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"주소를 입력해 주세요!\",\n                                  },\n                                ]}\n                              >\n                                <Input placeholder=\"주소를 입력해주세요.\" />\n                              </Form.Item>\n                            </Col>\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              상세주소{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />\n                            </Col>\n                            <Col\n                              className=\"mb-15 text-left\"\n                              style={margin0Style}\n                              span={24}\n                            >\n                              <Form.Item\n                                label=\"\"\n                                name=\"detail_address\"\n                                className=\"jc-margin-detail\"\n                                rules={[\n                                  {\n                                    required: true,\n                                    message:\n                                      \"상세주소를 입력해 주세요! (동/층/호수 등)\",\n                                  },\n                                ]}\n                              >\n                                <Input placeholder=\"상세주소를 입력해주세요.\" />\n                              </Form.Item>\n                            </Col>\n\n                            {/* <Col className=\"text-left cs-font-28\" span={24}>\n                          Property Type\n                        </Col> */}\n                            <Col\n                              className=\"text-left cs-mb24\"\n                              // style={margin24Style}\n                              span={24}\n                            >\n                              <Form.Item\n                                className=\"jc-margin\"\n                                label=\"\"\n                                name=\"property_type\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"Please select Property Type !\",\n                                  },\n                                ]}\n                              >\n                                <Radio.Group\n                                  buttonStyle=\"solid\"\n                                  className=\"cs-radio custom-width\"\n                                  onChange={this.propertyTypeChange}\n                                >\n                                  <Radio value=\"Private\">비공개</Radio>\n                                  <Radio value=\"Public\">공개</Radio>\n                                </Radio.Group>\n                              </Form.Item>\n                              {this.state.property_type == \"Private\" && (\n                                <p class=\"cs-font-24 cs-rpp\">\n                                  비공개 시 담당 중개사에게만 노출되니\n                                  걱정마세요!\n                                </p>\n                              )}\n\n                              {/*  <Form.Item\n                                                        label=\"\"\n                                                        name=\"public_private\"\n                                                        rules={[{ required: false, message: 'Please select property type!' }]}\n                                                        className=\"text-left\"\n                                                    >\n                                                        <Radio.Group onChange={this.onChangePublicPrivate} >\n                                                            <Radio value=\"Private\">Private</Radio>\n                                                            <Radio value=\"Public\">Public</Radio>\n                                                        </Radio.Group>\n                                                        <div className=\"text-left\"><small>Only exposed to a broker in charge If you choose Private</small></div>\n                                                       <Checkbox.Group style={{ width: '100%' }} onChange={this.onChangePublicPrivate}>\n                                                            <Row>\n                                                                <Col >\n                                                                    <Checkbox value=\"Private\">Private</Checkbox>\n                                                                </Col>\n                                                                <Col >\n                                                                    <Checkbox value=\"Public\">Public</Checkbox>\n                                                                </Col>\n                                                            </Row>\n                                                            <div className=\"text-left\"><small>Only exposed to a broker in charge If you choose Private</small></div>\n                                                        </Checkbox.Group> \n                                                    </Form.Item>*/}\n                            </Col>\n\n                            <Col span={14} className=\"text-left cs-font-28\">\n                              전용면적{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />{\" \"}\n                            </Col>\n                            <Col span={10} className=\"text-right\">\n                              {/* <Button className=\"btn\"> */}\n                              {/* <ReloadOutlined onClick={this.onAreaChangeInSqMt} />㎡  */}\n                              {this.state.areaSqmFlag ? (\n                                <img\n                                  src={pyeong}\n                                  onClick={this.onAreaChangeInSqMt}\n                                  height=\"46\"\n                                  style={{ cursor: \"pointer\" }}\n                                  className=\"cs-exclusive\"\n                                />\n                              ) : (\n                                <img\n                                  src={metersq}\n                                  onClick={this.onAreaChangeInSqMt}\n                                  height=\"46\"\n                                  style={{ cursor: \"pointer\" }}\n                                  className=\"cs-exclusive\"\n                                />\n                              )}\n\n                              {/* </Button> */}\n                            </Col>\n                            <Col\n                              span={24}\n                              className=\"text-left mb-15\"\n                              style={margin0Style}\n                            >\n                              <Form.Item\n                                label=\"\"\n                                name=\"area\"\n                                className=\"text-left cs-font-24\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"집주인 여부를 선택해 주세요!\",\n                                  },\n                                ]}\n                              >\n                                <Radio.Group\n                                  className=\"cs-radio cs-outer cs-b3-outer\"\n                                  onChange={this.onAreaChange}\n                                  buttonStyle=\"solid\"\n                                  // defaultValue={this.state.area_manual}\n                                  value={area_manual}\n                                >\n                                  <Radio.Button\n                                    value={this.state.dedicatedArea1}\n                                  >\n                                    <div className=\"cs-txt\">\n                                      {this.state.dedicatedArea1}\n                                      {!this.state.areaSqmFlag && \"평\"}\n                                    </div>\n                                  </Radio.Button>\n                                  <Radio.Button\n                                    value={this.state.dedicatedArea2}\n                                  >\n                                    <div className=\"cs-txt\">\n                                      {this.state.dedicatedArea2}\n                                      {!this.state.areaSqmFlag && \"평\"}\n                                    </div>\n                                  </Radio.Button>\n                                  <Radio.Button\n                                    value={this.state.dedicatedArea3}\n                                  >\n                                    <div className=\"cs-txt\">\n                                      {this.state.dedicatedArea3}\n                                      {!this.state.areaSqmFlag && \"평\"}\n                                    </div>\n                                  </Radio.Button>\n                                </Radio.Group>\n                              </Form.Item>\n                            </Col>\n                            <Col span={24} className=\"text-left cs-mb24\">\n                              <Form.Item\n                                label=\"\"\n                                onChange={this.onAreaManualChange}\n                                name=\"area_manual\"\n                                rules={[\n                                  {\n                                    pattern: /^\\d*\\.?\\d*$/,\n                                    message: \"숫자만 입력해주세요\",\n                                  },\n                                  {\n                                    required: true,\n                                    message:\n                                      \"매물의 기타 면적을 입력해 주세요!\",\n                                  },\n                                ]}\n                              >\n                                <Input />\n                              </Form.Item>\n                              <span\n                                className=\"right-placeholder\"\n                                style={{ color: \"#CBCBCB\" }}\n                              >\n                                {this.state.areaSqmFlag ? (\n                                  <>\n                                    m<sup>2</sup>\n                                  </>\n                                ) : (\n                                  \"평\"\n                                )}\n                              </span>\n                            </Col>\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              거래유형{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />\n                              <label className=\"cs-red-btn float-right kc-font-weight\">\n                                중복선택 가능\n                              </label>{\" \"}\n                            </Col>\n                            <Col span={24} className=\"text-left mb-15\">\n                              <Form.Item\n                                label=\"\"\n                                name=\"type\"\n                                rules={\n                                  [\n                                    // {\n                                    //   required: false,\n                                    //   message: \"거래유형을 선택해 주세요!\",\n                                    // },\n                                    // {\n                                    //   validator: (_, value) =>\n                                    //     value\n                                    //       ? Promise.resolve()\n                                    //       : Promise.reject(\"Should accept agreement\"),\n                                    // },\n                                  ]\n                                }\n                                className=\"text-left cs-outer\"\n                              >\n                                {/* <Radio.Group onChange={this.onTypeChange} value={type} buttonStyle=\"solid\" >\n                                                                <Radio.Button value=\"For Sale\">For Sale</Radio.Button>\n                                                                <Radio.Button value=\"For Rent\">For Rent</Radio.Button>\n                                                                <Radio.Button value=\"For Sale, For Rent\">For Both</Radio.Button>\n                                                            </Radio.Group> */}\n\n                                {typeData.map((tag, key) => (\n                                  <CheckableTag\n                                    key={key}\n                                    className=\"tags-custom-width-1 \"\n                                    key={tag.eng}\n                                    checked={selectedType.indexOf(tag.eng) > -1}\n                                    onChange={(checked) =>\n                                      this.handleTypeChange(tag.eng, checked)\n                                    }\n                                  >\n                                    <div className=\"cs-txt\">{tag.korean}</div>\n                                  </CheckableTag>\n                                ))}\n                                {this.state.isSubmited &&\n                                  !this.state.selectedTypeString && (\n                                    <p\n                                      style={{ color: \"red\" }}\n                                      className=\"cs-error\"\n                                      style={{ paddingLeft: \"15px\" }}\n                                    >\n                                      거래유형을 선택해 주세요!\n                                    </p>\n                                  )}\n                              </Form.Item>\n                            </Col>\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              엘레베이터{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />{\" \"}\n                            </Col>\n                            <Col span={24} className=\"mb-15 text-left\">\n                              <Form.Item\n                                label=\"\"\n                                name=\"elevator\"\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"엘레베이터 여부를 선택해 주세요!\",\n                                  },\n                                ]}\n                                className=\"text-left\"\n                              >\n                                <Radio.Group\n                                  className=\"cs-radio custom-width cs-outer\"\n                                  onChange={this.onElevatorChange}\n                                  value={elevator}\n                                  buttonStyle=\"solid\"\n                                >\n                                  <Radio.Button value=\"Yes\">\n                                    <div className=\"cs-txt\">있음</div>\n                                  </Radio.Button>\n                                  <Radio.Button value=\"No\">\n                                    <div className=\"cs-txt\">없음</div>\n                                  </Radio.Button>\n                                </Radio.Group>\n                              </Form.Item>\n                            </Col>\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              구조\n                            </Col>\n                            <Col span={24} className=\"mb-15 text-left \">\n                              <Form.Item\n                                label=\"\"\n                                name=\"structure\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"Please select structure!\",\n                                  },\n                                ]}\n                                className=\"text-left cs-select\"\n                              >\n                                <Select\n                                  placeholder=\"선택해주세요\"\n                                  style={{ width: \"100%\" }}\n                                  onChange={this.handleStructureChange}\n                                >\n                                  <Option value=\"원룸\">원룸</Option>\n                                  <Option value=\"투룸\">투룸</Option>\n                                  <Option value=\"쓰리룸\">쓰리룸</Option>\n                                  <Option value=\"포룸\">포룸</Option>\n                                  <Option value=\"포룸+\">포룸+</Option>\n                                  <Option value=\"기타\">기타</Option>\n                                </Select>\n                              </Form.Item>\n                            </Col>\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              방향\n                            </Col>\n                            <Col span={24} className=\"text-left mb-15\">\n                              <Form.Item\n                                label=\"\"\n                                name=\"direction\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"Please select direction!\",\n                                  },\n                                ]}\n                                className=\"text-left cs-select\"\n                              >\n                                <Select\n                                  placeholder=\"선택해주세요\"\n                                  style={{ width: \"100%\" }}\n                                  onChange={this.handleDirectionChange}\n                                >\n                                  <Option value=\"동쪽\">동쪽</Option>\n                                  <Option value=\"서쪽\">서쪽</Option>\n                                  <Option value=\"남쪽\">남쪽</Option>\n                                  <Option value=\"북쪽\">북쪽</Option>\n                                  <Option value=\"북동\">북동</Option>\n                                  <Option value=\"북서\">북서</Option>\n                                  <Option value=\"남동\">남동</Option>\n                                  <Option value=\"남서\">남서</Option>\n                                </Select>\n                              </Form.Item>\n                            </Col>\n\n                            <Col\n                              span={24}\n                              className=\"text-left cs-font-28 cs-line-height-46\"\n                            >\n                              관리비\n                              <label className=\"cs-red-btn float-right kc-font-weight\">\n                                중복선택 가능\n                              </label>\n                            </Col>\n                            <Col\n                              span={24}\n                              className=\"mb-15\"\n                              style={margin0Style}\n                            >\n                              <Form.Item\n                                label=\"\"\n                                name=\"maintainence_fee\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"Please select Maintanence Fee!\",\n                                  },\n                                ]}\n                                className=\"text-left cs-select cs-outer cs-b3-outer\"\n                                style={margin0Style}\n                              >\n                                {tagsData.map((tag, i) => (\n                                  <CheckableTag\n                                    className=\"tags-custom-width\"\n                                    key={tag.id}\n                                    value={tag.propertyFacility}\n                                    // checked={selectedTagsId.indexOf(tag.id) > -1}\n                                    checked={\n                                      selectedTagsId.indexOf(tag.id) > -1\n                                    }\n                                    onChange={(checked) =>\n                                      this.handleMaintainenceFeeChange(\n                                        tag.propertyFacility,\n                                        checked,\n                                        tag.id\n                                      )\n                                    }\n                                  >\n                                    <div className=\"cs-txt\">\n                                      {tag.propertyFacility}\n                                    </div>\n                                  </CheckableTag>\n                                ))}\n                              </Form.Item>\n                            </Col>\n                            <Col\n                              span={24}\n                              className=\"text-left cs-font-28 mb-15\"\n                            >\n                              <Form.Item\n                                label=\"\"\n                                name=\"maintanceFee\"\n                                rules={[\n                                  {\n                                    pattern: /^\\d*\\.?\\d*$/,\n                                    message: \"숫자만 입력해주세요\",\n                                  },\n                                ]}\n                              >\n                                <Input\n                                  disabled={this.state.maintainenceFeeDisable}\n                                />\n                              </Form.Item>\n                              <span\n                                className=\"right-placeholder\"\n                                style={{ color: \"#CBCBCB\" }}\n                              >\n                                만원\n                              </span>\n                            </Col>\n\n                            <Col\n                              span={24}\n                              className=\"text-left cs-font-28 cs-line-height-46\"\n                            >\n                              옵션\n                              <label className=\"cs-red-btn float-right kc-font-weight\">\n                                중복선택 가능\n                              </label>\n                            </Col>\n                            <Col span={24} className=\"mb-15\">\n                              <Form.Item\n                                label=\"\"\n                                name=\"option\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"Please select Option!\",\n                                  },\n                                ]}\n                                className=\"text-left cs-outer cs-b3-outer\"\n                              >\n                                {optionData.map((tags, i) => (\n                                  <CheckableTag\n                                    className=\"tags-custom-width\"\n                                    key={tags.id}\n                                    checked={optionTagsId.indexOf(tags.id) > -1}\n                                    onChange={(checked) =>\n                                      this.handleOptionDataChange(\n                                        tags,\n                                        checked,\n                                        tags.id\n                                      )\n                                    }\n                                  >\n                                    <div className=\"cs-txt\">\n                                      {tags.propertyFeatures}\n                                    </div>\n                                  </CheckableTag>\n                                ))}\n                              </Form.Item>\n                            </Col>\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              입주가능일{\" \"}\n                            </Col>\n                            <Col span={24} className=\"mb-15 text-left\">\n                              <Form.Item\n                                label=\"\"\n                                name=\"available_date\"\n                                rules={[\n                                  {\n                                    required: false,\n                                    message: \"Please select available date!\",\n                                  },\n                                ]}\n                              >\n                                <Radio.Group\n                                  className=\"cs-radio custom-width cs-outer\"\n                                  buttonStyle=\"solid\"\n                                  onChange={this.onAvalDateChange}\n                                >\n                                  <Radio.Button value=\"Immediately\">\n                                    <div className=\"cs-txt\">즉시입주 </div>\n                                  </Radio.Button>\n                                  <Radio.Button value=\"Negotiable\">\n                                    <div className=\"cs-txt\">날짜협의</div>\n                                  </Radio.Button>\n                                </Radio.Group>\n\n                                {/* <DatePicker onChange={onChangeAvailableDate} /> */}\n                              </Form.Item>\n                            </Col>\n                            {this.state.avalDate == \"Negotiable\" && (\n                              <Col span={24} className=\"mb-15 text-left\">\n                                <Form.Item\n                                  label=\"\"\n                                  name=\"actual_available_date\"\n                                  rules={[\n                                    {\n                                      required: false,\n                                      message: \"Please select available date!\",\n                                    },\n                                  ]}\n                                >\n                                  <DatePicker\n                                    onChange={this.onDateChange}\n                                    className=\"cs-datepicker\"\n                                    placeholder=\"날짜 선택\"\n                                    disabledDate={this.disabledDate}\n                                    defaultValue={\n                                      this.state.actual_available_date &&\n                                      moment(\n                                        this.state.actual_available_date,\n                                        \"YYYY/MM/DD\"\n                                      )\n                                    }\n                                  />\n                                </Form.Item>\n                              </Col>\n                            )}\n\n                            <Col span={24} className=\"text-left cs-font-28\">\n                              집주인이신가요??{\" \"}\n                              <img\n                                style={requiiredIconStyle}\n                                src={requiredIcon}\n                                className=\"cs-validation-dot\"\n                              />{\" \"}\n                            </Col>\n                            <Col span={24} className=\"mb-15 text-left\">\n                              <Form.Item\n                                label=\"\"\n                                name=\"house_owner\"\n                                rules={[\n                                  {\n                                    required: true,\n                                    message: \"집주인 여부를 선택해 주세요!\",\n                                  },\n                                ]}\n                              >\n                                <Radio.Group\n                                  className=\"cs-radio custom-width cs-outer\"\n                                  onChange={this.onHouseOwnerChange}\n                                  buttonStyle=\"solid\"\n                                >\n                                  <Radio.Button value=\"Yes\">\n                                    <div className=\"cs-txt\">집주인입니다</div>\n                                  </Radio.Button>\n                                  <Radio.Button value=\"No\">\n                                    {\" \"}\n                                    <div className=\"cs-txt\">\n                                      집주인이 아닙니다.\n                                    </div>\n                                  </Radio.Button>\n                                </Radio.Group>\n                              </Form.Item>\n                            </Col>\n\n                            {this.state.HouseOwner == \"No\" && (\n                              <>\n                                <Col span={24} className=\"text-left cs-font-28\">\n                                  집주인 연락처{\" \"}\n                                </Col>\n                                <Col span={24} className=\"mb-15 text-left\">\n                                  <Form.Item label=\"\" name=\"owner_contact_no\">\n                                    <InputMask\n                                      className=\"ant-input\"\n                                      mask=\"099-9999-9999\"\n                                      // onChange={this.onMobileChange}\n                                      placeholder=\"010-1234-5678\"\n                                      maskChar=\"\"\n                                      // value={\"01023453554\"}\n                                    />\n                                  </Form.Item>\n                                </Col>\n                              </>\n                            )}\n                            {this.state.HouseOwner == \"Yes\" && (\n                              <>\n                                <Col span={24} className=\"text-left cs-font-28\">\n                                  반려견{\" \"}\n                                  <img\n                                    style={requiiredIconStyle}\n                                    src={requiredIcon}\n                                    className=\"cs-validation-dot\"\n                                  />{\" \"}\n                                </Col>\n                                <Col span={24} className=\"mb-15 text-left\">\n                                  <Form.Item\n                                    label=\"\"\n                                    name=\"pet\"\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message:\n                                          \"반려동물 동거 여부를 선택해 주세요!\",\n                                      },\n                                    ]}\n                                  >\n                                    <Radio.Group\n                                      className=\"cs-radio custom-width cs-outer\"\n                                      buttonStyle=\"solid\"\n                                      onChange={this.onPetChange}\n                                    >\n                                      <Radio.Button value=\"Yes\">\n                                        <div className=\"cs-txt\">가능해요! </div>\n                                      </Radio.Button>\n                                      <Radio.Button value=\"No\">\n                                        <div className=\"cs-txt\">\n                                          불가능해요!\n                                        </div>\n                                      </Radio.Button>\n                                    </Radio.Group>\n                                  </Form.Item>\n                                </Col>\n\n                                <Col span={24} className=\"text-left cs-font-28\">\n                                  전세대출{\" \"}\n                                  <img\n                                    style={requiiredIconStyle}\n                                    src={requiredIcon}\n                                    className=\"cs-validation-dot\"\n                                  />{\" \"}\n                                </Col>\n                                <Col span={24} className=\"mb-15 text-left\">\n                                  <Form.Item\n                                    label=\"\"\n                                    name=\"mortgage\"\n                                    onChange={this.onMortgageChange}\n                                    rules={[\n                                      {\n                                        required: true,\n                                        message: \"집주인 여부를 선택해 주세요!\",\n                                      },\n                                    ]}\n                                  >\n                                    <Radio.Group\n                                      buttonStyle=\"solid\"\n                                      className=\"cs-radio custom-width cs-outer\"\n                                    >\n                                      <Radio.Button value=\"Yes\">\n                                        <div className=\"cs-txt\">가능해요! </div>\n                                      </Radio.Button>\n                                      <Radio.Button value=\"No\">\n                                        <div className=\"cs-txt\">\n                                          불가능해요!\n                                        </div>\n                                      </Radio.Button>\n                                    </Radio.Group>\n                                  </Form.Item>\n                                </Col>\n                              </>\n                            )}\n\n                            {/* {this.state.isHouseOwner &&\n                                                    <Row>\n                                                        <Col span={24} className=\"text-left\">Enter the owner phone number</Col>\n                                                        <Col span={24} className=\"mb-15 text-left\">\n                                                            <Form.Item\n                                                                label=\"\"\n                                                                name=\"owner_contact_no\"\n                                                                rules={[{ required: true, message: 'Please select owner contact no !' }]}\n                                                            >\n                                                                <Input />\n                                                            </Form.Item>\n                                                        </Col>\n                                                    </Row>\n                                                } */}\n\n                            <Col span={14} className=\"text-left cs-font-28\">\n                              사진등록\n                            </Col>\n                            <Col span={10} className=\"text-right cs-font-28\">\n                              <Button\n                                className=\"cs-red-outline-btn\"\n                                onClick={this.onClickImgBtn}\n                              >\n                                사진등록\n                              </Button>\n                            </Col>\n                          </>\n                        )}\n                        <Col span={24} className=\"text-left mb-15\">\n                          <Form.Item\n                            label=\"\"\n                            name=\"images\"\n                            className=\"cs-file-upload\"\n                            // onChange={this.onMortgageChange}\n                            // rules={[\n                            //   {\n                            //     pattern: /.(jpe?g|png|gif|bmp)$/i,\n                            //     message: \"Wrong format!\",\n                            //   },\n                            // ]}\n                          >\n                            {/* <Upload\n                              listType=\"picture-card\"\n                              fileList={fileList}\n                              onPreview={this.handlePreview}\n                              onChange={this.handleUpload}\n                              beforeUpload={() => false} // return false so that antd doesn't upload the picture right away\n                              multiple\n                              className=\"cs-upload\"\n                              maxCount={18}\n                            >\n                              {uploadButton}\n                            </Upload> */}\n\n                            {/* {console.log(\"imageList\", Object.keys(imageList))} */}\n                            {Object.keys(imageList).map((item, key) => {\n                              return key < (!imgbtn ? 3 : 18) ? (\n                                <>\n                                  <UploadImage\n                                    handleUpload={(event) =>\n                                      this.handleUpload(event, item)\n                                    }\n                                    handlePreview={this.handlePreview}\n                                    fileList={this.state.imageList[item]}\n                                  />\n                                </>\n                              ) : null;\n                            })}\n                          </Form.Item>\n                          {imgbtn && (\n                            <>\n                              <Divider />\n                              <Button\n                                className=\"theme-btn cs-submit-button\"\n                                style={{ width: \"100%\" }}\n                                type=\"primary\"\n                                onClick={() => this.setState({ imgbtn: false })}\n                              >\n                                확인\n                              </Button>\n                            </>\n                          )}\n\n                          {/* <Button onClick={this.handleSubmit} // this button click will trigger the manual upload\n                                                    >\n                                                        Submit\n                                                        </Button> */}\n\n                          <Modal\n                            visible={previewVisible}\n                            footer={null}\n                            onCancel={this.handleCancel}\n                          >\n                            <img\n                              alt=\"example\"\n                              style={{ width: \"100%\" }}\n                              src={previewImage}\n                            />\n                          </Modal>\n                        </Col>\n                        {!imgbtn && <Divider />}\n                        {!imgbtn && (\n                          <Col span={24} className=\"mb-15 text-left\">\n                            <Form.Item>\n                              <Button\n                                loading={loading}\n                                className=\"theme-btn cs-submit-button\"\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                style={{ width: \"100%\", marginTop: \"5px\" }}\n                                onClick={() =>\n                                  this.setState({ isSubmited: true })\n                                }\n                              >\n                                {this.props.match.params.id\n                                  ? \"최신 정보\"\n                                  : \"등록하기\"}\n                              </Button>\n                            </Form.Item>\n                          </Col>\n                        )}\n                      </Row>{\" \"}\n                      {/* Form row end */}\n                    </Form>\n                  </Col>\n                </Row>\n              </Content>\n            </Space>\n          </Layout>\n        </Content>\n        <WithAuthFooter />\n      </Layout>\n    );\n  }\n}\n\nexport default RegisterProperty;\n","/home/codexive/work/demo/zeep/src/components/WithoutAuthHeaderFooter/WithoutAuthHeader.js",[],"/home/codexive/work/demo/zeep/src/components/WithoutAuthHeaderFooter/WithoutAuthFooter.js",[],"/home/codexive/work/demo/zeep/src/components/WithoutAuthHeaderFooter/LoginFormFooter.js",["942","943"],"import React, { Component } from \"react\";\n\nimport { Layout } from \"antd\";\n\nimport \"../css/global.css\";\nimport \"antd/dist/antd.css\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"antd\";\n\nconst { Content } = Layout;\n\nclass LoginFormFooter extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Layout className=\"login-bg\">\n        <Content className=\"login-content\">\n          <Row className=\"cs-form2-link-wrapper\">\n            {window.location.pathname == \"/register\" ? (\n              <Link to=\"/login\" className=\"cs-form2-link\">\n                {/* Login  */}\n                로그인\n              </Link>\n            ) : (\n              <Link to=\"/register\" className=\"cs-form2-link\">\n                {/* Register  */}\n                회원가입\n              </Link>\n            )}\n\n            <Link\n              to={{\n                pathname: \"/find-password-and-email\",\n                state: { mode: 1 },\n              }}\n              className=\"cs-form2-link\"\n            >\n              {/* Find password  */}\n              비밀번호 찾기\n            </Link>\n\n            <Link\n              to={{\n                pathname: \"/find-password-and-email\",\n                state: { mode: 2 },\n              }}\n              className=\"cs-form2-link\"\n            >\n              {/* Find email address  */}\n              이메일 찾기\n            </Link>\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default LoginFormFooter;\n","/home/codexive/work/demo/zeep/src/components/services/axios-url.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithoutAuthHeaderFooter/WithoutAuthHeader.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithoutAuthHeaderFooter/WithoutAuthFooter.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/FaqSetting/faq-settings-aside.js",[],"/home/codexive/work/demo/zeep/src/components/WithAuthHeaderFooter/WithAuthFooter.js",["944","945","946","947"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Row, Col, Space, Modal, Divider, Button, message } from \"antd\";\nimport Cookies from \"universal-cookie\";\nimport BaseUrl from \"../services/axios-url\";\nimport \"./footer.css\";\n\nconst axios = require(\"axios\");\nconst { Footer } = Layout;\n\nclass WithAuthFooter extends Component {\n  state = {\n    loading: false,\n    visible: false,\n    openTCModal: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  openTCModal = () => {\n    this.setState({\n      openTCModal: true,\n    });\n  };\n\n  onConfirm = () => {\n    if (!this.state.isLoggedIn) {\n      window.location = \"/register\";\n    } else {\n      this.setState({ openTCModal: false });\n    }\n  };\n\n  handleOk = () => {\n    this.setState({ loading: true });\n    const cookies = new Cookies();\n\n    axios\n      .get(\n        BaseUrl +\n          \"/memberapi/WithdrawMembershipByMemberId/\" +\n          cookies.get(\"UU\"),\n        {}\n      )\n      .then((res) => {\n        console.log(res);\n\n        if (res.data.status == 1 || res.data.status == \"1\") {\n          var cookieName = btoa(\"zeeps\");\n          // console.log('encodedStringBtoA', cookieName);\n          var finalCookieName = \"\";\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n          cookies.remove(finalCookieName);\n          cookies.remove(\"UU\");\n          cookies.remove(\"UN\");\n          message.success(\"회원탈퇴가 되었습니다.\");\n          this.setState({ loading: false, visible: false });\n          window.location = \"/\";\n        } else {\n          message.error(res.data.message);\n          this.setState({ loading: false, visible: false });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        message.error(\"다시 시도해주세요.\");\n        this.setState({ loading: false, visible: false });\n      });\n\n    // setTimeout(() => {\n    //   this.setState({ loading: false, visible: false });\n    // }, 1500);\n\n    // window.location = \"/\";\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false, openTCModal: false });\n  };\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    if (cookies.get(\"emVlcHMaAaA\") == \"YXV0aG9yaXplZAaAaA\") {\n      this.setState({ isLoggedIn: true });\n    }\n  }\n\n  render() {\n    const { visible, openTCModal, loading, isLoggedIn } = this.state;\n\n    return (\n      <div\n        style={{\n          backgroundColor: \"#e9e9e9\",\n        }}\n      >\n        <Footer className=\"footer-text-mobile cs-footer cs-new-1080\">\n          <Row>\n            <Col span={24} style={{ marginBottom: \"11px\" }}>\n              <Link to=\"/\">\n                <svg\n                  width=\"90\"\n                  height=\"50\"\n                  viewBox=\"0 0 90 50\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"cs-footer-logo\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M17.032 37.955L24.9818 26.8823V26.8003H17.4963V23.1094H30.8554V26.6089L22.8782 37.7088V37.7909H30.828V41.4818H17.032V37.955Z\"\n                    fill=\"#44358F\"\n                  />\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M35.6434 32.9796H39.9053C39.9053 30.9293 39.2222 30.1911 37.8563 30.1911C36.8181 30.1911 35.8347 30.7925 35.6434 32.9796ZM30.9446 34.5653V34.21C30.9446 29.8629 33.6491 27.1289 37.8563 27.1289C42.5824 27.1289 44.3583 29.781 44.3583 34.4014V35.6042H35.6707C35.944 37.819 37.2006 38.4476 39.5773 38.4476C41.2438 38.4476 42.6918 38.0375 43.7844 37.6001V40.4706C42.719 41.0996 40.9706 41.7284 38.3753 41.7284C33.3759 41.7284 30.9446 39.2132 30.9446 34.5653Z\"\n                    fill=\"#44358F\"\n                  />\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M49.8116 32.9796H54.0733C54.0733 30.9293 53.3904 30.1911 52.0245 30.1911C50.9865 30.1911 50.0029 30.7925 49.8116 32.9796ZM45.1128 34.5653V34.21C45.1128 29.8629 47.8173 27.1289 52.0245 27.1289C56.7508 27.1289 58.5265 29.781 58.5265 34.4014V35.6042H49.8391C50.1123 37.819 51.3689 38.4476 53.7455 38.4476C55.4122 38.4476 56.8598 38.0375 57.9527 37.6001V40.4706C56.8873 41.0996 55.1388 41.7284 52.5436 41.7284C47.5441 41.7284 45.1128 39.2132 45.1128 34.5653Z\"\n                    fill=\"#44358F\"\n                  />\n                  <path\n                    fill-rule=\"evenodd\"\n                    clip-rule=\"evenodd\"\n                    d=\"M69.411 34.784V34.3465C69.411 31.4212 68.5093 30.7103 66.9249 30.7103C65.9689 30.7103 65.2312 30.9838 64.8213 31.2572V38.0374C65.2312 38.3109 65.9689 38.5569 66.761 38.5569C68.4276 38.5569 69.411 37.8189 69.411 34.784ZM60.1772 27.4022H64.6575V28.578H64.794C65.7228 27.6756 66.9797 27.1562 68.8646 27.1562C71.5964 27.1562 74.1646 28.7692 74.1646 33.9091V34.2372C74.1646 39.7871 71.5146 41.7282 67.6626 41.7282C66.242 41.7282 65.3404 41.455 64.8213 41.2361V45.5831H60.1772V27.4022Z\"\n                    fill=\"#44358F\"\n                  />\n                  <mask\n                    id=\"mask0\"\n                    mask-type=\"alpha\"\n                    maskUnits=\"userSpaceOnUse\"\n                    x=\"75\"\n                    y=\"27\"\n                    width=\"12\"\n                    height=\"15\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M75.3237 27.1289H86.4154V41.7283H75.3237V27.1289Z\"\n                      fill=\"white\"\n                    />\n                  </mask>\n                  <g mask=\"url(#mask0)\">\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M75.4059 40.7987V37.6819C76.4984 38.0922 77.6734 38.5024 79.5856 38.5024C81.2793 38.5024 81.9622 38.0922 81.9622 37.3266C81.9622 36.6431 81.5523 36.3972 80.3503 36.2603L79.0666 36.0691C76.6623 35.7138 75.3237 34.4013 75.3237 31.6673C75.3237 28.8514 77.1814 27.1289 81.088 27.1289C83.1095 27.1289 84.4757 27.4023 85.5412 27.8671V30.9564C84.6397 30.6832 83.3556 30.3277 81.6892 30.3277C80.296 30.3277 79.6401 30.6832 79.6401 31.4213C79.6401 32.1047 80.132 32.3509 81.252 32.5149L82.5634 32.6789C85.4044 33.0616 86.4155 34.5927 86.4155 37.0259C86.4155 40.1152 84.4757 41.7283 80.2685 41.7283C78.3836 41.7283 76.5258 41.3728 75.4059 40.7987Z\"\n                      fill=\"#44358F\"\n                    />\n                  </g>\n                  <mask\n                    id=\"mask1\"\n                    mask-type=\"alpha\"\n                    maskUnits=\"userSpaceOnUse\"\n                    x=\"2\"\n                    y=\"2\"\n                    width=\"41\"\n                    height=\"40\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M2 2.10156H42.4811V41.4729H2V2.10156Z\"\n                      fill=\"white\"\n                    />\n                  </mask>\n                  <g mask=\"url(#mask1)\">\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M42.4811 13.5491L22.2486 2.10156L2 13.5491V41.4729H13.6992V35.176H8.02327V17.7701L22.2469 9.86215L27.8278 12.793L36.4579 17.3254V21.0811H42.4811V13.5491Z\"\n                      fill=\"#44358F\"\n                    />\n                  </g>\n                </svg>\n              </Link>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <span>서울특별시 마포구 마포대로 78, 10층 1016호</span>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <p>\n                대표이사 : <span>고차남</span>\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <p>\n                사업자 등록번호 : <span>828-87-01669 (사업자정보확인)</span>\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <p>\n                통신판매업 신고번호 : <span>2020-서울강남-00000</span>\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <p>\n                고객센터 : <span>02-000-0000</span>{\" \"}\n              </p>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={24}>\n              <span>\n                {\" \"}\n                &copy; {new Date().getFullYear()} Zeeps Co., Ltd. All rights\n                reserved.\n              </span>\n            </Col>\n          </Row>\n\n          <Row className=\"color-grey\">\n            {/* <Space size={'large'} className=\"color-grey\"> */}\n            {/* <Row> */}\n            <Col className=\"cs-footer-link\">\n              <Link to=\"#\">집스</Link>\n            </Col>\n            <Col className=\"cs-footer-link\">\n              <Link onClick={this.openTCModal}>이용약관</Link>\n            </Col>\n            <Col className=\"cs-footer-link\">\n              <Link to=\"#\">개인정보처리방침</Link>\n            </Col>\n            <Col className=\"cs-footer-link\">\n              <Link to=\"#\">제휴문의</Link>\n            </Col>\n            {isLoggedIn ? (\n              <Col className=\"cs-footer-link\">\n                <Link onClick={this.showModal}>회원탈퇴</Link>\n              </Col>\n            ) : (\n              \"\"\n            )}\n\n            {/* </Row> */}\n            {/* </Space> */}\n          </Row>\n\n          <Modal\n            visible={visible}\n            title=\"정말 회원탈퇴를 하실건가요? :(\"\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            footer={null}\n            closable={false}\n            className=\"cs-popup cs-member-recession-popup\"\n          >\n            <div className=\"cs-modal-body\">\n              <Row className=\"text-left\">\n                <p>\n                  회원탈퇴를 하시면 회원님의 모든 정보가 삭제됩니다. 정말로\n                  회원탈퇴를 하실건가요?{\" \"}\n                </p>\n                <small className=\"desc\">\n                  회원탈퇴 후 회원님의 계약서는 보관할 의무에 의해 5년간\n                  소멸되지 않습니다.\n                </small>\n\n                <Space direction=\"vertical\" className=\"width100\">\n                  <Col span={24}>\n                    <Button\n                      key=\"back\"\n                      className=\"theme-btn cs-btn3\"\n                      onClick={this.handleCancel}\n                      size={\"large\"}\n                    >\n                      아니오, 취소할게요.\n                    </Button>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      className=\"cs-btn4\"\n                      key=\"submit\"\n                      type=\"default\"\n                      loading={loading}\n                      onClick={this.handleOk}\n                      size={\"large\"}\n                    >\n                      네, 회원탈퇴 할게요.\n                    </Button>\n                  </Col>\n                </Space>\n              </Row>\n            </div>\n          </Modal>\n\n          <Modal\n            visible={openTCModal}\n            title=\"약관∙개인정보 처리방침\"\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            footer={null}\n            closable={false}\n            className=\"cs-popup cs-term-popup\"\n          >\n            <div className=\"cs-modal-body\">\n              <Row>\n                <p>제1조(목적)</p>\n                <p>\n                  표준약관 제10023호 이 약관은 집스가 운영하는 인터넷 관련\n                  서비스(이하 \"서비스\"라 한다)를 이용함에 있어 이용자의\n                  권리·의무 및 책임사항을 규정함을 목적으로 합니다. ※\n                  「PC통신등을 이용하는 전자거래에 대해서도 그 성질에 반하지\n                  않는한 이 약관을 준용합니다」\n                </p>\n                <p>제2조(정의)</p>\n\n                <Space direction=\"vertical\" className=\"width100\">\n                  <Col span={24}>\n                    <Button\n                      key=\"back\"\n                      className=\"theme-btn cs-btn3\"\n                      onClick={this.onConfirm}\n                    >\n                      확인\n                    </Button>\n                  </Col>\n                </Space>\n              </Row>\n            </div>\n          </Modal>\n        </Footer>\n      </div>\n    );\n  }\n}\n\nexport default WithAuthFooter;\n","/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithAuthHeaderFooter/WithAuthFooter.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/WithAuthHeaderFooter/TopNav.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/PropertySetting/property-settings-aside.js",[],"/home/codexive/work/demo/zeep/src/components/WithAuthHeaderFooter/WithAuthHeader.js",["948","949","950","951","952","953","954"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Layout,\n  Button,\n  Modal,\n  Menu,\n  Divider,\n  Row,\n  Col,\n  Space,\n  message,\n  } from \"antd\";\nimport \"../css/global.css\";\nimport Cookies from \"universal-cookie\";\n\nconst axios = require(\"axios\");\nconst { Header } = Layout;\nconst { SubMenu } = Menu;\n\nclass WithAuthHeader extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    loading: false,\n    visible: false,\n    isHomepage: false,\n    drawerVisible: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  showDrawer = () => {\n    this.setState({\n      drawerVisible: true,\n    });\n  };\n  onClose = () => {\n    this.setState({\n      drawerVisible: false,\n    });\n  };\n\n  handleOk = () => {\n    message.warning(\"로그아웃 되었습니다.\");\n    // this.setState({ loading: true });\n\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    // console.log('encodedStringBtoA', cookieName);\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    cookies.remove(finalCookieName);\n    cookies.remove(\"UU\");\n    cookies.remove(\"UN\");\n\n    setTimeout(() => {\n      this.setState({ loading: false, visible: false });\n      message.success(\"로그아웃 되었습니다.\");\n      window.location = \"/\";\n    }, 500);\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  componentDidMount() {\n    const cookies = new Cookies();\n    var cookieName = btoa(\"zeeps\");\n    var finalCookieName = \"\";\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\n\n    var encodedStringBtoA = btoa(\"authorized\");\n    var finalCookieValue = \"\";\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\n\n    if (cookies.get(finalCookieName) == finalCookieValue) {\n      if (cookies.get(\"UN\")) {\n        var UserName = cookies.get(\"UN\").replace(\"-\", \" \");\n        this.setState({ UserName: UserName });\n      }\n    }\n\n    if (window.location.pathname == \"/\") {\n      this.setState({\n        isHomepage: true,\n      });\n    }\n  }\n\n  render() {\n    const {\n      visible,\n      loading,\n      UserName,\n      isHomepage,\n      drawerVisible,\n    } = this.state;\n\n    const homepageStyle = {\n      color: \"white\",\n    };\n\n    return (\n      <div style={{ borderBottom: \"1px solid #ffffff73\" }}>\n        <Header className=\"header landing-header users-header cs-header cs-new-1080\">\n          <div className=\"logo\" />\n          {/* {this.makeActive} */}\n\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"1\"]}\n            selectedKeys={[this.state.activeClass]}\n            className=\"cs-menu-main\"\n          >\n            <Link to=\"/\" className=\"cs-headerlogo\">\n              {/* <img src=\"https://dummyimage.com/150x40/\" /> */}\n              {isHomepage ? (\n                <>\n                  <svg\n                    width=\"90\"\n                    height=\"50\"\n                    viewBox=\"0 0 90 50\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"desktop-logo\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M17.0322 38.955L24.9821 27.8823V27.8003H17.4965V24.1094H30.8556V27.6089L22.8784 38.7088V38.7909H30.8283V42.4818H17.0322V38.955Z\"\n                      fill=\"white\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M35.6432 33.9796H39.9051C39.9051 31.9293 39.2219 31.1911 37.856 31.1911C36.8179 31.1911 35.8344 31.7925 35.6432 33.9796ZM30.9443 35.5653V35.21C30.9443 30.8629 33.6488 28.1289 37.856 28.1289C42.5822 28.1289 44.358 30.781 44.358 35.4014V36.6042H35.6705C35.9437 38.819 37.2004 39.4476 39.5771 39.4476C41.2435 39.4476 42.6916 39.0375 43.7842 38.6001V41.4706C42.7188 42.0996 40.9703 42.7284 38.3751 42.7284C33.3756 42.7284 30.9443 40.2132 30.9443 35.5653Z\"\n                      fill=\"white\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M49.8116 33.9796H54.0733C54.0733 31.9293 53.3904 31.1911 52.0245 31.1911C50.9865 31.1911 50.0029 31.7925 49.8116 33.9796ZM45.1128 35.5653V35.21C45.1128 30.8629 47.8173 28.1289 52.0245 28.1289C56.7508 28.1289 58.5265 30.781 58.5265 35.4014V36.6042H49.8391C50.1123 38.819 51.3689 39.4476 53.7455 39.4476C55.4122 39.4476 56.8598 39.0375 57.9527 38.6001V41.4706C56.8873 42.0996 55.1388 42.7284 52.5436 42.7284C47.5441 42.7284 45.1128 40.2132 45.1128 35.5653Z\"\n                      fill=\"white\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M69.411 35.784V35.3465C69.411 32.4212 68.5093 31.7103 66.9249 31.7103C65.9689 31.7103 65.2312 31.9838 64.8213 32.2572V39.0374C65.2312 39.3109 65.9689 39.5569 66.761 39.5569C68.4276 39.5569 69.411 38.8189 69.411 35.784ZM60.1772 28.4022H64.6575V29.578H64.794C65.7228 28.6756 66.9797 28.1562 68.8646 28.1562C71.5964 28.1562 74.1646 29.7692 74.1646 34.9091V35.2372C74.1646 40.7871 71.5146 42.7282 67.6626 42.7282C66.242 42.7282 65.3404 42.455 64.8213 42.2361V46.5831H60.1772V28.4022Z\"\n                      fill=\"white\"\n                    />\n                    <mask\n                      id=\"mask0\"\n                      mask-type=\"alpha\"\n                      maskUnits=\"userSpaceOnUse\"\n                      x=\"75\"\n                      y=\"28\"\n                      width=\"12\"\n                      height=\"15\"\n                    >\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M75.3237 28.1289H86.4154V42.7283H75.3237V28.1289Z\"\n                        fill=\"white\"\n                      />\n                    </mask>\n                    <g mask=\"url(#mask0)\">\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M75.4059 41.7987V38.6819C76.4984 39.0922 77.6734 39.5024 79.5856 39.5024C81.2793 39.5024 81.9622 39.0922 81.9622 38.3266C81.9622 37.6431 81.5523 37.3972 80.3503 37.2603L79.0666 37.0691C76.6623 36.7138 75.3237 35.4013 75.3237 32.6673C75.3237 29.8514 77.1814 28.1289 81.088 28.1289C83.1095 28.1289 84.4757 28.4023 85.5412 28.8671V31.9564C84.6397 31.6832 83.3556 31.3277 81.6892 31.3277C80.296 31.3277 79.6401 31.6832 79.6401 32.4213C79.6401 33.1047 80.132 33.3509 81.252 33.5149L82.5634 33.6789C85.4044 34.0616 86.4155 35.5927 86.4155 38.0259C86.4155 41.1152 84.4757 42.7283 80.2685 42.7283C78.3836 42.7283 76.5258 42.3728 75.4059 41.7987Z\"\n                        fill=\"white\"\n                      />\n                    </g>\n                    <mask\n                      id=\"mask1\"\n                      mask-type=\"alpha\"\n                      maskUnits=\"userSpaceOnUse\"\n                      x=\"2\"\n                      y=\"3\"\n                      width=\"41\"\n                      height=\"40\"\n                    >\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M2 3.10156H42.4811V42.4729H2V3.10156Z\"\n                        fill=\"white\"\n                      />\n                    </mask>\n                    <g mask=\"url(#mask1)\">\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M42.4811 14.5491L22.2486 3.10156L2 14.5491V42.4729H13.6992V36.176H8.02327V18.7701L22.2469 10.8622L27.8278 13.793L36.4579 18.3254V22.0811H42.4811V14.5491Z\"\n                        fill=\"white\"\n                      />\n                    </g>\n                  </svg>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"50\"\n                    height=\"45\"\n                    viewBox=\"0 0 50 45\"\n                    className=\"mobile-logo\"\n                  >\n                    <defs>\n                      <path\n                        id=\"ev9b8ep4na\"\n                        d=\"M0 0.035L38.017 0.035 38.017 35.469 0 35.469z\"\n                      />\n                    </defs>\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <g>\n                        <g>\n                          <g>\n                            <g transform=\"translate(-421 -14) translate(421 14) translate(5.009 3.7) translate(0 .058)\">\n                              <mask id=\"w2iv9u332b\" fill=\"#fff\">\n                                <use href=\"#ev9b8ep4na\" />\n                              </mask>\n                              <path\n                                fill=\"#FFF\"\n                                d=\"M38.017 10.337L19.016 0.035 0 10.337 0 35.469 38.017 35.469 38.017 29.802 5.657 29.802 5.657 14.136 19.014 7.019 24.256 9.657 32.36 13.736 32.36 29.802 38.017 29.802z\"\n                                mask=\"url(#w2iv9u332b)\"\n                              />\n                            </g>\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                </>\n              ) : (\n                <>\n                  <svg\n                    width=\"90\"\n                    height=\"50\"\n                    viewBox=\"0 0 90 50\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"desktop-logo\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M17.032 37.955L24.9818 26.8823V26.8003H17.4963V23.1094H30.8554V26.6089L22.8782 37.7088V37.7909H30.828V41.4818H17.032V37.955Z\"\n                      fill=\"#44358F\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M35.6434 32.9796H39.9053C39.9053 30.9293 39.2222 30.1911 37.8563 30.1911C36.8181 30.1911 35.8347 30.7925 35.6434 32.9796ZM30.9446 34.5653V34.21C30.9446 29.8629 33.6491 27.1289 37.8563 27.1289C42.5824 27.1289 44.3583 29.781 44.3583 34.4014V35.6042H35.6707C35.944 37.819 37.2006 38.4476 39.5773 38.4476C41.2438 38.4476 42.6918 38.0375 43.7844 37.6001V40.4706C42.719 41.0996 40.9706 41.7284 38.3753 41.7284C33.3759 41.7284 30.9446 39.2132 30.9446 34.5653Z\"\n                      fill=\"#44358F\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M49.8116 32.9796H54.0733C54.0733 30.9293 53.3904 30.1911 52.0245 30.1911C50.9865 30.1911 50.0029 30.7925 49.8116 32.9796ZM45.1128 34.5653V34.21C45.1128 29.8629 47.8173 27.1289 52.0245 27.1289C56.7508 27.1289 58.5265 29.781 58.5265 34.4014V35.6042H49.8391C50.1123 37.819 51.3689 38.4476 53.7455 38.4476C55.4122 38.4476 56.8598 38.0375 57.9527 37.6001V40.4706C56.8873 41.0996 55.1388 41.7284 52.5436 41.7284C47.5441 41.7284 45.1128 39.2132 45.1128 34.5653Z\"\n                      fill=\"#44358F\"\n                    />\n                    <path\n                      fill-rule=\"evenodd\"\n                      clip-rule=\"evenodd\"\n                      d=\"M69.411 34.784V34.3465C69.411 31.4212 68.5093 30.7103 66.9249 30.7103C65.9689 30.7103 65.2312 30.9838 64.8213 31.2572V38.0374C65.2312 38.3109 65.9689 38.5569 66.761 38.5569C68.4276 38.5569 69.411 37.8189 69.411 34.784ZM60.1772 27.4022H64.6575V28.578H64.794C65.7228 27.6756 66.9797 27.1562 68.8646 27.1562C71.5964 27.1562 74.1646 28.7692 74.1646 33.9091V34.2372C74.1646 39.7871 71.5146 41.7282 67.6626 41.7282C66.242 41.7282 65.3404 41.455 64.8213 41.2361V45.5831H60.1772V27.4022Z\"\n                      fill=\"#44358F\"\n                    />\n                    <mask\n                      id=\"mask0\"\n                      mask-type=\"alpha\"\n                      maskUnits=\"userSpaceOnUse\"\n                      x=\"75\"\n                      y=\"27\"\n                      width=\"12\"\n                      height=\"15\"\n                    >\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M75.3237 27.1289H86.4154V41.7283H75.3237V27.1289Z\"\n                        fill=\"white\"\n                      />\n                    </mask>\n                    <g mask=\"url(#mask0)\">\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M75.4059 40.7987V37.6819C76.4984 38.0922 77.6734 38.5024 79.5856 38.5024C81.2793 38.5024 81.9622 38.0922 81.9622 37.3266C81.9622 36.6431 81.5523 36.3972 80.3503 36.2603L79.0666 36.0691C76.6623 35.7138 75.3237 34.4013 75.3237 31.6673C75.3237 28.8514 77.1814 27.1289 81.088 27.1289C83.1095 27.1289 84.4757 27.4023 85.5412 27.8671V30.9564C84.6397 30.6832 83.3556 30.3277 81.6892 30.3277C80.296 30.3277 79.6401 30.6832 79.6401 31.4213C79.6401 32.1047 80.132 32.3509 81.252 32.5149L82.5634 32.6789C85.4044 33.0616 86.4155 34.5927 86.4155 37.0259C86.4155 40.1152 84.4757 41.7283 80.2685 41.7283C78.3836 41.7283 76.5258 41.3728 75.4059 40.7987Z\"\n                        fill=\"#44358F\"\n                      />\n                    </g>\n                    <mask\n                      id=\"mask1\"\n                      mask-type=\"alpha\"\n                      maskUnits=\"userSpaceOnUse\"\n                      x=\"2\"\n                      y=\"2\"\n                      width=\"41\"\n                      height=\"40\"\n                    >\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M2 2.10156H42.4811V41.4729H2V2.10156Z\"\n                        fill=\"white\"\n                      />\n                    </mask>\n                    <g mask=\"url(#mask1)\">\n                      <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M42.4811 13.5491L22.2486 2.10156L2 13.5491V41.4729H13.6992V35.176H8.02327V17.7701L22.2469 9.86215L27.8278 12.793L36.4579 17.3254V21.0811H42.4811V13.5491Z\"\n                        fill=\"#44358F\"\n                      />\n                    </g>\n                  </svg>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"50\"\n                    height=\"45\"\n                    viewBox=\"0 0 50 45\"\n                    className=\"mobile-logo\"\n                  >\n                    <defs>\n                      <path\n                        id=\"ev9b8ep4na\"\n                        d=\"M0 0.035L38.017 0.035 38.017 35.469 0 35.469z\"\n                      />\n                    </defs>\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <g>\n                        <g>\n                          <g>\n                            <g transform=\"translate(-421 -14) translate(421 14) translate(5.009 3.7) translate(0 .058)\">\n                              <mask id=\"w2iv9u332b\" fill=\"#fff\">\n                                <use href=\"#ev9b8ep4na\" />\n                              </mask>\n                              <path\n                                fill=\"#44358F\"\n                                d=\"M38.017 10.337L19.016 0.035 0 10.337 0 35.469 38.017 35.469 38.017 29.802 5.657 29.802 5.657 14.136 19.014 7.019 24.256 9.657 32.36 13.736 32.36 29.802 38.017 29.802z\"\n                                mask=\"url(#w2iv9u332b)\"\n                              />\n                            </g>\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                </>\n              )}\n\n              {/* <img src={logo} /> */}\n            </Link>\n\n            <SubMenu\n              className={\n                isHomepage\n                  ? \" text-white float-right cs-menu-link desktopMenu\"\n                  : \"float-right cs-menu-link desktopMenu\"\n              }\n              key=\"SubMenu\"\n              title={UserName}\n            >\n              <Menu.ItemGroup\n                title=\"\"\n                className=\"background-white cs-header-menu\"\n              >\n                <Menu.Item key=\"setting:1\">\n                  <Link to=\"/member-change-password\"> 환경</Link>\n                </Menu.Item>\n                <Menu.Item key=\"setting:2\" onClick={this.showModal}>\n                  로그 아웃\n                </Menu.Item>\n              </Menu.ItemGroup>\n            </SubMenu>\n\n            <Menu.Item\n              key=\"13\"\n              className=\"desktopMenu cs-menu-link float-right\"\n            >\n              <Link to=\"/faq\" className={isHomepage ? \"text-white\" : \"\"}>\n                자주묻는 질문\n              </Link>\n            </Menu.Item>\n            <Menu.Item\n              key=\"12\"\n              className=\"desktopMenu cs-menu-link float-right\"\n            >\n              <Link\n                to=\"/property-processing\"\n                className={isHomepage ? \"text-white\" : \"\"}\n              >\n                내 부동산\n              </Link>\n            </Menu.Item>\n            <Menu.Item\n              key=\"11\"\n              className=\"desktopMenu cs-menu-link float-right\"\n            >\n              <Link\n                to=\"/register-property\"\n                className={isHomepage ? \"text-white\" : \"\"}\n              >\n                집 내놓기!\n              </Link>\n            </Menu.Item>\n          </Menu>\n          {/* <Button className=\"barsMenu\" icon={<MenuOutlined />} onClick={this.showDrawer}>\n        </Button> */}\n\n          {/* <Drawer\n          title=\"\"\n          className=\"menu-drawer\"\n          placement=\"right\"\n          closable={false}\n          onClose={this.onClose}\n          visible={drawerVisible}\n        > */}\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"1\"]}\n            selectedKeys={[this.state.activeClass]}\n            className=\"cs-menu-main barsMenu\"\n          >\n            <Menu.Item key=\"11\" className=\"cs-menu-link\">\n              <Link to=\"/property-processing\">\n                {isHomepage ? (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <g>\n                        <g>\n                          <g transform=\"translate(-401 -20) translate(401 20) translate(7 9)\">\n                            <g\n                              stroke=\"#FFF\"\n                              stroke-linecap=\"round\"\n                              stroke-width=\"4\"\n                            >\n                              <g>\n                                <path d=\"M22.44 7c0 3.866-3.133 7-7 7-3.865 0-7-3.134-7-7s3.135-7 7-7c3.867 0 7 3.134 7 7zM0 29.344c1.447-5.138 7.614-9 15-9s13.551 3.862 15 9\" />\n                              </g>\n                            </g>\n                            <circle cx=\"31.5\" cy=\"14.5\" r=\"2.5\" fill=\"#FFF\" />\n                            <path\n                              stroke=\"#FFF\"\n                              stroke-linecap=\"round\"\n                              stroke-width=\"4\"\n                              d=\"M31.5 1L31.5 8\"\n                            />\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                ) : (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <g>\n                        <g>\n                          <g transform=\"translate(-401 -20) translate(401 20) translate(7 9)\">\n                            <g\n                              stroke=\"#44358f\"\n                              stroke-linecap=\"round\"\n                              stroke-width=\"4\"\n                            >\n                              <g>\n                                <path d=\"M22.44 7c0 3.866-3.133 7-7 7-3.865 0-7-3.134-7-7s3.135-7 7-7c3.867 0 7 3.134 7 7zM0 29.344c1.447-5.138 7.614-9 15-9s13.551 3.862 15 9\" />\n                              </g>\n                            </g>\n                            <circle\n                              cx=\"31.5\"\n                              cy=\"14.5\"\n                              r=\"2.5\"\n                              fill=\"#44358f\"\n                            />\n                            <path\n                              stroke=\"#44358f\"\n                              stroke-linecap=\"round\"\n                              stroke-width=\"4\"\n                              d=\"M31.5 1L31.5 8\"\n                            />\n                          </g>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                )}\n              </Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"13\" className=\"cs-menu-link\">\n              <Link to=\"/faq\">\n                {isHomepage ? (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <g>\n                        <g transform=\"translate(-479 -20) translate(479 20)\">\n                          <circle\n                            cx=\"24\"\n                            cy=\"24\"\n                            r=\"18\"\n                            stroke=\"#FFF\"\n                            stroke-width=\"4\"\n                          />\n                          <text\n                            fill=\"#FFF\"\n                            font-family=\"NanumSquareRoundOTFB, NanumSquareRoundOTF\"\n                            font-size=\"28\"\n                            font-weight=\"bold\"\n                          >\n                            <tspan x=\"16.44\" y=\"34\">\n                              ?\n                            </tspan>\n                          </text>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                ) : (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g fill=\"none\" fill-rule=\"evenodd\">\n                      <g>\n                        <g transform=\"translate(-479 -20) translate(479 20)\">\n                          <circle\n                            cx=\"24\"\n                            cy=\"24\"\n                            r=\"18\"\n                            stroke=\"#44358f\"\n                            stroke-width=\"4\"\n                          />\n                          <text\n                            fill=\"#44358f\"\n                            font-family=\"NanumSquareRoundOTFB, NanumSquareRoundOTF\"\n                            font-size=\"28\"\n                            font-weight=\"bold\"\n                          >\n                            <tspan x=\"16.44\" y=\"34\">\n                              ?\n                            </tspan>\n                          </text>\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                )}\n              </Link>\n            </Menu.Item>\n\n            {UserName && (\n              <Menu.Item key=\"12\" className=\"cs-menu-link\">\n                <Link to=\"/member-change-password\">\n                  {isHomepage ? (\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"48\"\n                      height=\"48\"\n                      viewBox=\"0 0 48 48\"\n                    >\n                      <g fill=\"none\" fill-rule=\"evenodd\">\n                        <g stroke=\"#FFF\" stroke-width=\"4\">\n                          <g>\n                            <path\n                              d=\"M23.89 28.956c-2.826 0-5.116-2.291-5.116-5.117s2.29-5.117 5.117-5.117c2.826 0 5.116 2.291 5.116 5.117s-2.29 5.117-5.116 5.117zm12.388-6.181l-.638-2.799c-.077-.338.026-.691.272-.934l2.39-2.359c.364-.359.408-.931.104-1.342l-2.43-3.277c-.305-.411-.865-.535-1.314-.291l-2.998 1.629c-.295.16-.65.162-.946.005l-2.607-1.383c-.283-.15-.477-.426-.521-.743l-.48-3.398C27.038 7.377 26.605 7 26.094 7h-4.08c-.511 0-.944.376-1.016.883l-.477 3.376c-.046.331-.256.617-.558.762l-2.621 1.255c-.303.145-.658.128-.946-.045l-2.63-1.575c-.416-.25-.95-.174-1.28.182l-2.632 2.839c-.348.375-.367.949-.044 1.345l2.218 2.725c.196.242.269.561.196.864l-.676 2.833c-.081.337-.33.608-.657.717L7.704 24.22c-.486.161-.778.654-.687 1.157l.728 4.014c.092.502.54.862 1.05.842l3.41-.134c.335-.014.654.142.85.413l1.893 2.621c.185.257.238.586.142.888l-1.04 3.268c-.154.487.074 1.014.535 1.236l3.676 1.766c.46.222 1.014.071 1.298-.355l1.894-2.839c.186-.278.499-.446.834-.445l3.092.007c.33.001.638.164.824.437l1.924 2.823c.288.423.844.569 1.303.343l3.657-1.805c.459-.226.68-.755.52-1.241l-1.066-3.239c-.104-.318-.043-.668.164-.931l1.796-2.284c.207-.264.533-.407.868-.379l3.376.276c.51.042.973-.298 1.085-.797l.897-3.98c.113-.498-.16-1.004-.637-1.185l-3.191-1.209c-.314-.119-.547-.386-.621-.713z\"\n                              transform=\"translate(-557 -20) translate(557 20)\"\n                            />\n                          </g>\n                        </g>\n                      </g>\n                    </svg>\n                  ) : (\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"48\"\n                      height=\"48\"\n                      viewBox=\"0 0 48 48\"\n                    >\n                      <g fill=\"none\" fill-rule=\"evenodd\">\n                        <g stroke=\"#44358f\" stroke-width=\"4\">\n                          <g>\n                            <path\n                              d=\"M23.89 28.956c-2.826 0-5.116-2.291-5.116-5.117s2.29-5.117 5.117-5.117c2.826 0 5.116 2.291 5.116 5.117s-2.29 5.117-5.116 5.117zm12.388-6.181l-.638-2.799c-.077-.338.026-.691.272-.934l2.39-2.359c.364-.359.408-.931.104-1.342l-2.43-3.277c-.305-.411-.865-.535-1.314-.291l-2.998 1.629c-.295.16-.65.162-.946.005l-2.607-1.383c-.283-.15-.477-.426-.521-.743l-.48-3.398C27.038 7.377 26.605 7 26.094 7h-4.08c-.511 0-.944.376-1.016.883l-.477 3.376c-.046.331-.256.617-.558.762l-2.621 1.255c-.303.145-.658.128-.946-.045l-2.63-1.575c-.416-.25-.95-.174-1.28.182l-2.632 2.839c-.348.375-.367.949-.044 1.345l2.218 2.725c.196.242.269.561.196.864l-.676 2.833c-.081.337-.33.608-.657.717L7.704 24.22c-.486.161-.778.654-.687 1.157l.728 4.014c.092.502.54.862 1.05.842l3.41-.134c.335-.014.654.142.85.413l1.893 2.621c.185.257.238.586.142.888l-1.04 3.268c-.154.487.074 1.014.535 1.236l3.676 1.766c.46.222 1.014.071 1.298-.355l1.894-2.839c.186-.278.499-.446.834-.445l3.092.007c.33.001.638.164.824.437l1.924 2.823c.288.423.844.569 1.303.343l3.657-1.805c.459-.226.68-.755.52-1.241l-1.066-3.239c-.104-.318-.043-.668.164-.931l1.796-2.284c.207-.264.533-.407.868-.379l3.376.276c.51.042.973-.298 1.085-.797l.897-3.98c.113-.498-.16-1.004-.637-1.185l-3.191-1.209c-.314-.119-.547-.386-.621-.713z\"\n                              transform=\"translate(-557 -20) translate(557 20)\"\n                            />\n                          </g>\n                        </g>\n                      </g>\n                    </svg>\n                  )}\n                </Link>\n              </Menu.Item>\n            )}\n\n            {UserName && (\n              <SubMenu\n                className=\"cs-menu-link cs-user-link\"\n                key=\"SubMenu\"\n                title={UserName}\n              >\n                <Menu.ItemGroup className=\"cs-header-menu cs-mobile-submenu\">\n                  <Menu.Item key=\"setting:2\" onClick={this.showModal}>\n                    로그 아웃\n                  </Menu.Item>\n                </Menu.ItemGroup>\n              </SubMenu>\n            )}\n          </Menu>\n          {/* </Drawer> */}\n\n          <Modal\n            visible={visible}\n            title=\"로그아웃 하실건가요? :(\"\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            closable={false}\n            footer={null}\n            className=\"cs-popup cs-logout-popup\"\n          >\n            <div className=\"cs-modal-body\">\n              <Row className=\"text-left\">\n                <p>\n                  집스에서 로그아웃 됩니다.\n                  <br />\n                  정말 로그아웃 하실건가요?{\" \"}\n                </p>\n\n                <Space direction=\"vertical\" className=\"width100\">\n                  <Col span={24}>\n                    <Button\n                      key=\"back\"\n                      className=\"theme-btn cs-btn3\"\n                      onClick={this.handleCancel}\n                      size={\"large\"}\n                    >\n                      아니오, 취소할게요.\n                    </Button>\n                  </Col>\n\n                  <Col span={24}>\n                    <Button\n                      className=\"cs-btn4\"\n                      key=\"submit\"\n                      type=\"default\"\n                      loading={loading}\n                      onClick={this.handleOk}\n                      size={\"large\"}\n                    >\n                      네, 로그아웃 할게요.\n                    </Button>\n                  </Col>\n                </Space>\n              </Row>\n            </div>\n          </Modal>\n        </Header>\n      </div>\n    );\n  }\n}\n\nexport default WithAuthHeader;\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/EmptyPhase.jsx",[],"/home/codexive/work/demo/zeep/src/components/RegisterProperty/UploadImage.js",["955"],"import React, { Component } from \"react\";\nimport { message, Upload } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nclass UploadImage extends Component {\n  beforeUpload = (file) => {\n    const img = file.type.split(\"/\");\n    if (img[0] == \"image\") {\n      return false;\n    } else {\n      message.error(\"이미지를 선택해주세요\");\n      return true;\n    }\n  };\n  render() {\n    const { fileList, handleUpload, handlePreview } = this.props;\n    const uploadButton = (\n      <div>\n        {/* <Icon type=\"plus\" /> */}\n        <PlusOutlined />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n\n    return (\n      <Upload\n        listType=\"picture-card\"\n        fileList={fileList}\n        onPreview={handlePreview}\n        onChange={handleUpload}\n        beforeUpload={(file) => this.beforeUpload(file)} // return false so that antd doesn't upload the picture right away\n        className=\"cs-upload\"\n        maxCount={1}\n      >\n        {fileList.length >= 1 ? null : uploadButton}\n      </Upload>\n    );\n  }\n}\n\nexport default UploadImage;\n","/home/codexive/work/demo/zeep/src/components/common/MobileNumericInput.js",["956","957","958"],"import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Input, Tooltip } from \"antd\";\n\nfunction formatNumber(value) {\n  value += \"\";\n  const list = value.split(\".\");\n  const prefix = list[0].charAt(0) === \"-\" ? \"-\" : \"\";\n  let num = prefix ? list[0].slice(1) : list[0];\n  let result = \"\";\n  while (num.length > 3) {\n    result = `,${num.slice(-3)}${result}`;\n    num = num.slice(0, num.length - 3);\n  }\n  if (num) {\n    result = num + result;\n  }\n  return `${prefix}${result}${list[1] ? `.${list[1]}` : \"\"}`;\n}\n\nconst maskMobileNumber = (value, maxLength = 14, radix = \"-\") => {\n  const currencyRegExp = new RegExp(`(\\\\d{3})(\\\\d{4})?(\\\\d{4})`, \"g\");\n  return value.replace(currencyRegExp, (match, p1, p2, p3) =>\n    [p1, p3].join(radix)\n  );\n};\n\nclass MobileNumericInput extends React.Component {\n  onChange = (e) => {\n    const { value } = e.target;\n    const reg = /^-?[0-9]*(\\.[0-9]*)?$/;\n    if (reg.test(value) || value === \"\" || value === \"-\") {\n      this.props.onChange(value);\n    }\n  };\n\n  // '.' at the end or only '-' in the input box.\n  onBlur = () => {\n    const { value, onBlur, onChange } = this.props;\n    let valueTemp = value;\n    if ((value && value.charAt(value.length - 1) === \".\") || value === \"-\") {\n      valueTemp = value.slice(0, -1);\n    }\n    onChange(valueTemp.replace(/0*(\\d+)/, \"$1\"));\n    if (onBlur) {\n      onBlur();\n    }\n  };\n\n  render() {\n    return (\n      <Input\n        {...this.props}\n        onChange={this.onChange}\n        // onBlur={this.onBlur}\n        placeholder={this.props.placeholder}\n        maxLength={this.props.maxLength}\n      />\n    );\n  }\n}\n\nexport default MobileNumericInput;\n","/home/codexive/work/demo/zeep/src/util/Util.js",["959"],"import BaseUrl from \"../components/services/axios-url\";\nconst axios = require(\"axios\");\n\nconst downloadFileByURL = (folder, file) => {\n  axios({\n    url: `${BaseUrl}/${folder}/${file}`,\n    method: 'GET',\n    responseType: 'blob', // important\n  }).then((response) => {\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', file);\n    document.body.appendChild(link);\n    link.click();\n  });\n}\n\nexport default {\n  downloadFileByURL\n};\n","/home/codexive/work/demo/zeep/src/components/RegisterProperty/KakaoMap.jsx",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/MemberSetting/member-settings-aside.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/BasicSettings/basic-settings-aside.js",[],"/home/codexive/work/demo/zeep/src/components/ZeepsAdmin/RedirectIfNotAuthenticated/RedirectIfNotAuthenticated.js",[],{"ruleId":"960","replacedBy":"961"},{"ruleId":"962","replacedBy":"963"},{"ruleId":"964","severity":1,"message":"965","line":3,"column":18,"nodeType":"966","messageId":"967","endLine":3,"endColumn":22},{"ruleId":"964","severity":1,"message":"968","line":3,"column":24,"nodeType":"966","messageId":"967","endLine":3,"endColumn":29},{"ruleId":"964","severity":1,"message":"969","line":3,"column":39,"nodeType":"966","messageId":"967","endLine":3,"endColumn":47},{"ruleId":"964","severity":1,"message":"970","line":3,"column":49,"nodeType":"966","messageId":"967","endLine":3,"endColumn":56},{"ruleId":"964","severity":1,"message":"971","line":9,"column":10,"nodeType":"966","messageId":"967","endLine":9,"endColumn":14},{"ruleId":"964","severity":1,"message":"972","line":10,"column":15,"nodeType":"966","messageId":"967","endLine":10,"endColumn":18},{"ruleId":"964","severity":1,"message":"973","line":13,"column":8,"nodeType":"966","messageId":"967","endLine":13,"endColumn":23},{"ruleId":"974","severity":1,"message":"975","line":27,"column":45,"nodeType":"976","messageId":"977","endLine":27,"endColumn":47},{"ruleId":"964","severity":1,"message":"965","line":5,"column":3,"nodeType":"966","messageId":"967","endLine":5,"endColumn":7},{"ruleId":"964","severity":1,"message":"968","line":6,"column":3,"nodeType":"966","messageId":"967","endLine":6,"endColumn":8},{"ruleId":"964","severity":1,"message":"978","line":7,"column":3,"nodeType":"966","messageId":"967","endLine":7,"endColumn":9},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"970","line":10,"column":3,"nodeType":"966","messageId":"967","endLine":10,"endColumn":10},{"ruleId":"964","severity":1,"message":"979","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":16,"column":3,"nodeType":"966","messageId":"967","endLine":16,"endColumn":8},{"ruleId":"964","severity":1,"message":"981","line":17,"column":3,"nodeType":"966","messageId":"967","endLine":17,"endColumn":9},{"ruleId":"964","severity":1,"message":"982","line":18,"column":3,"nodeType":"966","messageId":"967","endLine":18,"endColumn":6},{"ruleId":"964","severity":1,"message":"983","line":19,"column":3,"nodeType":"966","messageId":"967","endLine":19,"endColumn":13},{"ruleId":"964","severity":1,"message":"984","line":20,"column":3,"nodeType":"966","messageId":"967","endLine":20,"endColumn":9},{"ruleId":"964","severity":1,"message":"985","line":22,"column":3,"nodeType":"966","messageId":"967","endLine":22,"endColumn":7},{"ruleId":"964","severity":1,"message":"986","line":27,"column":3,"nodeType":"966","messageId":"967","endLine":27,"endColumn":17},{"ruleId":"964","severity":1,"message":"987","line":28,"column":3,"nodeType":"966","messageId":"967","endLine":28,"endColumn":17},{"ruleId":"964","severity":1,"message":"988","line":29,"column":3,"nodeType":"966","messageId":"967","endLine":29,"endColumn":17},{"ruleId":"964","severity":1,"message":"989","line":30,"column":3,"nodeType":"966","messageId":"967","endLine":30,"endColumn":15},{"ruleId":"964","severity":1,"message":"971","line":35,"column":10,"nodeType":"966","messageId":"967","endLine":35,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":35,"column":16,"nodeType":"966","messageId":"967","endLine":35,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":39,"column":9,"nodeType":"966","messageId":"967","endLine":39,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":39,"column":26,"nodeType":"966","messageId":"967","endLine":39,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":39,"column":34,"nodeType":"966","messageId":"967","endLine":39,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":40,"column":9,"nodeType":"966","messageId":"967","endLine":40,"endColumn":16},{"ruleId":"964","severity":1,"message":"995","line":41,"column":9,"nodeType":"966","messageId":"967","endLine":41,"endColumn":13},{"ruleId":"974","severity":1,"message":"996","line":53,"column":34,"nodeType":"976","messageId":"977","endLine":53,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":53,"column":63,"nodeType":"976","messageId":"977","endLine":53,"endColumn":65},{"ruleId":"997","severity":1,"message":"998","line":110,"column":29,"nodeType":"999","messageId":"1000","endLine":112,"endColumn":30},{"ruleId":"964","severity":1,"message":"972","line":8,"column":15,"nodeType":"966","messageId":"967","endLine":8,"endColumn":18},{"ruleId":"964","severity":1,"message":"1001","line":11,"column":8,"nodeType":"966","messageId":"967","endLine":11,"endColumn":25},{"ruleId":"964","severity":1,"message":"1002","line":33,"column":10,"nodeType":"966","messageId":"967","endLine":33,"endColumn":16},{"ruleId":"964","severity":1,"message":"1003","line":41,"column":11,"nodeType":"966","messageId":"967","endLine":41,"endColumn":18},{"ruleId":"974","severity":1,"message":"996","line":72,"column":29,"nodeType":"976","messageId":"977","endLine":72,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":72,"column":53,"nodeType":"976","messageId":"977","endLine":72,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":77,"column":29,"nodeType":"976","messageId":"977","endLine":77,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":77,"column":53,"nodeType":"976","messageId":"977","endLine":77,"endColumn":55},{"ruleId":"964","severity":1,"message":"1004","line":83,"column":15,"nodeType":"966","messageId":"967","endLine":83,"endColumn":23},{"ruleId":"964","severity":1,"message":"1005","line":84,"column":15,"nodeType":"966","messageId":"967","endLine":84,"endColumn":24},{"ruleId":"964","severity":1,"message":"1006","line":100,"column":13,"nodeType":"966","messageId":"967","endLine":100,"endColumn":20},{"ruleId":"1007","severity":1,"message":"1008","line":115,"column":15,"nodeType":"1009","endLine":115,"endColumn":58},{"ruleId":"964","severity":1,"message":"1010","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":7},{"ruleId":"964","severity":1,"message":"1011","line":13,"column":3,"nodeType":"966","messageId":"967","endLine":13,"endColumn":8},{"ruleId":"974","severity":1,"message":"996","line":55,"column":38,"nodeType":"976","messageId":"977","endLine":55,"endColumn":40},{"ruleId":"1012","severity":1,"message":"1013","line":57,"column":13,"nodeType":"966","messageId":"1014","endLine":57,"endColumn":27},{"ruleId":"974","severity":1,"message":"996","line":65,"column":36,"nodeType":"976","messageId":"977","endLine":65,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":66,"column":36,"nodeType":"976","messageId":"977","endLine":66,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":85,"column":29,"nodeType":"976","messageId":"977","endLine":85,"endColumn":31},{"ruleId":"1007","severity":1,"message":"1008","line":140,"column":25,"nodeType":"1009","endLine":144,"endColumn":27},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"971","line":15,"column":10,"nodeType":"966","messageId":"967","endLine":15,"endColumn":14},{"ruleId":"964","severity":1,"message":"991","line":25,"column":9,"nodeType":"966","messageId":"967","endLine":25,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":25,"column":26,"nodeType":"966","messageId":"967","endLine":25,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":25,"column":34,"nodeType":"966","messageId":"967","endLine":25,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":27,"column":9,"nodeType":"966","messageId":"967","endLine":27,"endColumn":16},{"ruleId":"964","severity":1,"message":"1015","line":37,"column":7,"nodeType":"966","messageId":"967","endLine":37,"endColumn":16},{"ruleId":"964","severity":1,"message":"1002","line":46,"column":10,"nodeType":"966","messageId":"967","endLine":46,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":61,"column":34,"nodeType":"976","messageId":"977","endLine":61,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":61,"column":63,"nodeType":"976","messageId":"977","endLine":61,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":91,"column":29,"nodeType":"976","messageId":"977","endLine":91,"endColumn":31},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"1018","line":13,"column":3,"nodeType":"966","messageId":"967","endLine":13,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"990","line":20,"column":16,"nodeType":"966","messageId":"967","endLine":20,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":30,"column":9,"nodeType":"966","messageId":"967","endLine":30,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":30,"column":26,"nodeType":"966","messageId":"967","endLine":30,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":30,"column":34,"nodeType":"966","messageId":"967","endLine":30,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":31,"column":9,"nodeType":"966","messageId":"967","endLine":31,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":33,"column":9,"nodeType":"966","messageId":"967","endLine":33,"endColumn":16},{"ruleId":"964","severity":1,"message":"1020","line":34,"column":9,"nodeType":"966","messageId":"967","endLine":34,"endColumn":17},{"ruleId":"964","severity":1,"message":"1015","line":44,"column":7,"nodeType":"966","messageId":"967","endLine":44,"endColumn":16},{"ruleId":"964","severity":1,"message":"1021","line":48,"column":9,"nodeType":"966","messageId":"967","endLine":48,"endColumn":15},{"ruleId":"964","severity":1,"message":"1022","line":58,"column":7,"nodeType":"966","messageId":"967","endLine":58,"endColumn":14},{"ruleId":"964","severity":1,"message":"1023","line":78,"column":7,"nodeType":"966","messageId":"967","endLine":78,"endColumn":11},{"ruleId":"964","severity":1,"message":"1024","line":94,"column":7,"nodeType":"966","messageId":"967","endLine":94,"endColumn":19},{"ruleId":"964","severity":1,"message":"1025","line":107,"column":10,"nodeType":"966","messageId":"967","endLine":107,"endColumn":28},{"ruleId":"974","severity":1,"message":"996","line":125,"column":34,"nodeType":"976","messageId":"977","endLine":125,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":125,"column":63,"nodeType":"976","messageId":"977","endLine":125,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":158,"column":29,"nodeType":"976","messageId":"977","endLine":158,"endColumn":31},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"1018","line":13,"column":3,"nodeType":"966","messageId":"967","endLine":13,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"990","line":20,"column":16,"nodeType":"966","messageId":"967","endLine":20,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":30,"column":9,"nodeType":"966","messageId":"967","endLine":30,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":30,"column":26,"nodeType":"966","messageId":"967","endLine":30,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":30,"column":34,"nodeType":"966","messageId":"967","endLine":30,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":31,"column":9,"nodeType":"966","messageId":"967","endLine":31,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":33,"column":9,"nodeType":"966","messageId":"967","endLine":33,"endColumn":16},{"ruleId":"964","severity":1,"message":"1020","line":34,"column":9,"nodeType":"966","messageId":"967","endLine":34,"endColumn":17},{"ruleId":"964","severity":1,"message":"1015","line":44,"column":7,"nodeType":"966","messageId":"967","endLine":44,"endColumn":16},{"ruleId":"964","severity":1,"message":"1021","line":48,"column":9,"nodeType":"966","messageId":"967","endLine":48,"endColumn":15},{"ruleId":"964","severity":1,"message":"1022","line":58,"column":7,"nodeType":"966","messageId":"967","endLine":58,"endColumn":14},{"ruleId":"964","severity":1,"message":"1023","line":78,"column":7,"nodeType":"966","messageId":"967","endLine":78,"endColumn":11},{"ruleId":"964","severity":1,"message":"1024","line":94,"column":7,"nodeType":"966","messageId":"967","endLine":94,"endColumn":19},{"ruleId":"964","severity":1,"message":"1025","line":107,"column":10,"nodeType":"966","messageId":"967","endLine":107,"endColumn":28},{"ruleId":"974","severity":1,"message":"996","line":130,"column":29,"nodeType":"976","messageId":"977","endLine":130,"endColumn":31},{"ruleId":"964","severity":1,"message":"1026","line":8,"column":10,"nodeType":"966","messageId":"967","endLine":8,"endColumn":13},{"ruleId":"964","severity":1,"message":"972","line":8,"column":15,"nodeType":"966","messageId":"967","endLine":8,"endColumn":18},{"ruleId":"964","severity":1,"message":"1027","line":16,"column":8,"nodeType":"966","messageId":"967","endLine":16,"endColumn":12},{"ruleId":"964","severity":1,"message":"1002","line":31,"column":10,"nodeType":"966","messageId":"967","endLine":31,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":53,"column":38,"nodeType":"976","messageId":"977","endLine":53,"endColumn":40},{"ruleId":"974","severity":1,"message":"996","line":75,"column":29,"nodeType":"976","messageId":"977","endLine":75,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":75,"column":53,"nodeType":"976","messageId":"977","endLine":75,"endColumn":55},{"ruleId":"964","severity":1,"message":"973","line":15,"column":8,"nodeType":"966","messageId":"967","endLine":15,"endColumn":23},{"ruleId":"964","severity":1,"message":"1028","line":30,"column":7,"nodeType":"966","messageId":"967","endLine":30,"endColumn":15},{"ruleId":"974","severity":1,"message":"975","line":49,"column":42,"nodeType":"976","messageId":"977","endLine":49,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":68,"column":29,"nodeType":"976","messageId":"977","endLine":68,"endColumn":31},{"ruleId":"964","severity":1,"message":"978","line":5,"column":3,"nodeType":"966","messageId":"967","endLine":5,"endColumn":9},{"ruleId":"964","severity":1,"message":"979","line":10,"column":3,"nodeType":"966","messageId":"967","endLine":10,"endColumn":8},{"ruleId":"964","severity":1,"message":"1029","line":11,"column":3,"nodeType":"966","messageId":"967","endLine":11,"endColumn":10},{"ruleId":"964","severity":1,"message":"1030","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":11},{"ruleId":"964","severity":1,"message":"1031","line":17,"column":3,"nodeType":"966","messageId":"967","endLine":17,"endColumn":19},{"ruleId":"964","severity":1,"message":"1032","line":18,"column":3,"nodeType":"966","messageId":"967","endLine":18,"endColumn":16},{"ruleId":"964","severity":1,"message":"1033","line":19,"column":3,"nodeType":"966","messageId":"967","endLine":19,"endColumn":22},{"ruleId":"964","severity":1,"message":"971","line":24,"column":10,"nodeType":"966","messageId":"967","endLine":24,"endColumn":14},{"ruleId":"964","severity":1,"message":"1034","line":24,"column":16,"nodeType":"966","messageId":"967","endLine":24,"endColumn":24},{"ruleId":"964","severity":1,"message":"1035","line":27,"column":8,"nodeType":"966","messageId":"967","endLine":27,"endColumn":15},{"ruleId":"974","severity":1,"message":"996","line":49,"column":29,"nodeType":"976","messageId":"977","endLine":49,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":49,"column":53,"nodeType":"976","messageId":"977","endLine":49,"endColumn":55},{"ruleId":"964","severity":1,"message":"1036","line":58,"column":13,"nodeType":"966","messageId":"967","endLine":58,"endColumn":20},{"ruleId":"964","severity":1,"message":"1006","line":58,"column":22,"nodeType":"966","messageId":"967","endLine":58,"endColumn":29},{"ruleId":"1007","severity":1,"message":"1008","line":73,"column":25,"nodeType":"1009","endLine":73,"endColumn":48},{"ruleId":"974","severity":1,"message":"996","line":127,"column":55,"nodeType":"976","messageId":"977","endLine":127,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":128,"column":55,"nodeType":"976","messageId":"977","endLine":128,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":129,"column":55,"nodeType":"976","messageId":"977","endLine":129,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":135,"column":55,"nodeType":"976","messageId":"977","endLine":135,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":136,"column":55,"nodeType":"976","messageId":"977","endLine":136,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":137,"column":55,"nodeType":"976","messageId":"977","endLine":137,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":143,"column":55,"nodeType":"976","messageId":"977","endLine":143,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":144,"column":55,"nodeType":"976","messageId":"977","endLine":144,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":145,"column":55,"nodeType":"976","messageId":"977","endLine":145,"endColumn":57},{"ruleId":"1007","severity":1,"message":"1008","line":157,"column":25,"nodeType":"1009","endLine":157,"endColumn":63},{"ruleId":"964","severity":1,"message":"979","line":10,"column":3,"nodeType":"966","messageId":"967","endLine":10,"endColumn":8},{"ruleId":"964","severity":1,"message":"1029","line":11,"column":3,"nodeType":"966","messageId":"967","endLine":11,"endColumn":10},{"ruleId":"964","severity":1,"message":"1030","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":11},{"ruleId":"964","severity":1,"message":"1031","line":16,"column":3,"nodeType":"966","messageId":"967","endLine":16,"endColumn":19},{"ruleId":"964","severity":1,"message":"1032","line":17,"column":3,"nodeType":"966","messageId":"967","endLine":17,"endColumn":16},{"ruleId":"964","severity":1,"message":"1033","line":18,"column":3,"nodeType":"966","messageId":"967","endLine":18,"endColumn":22},{"ruleId":"964","severity":1,"message":"971","line":23,"column":10,"nodeType":"966","messageId":"967","endLine":23,"endColumn":14},{"ruleId":"964","severity":1,"message":"1034","line":23,"column":16,"nodeType":"966","messageId":"967","endLine":23,"endColumn":24},{"ruleId":"964","severity":1,"message":"1035","line":26,"column":8,"nodeType":"966","messageId":"967","endLine":26,"endColumn":15},{"ruleId":"974","severity":1,"message":"996","line":52,"column":29,"nodeType":"976","messageId":"977","endLine":52,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":52,"column":53,"nodeType":"976","messageId":"977","endLine":52,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":62,"column":29,"nodeType":"976","messageId":"977","endLine":62,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":62,"column":53,"nodeType":"976","messageId":"977","endLine":62,"endColumn":55},{"ruleId":"964","severity":1,"message":"1036","line":70,"column":13,"nodeType":"966","messageId":"967","endLine":70,"endColumn":20},{"ruleId":"964","severity":1,"message":"1006","line":70,"column":22,"nodeType":"966","messageId":"967","endLine":70,"endColumn":29},{"ruleId":"1007","severity":1,"message":"1008","line":83,"column":25,"nodeType":"1009","endLine":83,"endColumn":48},{"ruleId":"974","severity":1,"message":"996","line":122,"column":57,"nodeType":"976","messageId":"977","endLine":122,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":123,"column":57,"nodeType":"976","messageId":"977","endLine":123,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":125,"column":57,"nodeType":"976","messageId":"977","endLine":125,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":131,"column":57,"nodeType":"976","messageId":"977","endLine":131,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":132,"column":57,"nodeType":"976","messageId":"977","endLine":132,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":134,"column":57,"nodeType":"976","messageId":"977","endLine":134,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":140,"column":57,"nodeType":"976","messageId":"977","endLine":140,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":141,"column":57,"nodeType":"976","messageId":"977","endLine":141,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":143,"column":57,"nodeType":"976","messageId":"977","endLine":143,"endColumn":59},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"971","line":16,"column":10,"nodeType":"966","messageId":"967","endLine":16,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":16,"column":16,"nodeType":"966","messageId":"967","endLine":16,"endColumn":26},{"ruleId":"964","severity":1,"message":"1035","line":23,"column":8,"nodeType":"966","messageId":"967","endLine":23,"endColumn":15},{"ruleId":"964","severity":1,"message":"991","line":26,"column":9,"nodeType":"966","messageId":"967","endLine":26,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":26,"column":26,"nodeType":"966","messageId":"967","endLine":26,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":26,"column":34,"nodeType":"966","messageId":"967","endLine":26,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":27,"column":9,"nodeType":"966","messageId":"967","endLine":27,"endColumn":16},{"ruleId":"964","severity":1,"message":"1002","line":47,"column":10,"nodeType":"966","messageId":"967","endLine":47,"endColumn":16},{"ruleId":"1037","severity":1,"message":"1038","line":52,"column":3,"nodeType":"1039","messageId":"1040","endLine":54,"endColumn":4},{"ruleId":"974","severity":1,"message":"996","line":80,"column":25,"nodeType":"976","messageId":"977","endLine":80,"endColumn":27},{"ruleId":"974","severity":1,"message":"996","line":80,"column":45,"nodeType":"976","messageId":"977","endLine":80,"endColumn":47},{"ruleId":"974","severity":1,"message":"996","line":122,"column":29,"nodeType":"976","messageId":"977","endLine":122,"endColumn":31},{"ruleId":"964","severity":1,"message":"965","line":3,"column":18,"nodeType":"966","messageId":"967","endLine":3,"endColumn":22},{"ruleId":"964","severity":1,"message":"968","line":3,"column":24,"nodeType":"966","messageId":"967","endLine":3,"endColumn":29},{"ruleId":"964","severity":1,"message":"978","line":3,"column":31,"nodeType":"966","messageId":"967","endLine":3,"endColumn":37},{"ruleId":"964","severity":1,"message":"969","line":3,"column":39,"nodeType":"966","messageId":"967","endLine":3,"endColumn":47},{"ruleId":"964","severity":1,"message":"970","line":3,"column":55,"nodeType":"966","messageId":"967","endLine":3,"endColumn":62},{"ruleId":"964","severity":1,"message":"971","line":6,"column":10,"nodeType":"966","messageId":"967","endLine":6,"endColumn":14},{"ruleId":"964","severity":1,"message":"1026","line":7,"column":10,"nodeType":"966","messageId":"967","endLine":7,"endColumn":13},{"ruleId":"964","severity":1,"message":"972","line":7,"column":15,"nodeType":"966","messageId":"967","endLine":7,"endColumn":18},{"ruleId":"964","severity":1,"message":"991","line":19,"column":9,"nodeType":"966","messageId":"967","endLine":19,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":19,"column":26,"nodeType":"966","messageId":"967","endLine":19,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":19,"column":34,"nodeType":"966","messageId":"967","endLine":19,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":28,"column":9,"nodeType":"966","messageId":"967","endLine":28,"endColumn":16},{"ruleId":"964","severity":1,"message":"1041","line":30,"column":7,"nodeType":"966","messageId":"967","endLine":30,"endColumn":13},{"ruleId":"964","severity":1,"message":"1042","line":34,"column":7,"nodeType":"966","messageId":"967","endLine":34,"endColumn":17},{"ruleId":"964","severity":1,"message":"1015","line":38,"column":7,"nodeType":"966","messageId":"967","endLine":38,"endColumn":16},{"ruleId":"964","severity":1,"message":"1028","line":43,"column":7,"nodeType":"966","messageId":"967","endLine":43,"endColumn":15},{"ruleId":"964","severity":1,"message":"1043","line":61,"column":7,"nodeType":"966","messageId":"967","endLine":61,"endColumn":21},{"ruleId":"964","severity":1,"message":"1002","line":65,"column":10,"nodeType":"966","messageId":"967","endLine":65,"endColumn":16},{"ruleId":"964","severity":1,"message":"1044","line":106,"column":13,"nodeType":"966","messageId":"967","endLine":106,"endColumn":17},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"971","line":19,"column":10,"nodeType":"966","messageId":"967","endLine":19,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":19,"column":16,"nodeType":"966","messageId":"967","endLine":19,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":29,"column":9,"nodeType":"966","messageId":"967","endLine":29,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":29,"column":26,"nodeType":"966","messageId":"967","endLine":29,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":29,"column":34,"nodeType":"966","messageId":"967","endLine":29,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":32,"column":9,"nodeType":"966","messageId":"967","endLine":32,"endColumn":16},{"ruleId":"964","severity":1,"message":"1015","line":42,"column":7,"nodeType":"966","messageId":"967","endLine":42,"endColumn":16},{"ruleId":"964","severity":1,"message":"1002","line":51,"column":10,"nodeType":"966","messageId":"967","endLine":51,"endColumn":16},{"ruleId":"964","severity":1,"message":"1023","line":74,"column":7,"nodeType":"966","messageId":"967","endLine":74,"endColumn":11},{"ruleId":"964","severity":1,"message":"1024","line":92,"column":7,"nodeType":"966","messageId":"967","endLine":92,"endColumn":19},{"ruleId":"974","severity":1,"message":"996","line":137,"column":29,"nodeType":"976","messageId":"977","endLine":137,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":137,"column":53,"nodeType":"976","messageId":"977","endLine":137,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":184,"column":29,"nodeType":"976","messageId":"977","endLine":184,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":184,"column":53,"nodeType":"976","messageId":"977","endLine":184,"endColumn":55},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"1018","line":13,"column":3,"nodeType":"966","messageId":"967","endLine":13,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"990","line":20,"column":16,"nodeType":"966","messageId":"967","endLine":20,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":30,"column":9,"nodeType":"966","messageId":"967","endLine":30,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":30,"column":26,"nodeType":"966","messageId":"967","endLine":30,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":30,"column":34,"nodeType":"966","messageId":"967","endLine":30,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":31,"column":9,"nodeType":"966","messageId":"967","endLine":31,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":33,"column":9,"nodeType":"966","messageId":"967","endLine":33,"endColumn":16},{"ruleId":"964","severity":1,"message":"1002","line":52,"column":10,"nodeType":"966","messageId":"967","endLine":52,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":99,"column":29,"nodeType":"976","messageId":"977","endLine":99,"endColumn":31},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"990","line":18,"column":16,"nodeType":"966","messageId":"967","endLine":18,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":28,"column":9,"nodeType":"966","messageId":"967","endLine":28,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":28,"column":26,"nodeType":"966","messageId":"967","endLine":28,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":28,"column":34,"nodeType":"966","messageId":"967","endLine":28,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":29,"column":9,"nodeType":"966","messageId":"967","endLine":29,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":31,"column":9,"nodeType":"966","messageId":"967","endLine":31,"endColumn":16},{"ruleId":"964","severity":1,"message":"1015","line":41,"column":7,"nodeType":"966","messageId":"967","endLine":41,"endColumn":16},{"ruleId":"964","severity":1,"message":"1028","line":46,"column":7,"nodeType":"966","messageId":"967","endLine":46,"endColumn":15},{"ruleId":"964","severity":1,"message":"1002","line":68,"column":10,"nodeType":"966","messageId":"967","endLine":68,"endColumn":16},{"ruleId":"964","severity":1,"message":"1024","line":107,"column":7,"nodeType":"966","messageId":"967","endLine":107,"endColumn":19},{"ruleId":"974","severity":1,"message":"996","line":156,"column":34,"nodeType":"976","messageId":"977","endLine":156,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":156,"column":63,"nodeType":"976","messageId":"977","endLine":156,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":202,"column":29,"nodeType":"976","messageId":"977","endLine":202,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":202,"column":53,"nodeType":"976","messageId":"977","endLine":202,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":244,"column":29,"nodeType":"976","messageId":"977","endLine":244,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":244,"column":53,"nodeType":"976","messageId":"977","endLine":244,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":248,"column":40,"nodeType":"976","messageId":"977","endLine":248,"endColumn":42},{"ruleId":"974","severity":1,"message":"996","line":248,"column":69,"nodeType":"976","messageId":"977","endLine":248,"endColumn":71},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"1010","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":7},{"ruleId":"964","severity":1,"message":"983","line":10,"column":3,"nodeType":"966","messageId":"967","endLine":10,"endColumn":13},{"ruleId":"964","severity":1,"message":"1002","line":46,"column":10,"nodeType":"966","messageId":"967","endLine":46,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":93,"column":29,"nodeType":"976","messageId":"977","endLine":93,"endColumn":31},{"ruleId":"964","severity":1,"message":"1010","line":9,"column":3,"nodeType":"966","messageId":"967","endLine":9,"endColumn":7},{"ruleId":"964","severity":1,"message":"983","line":11,"column":3,"nodeType":"966","messageId":"967","endLine":11,"endColumn":13},{"ruleId":"964","severity":1,"message":"1002","line":47,"column":10,"nodeType":"966","messageId":"967","endLine":47,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":75,"column":29,"nodeType":"976","messageId":"977","endLine":75,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":110,"column":34,"nodeType":"976","messageId":"977","endLine":110,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":110,"column":63,"nodeType":"976","messageId":"977","endLine":110,"endColumn":65},{"ruleId":"964","severity":1,"message":"990","line":16,"column":16,"nodeType":"966","messageId":"967","endLine":16,"endColumn":26},{"ruleId":"964","severity":1,"message":"1023","line":70,"column":7,"nodeType":"966","messageId":"967","endLine":70,"endColumn":11},{"ruleId":"964","severity":1,"message":"1045","line":94,"column":7,"nodeType":"966","messageId":"967","endLine":94,"endColumn":15},{"ruleId":"974","severity":1,"message":"996","line":124,"column":15,"nodeType":"976","messageId":"977","endLine":124,"endColumn":17},{"ruleId":"964","severity":1,"message":"1046","line":131,"column":13,"nodeType":"966","messageId":"967","endLine":131,"endColumn":25},{"ruleId":"974","severity":1,"message":"996","line":146,"column":29,"nodeType":"976","messageId":"977","endLine":146,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":157,"column":47,"nodeType":"976","messageId":"977","endLine":157,"endColumn":49},{"ruleId":"974","severity":1,"message":"996","line":159,"column":51,"nodeType":"976","messageId":"977","endLine":159,"endColumn":53},{"ruleId":"974","severity":1,"message":"996","line":161,"column":51,"nodeType":"976","messageId":"977","endLine":161,"endColumn":53},{"ruleId":"974","severity":1,"message":"996","line":171,"column":42,"nodeType":"976","messageId":"977","endLine":171,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":180,"column":61,"nodeType":"976","messageId":"977","endLine":180,"endColumn":63},{"ruleId":"974","severity":1,"message":"996","line":227,"column":29,"nodeType":"976","messageId":"977","endLine":227,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":239,"column":47,"nodeType":"976","messageId":"977","endLine":239,"endColumn":49},{"ruleId":"974","severity":1,"message":"996","line":241,"column":51,"nodeType":"976","messageId":"977","endLine":241,"endColumn":53},{"ruleId":"974","severity":1,"message":"996","line":243,"column":51,"nodeType":"976","messageId":"977","endLine":243,"endColumn":53},{"ruleId":"974","severity":1,"message":"996","line":253,"column":42,"nodeType":"976","messageId":"977","endLine":253,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":259,"column":61,"nodeType":"976","messageId":"977","endLine":259,"endColumn":63},{"ruleId":"974","severity":1,"message":"996","line":301,"column":42,"nodeType":"976","messageId":"977","endLine":301,"endColumn":44},{"ruleId":"1047","severity":1,"message":"1048","line":307,"column":38,"nodeType":"1049","messageId":"1050","endLine":307,"endColumn":47},{"ruleId":"964","severity":1,"message":"1046","line":319,"column":50,"nodeType":"966","messageId":"967","endLine":319,"endColumn":62},{"ruleId":"964","severity":1,"message":"1010","line":7,"column":3,"nodeType":"966","messageId":"967","endLine":7,"endColumn":7},{"ruleId":"964","severity":1,"message":"983","line":9,"column":3,"nodeType":"966","messageId":"967","endLine":9,"endColumn":13},{"ruleId":"964","severity":1,"message":"981","line":11,"column":3,"nodeType":"966","messageId":"967","endLine":11,"endColumn":9},{"ruleId":"964","severity":1,"message":"1002","line":45,"column":10,"nodeType":"966","messageId":"967","endLine":45,"endColumn":16},{"ruleId":"964","severity":1,"message":"1024","line":116,"column":7,"nodeType":"966","messageId":"967","endLine":116,"endColumn":19},{"ruleId":"964","severity":1,"message":"1025","line":129,"column":10,"nodeType":"966","messageId":"967","endLine":129,"endColumn":28},{"ruleId":"974","severity":1,"message":"996","line":147,"column":34,"nodeType":"976","messageId":"977","endLine":147,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":147,"column":63,"nodeType":"976","messageId":"977","endLine":147,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":159,"column":47,"nodeType":"976","messageId":"977","endLine":159,"endColumn":49},{"ruleId":"974","severity":1,"message":"996","line":161,"column":51,"nodeType":"976","messageId":"977","endLine":161,"endColumn":53},{"ruleId":"974","severity":1,"message":"996","line":163,"column":51,"nodeType":"976","messageId":"977","endLine":163,"endColumn":53},{"ruleId":"974","severity":1,"message":"996","line":173,"column":42,"nodeType":"976","messageId":"977","endLine":173,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":228,"column":25,"nodeType":"976","messageId":"977","endLine":228,"endColumn":27},{"ruleId":"974","severity":1,"message":"996","line":258,"column":29,"nodeType":"976","messageId":"977","endLine":258,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":258,"column":53,"nodeType":"976","messageId":"977","endLine":258,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":262,"column":40,"nodeType":"976","messageId":"977","endLine":262,"endColumn":42},{"ruleId":"974","severity":1,"message":"996","line":262,"column":69,"nodeType":"976","messageId":"977","endLine":262,"endColumn":71},{"ruleId":"964","severity":1,"message":"1006","line":331,"column":13,"nodeType":"966","messageId":"967","endLine":331,"endColumn":20},{"ruleId":"964","severity":1,"message":"1017","line":9,"column":3,"nodeType":"966","messageId":"967","endLine":9,"endColumn":8},{"ruleId":"964","severity":1,"message":"971","line":15,"column":10,"nodeType":"966","messageId":"967","endLine":15,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":15,"column":16,"nodeType":"966","messageId":"967","endLine":15,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":25,"column":9,"nodeType":"966","messageId":"967","endLine":25,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":25,"column":26,"nodeType":"966","messageId":"967","endLine":25,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":25,"column":34,"nodeType":"966","messageId":"967","endLine":25,"endColumn":39},{"ruleId":"964","severity":1,"message":"1002","line":44,"column":10,"nodeType":"966","messageId":"967","endLine":44,"endColumn":16},{"ruleId":"964","severity":1,"message":"1023","line":67,"column":7,"nodeType":"966","messageId":"967","endLine":67,"endColumn":11},{"ruleId":"964","severity":1,"message":"1024","line":78,"column":7,"nodeType":"966","messageId":"967","endLine":78,"endColumn":19},{"ruleId":"974","severity":1,"message":"996","line":122,"column":29,"nodeType":"976","messageId":"977","endLine":122,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":122,"column":53,"nodeType":"976","messageId":"977","endLine":122,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":167,"column":29,"nodeType":"976","messageId":"977","endLine":167,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":167,"column":53,"nodeType":"976","messageId":"977","endLine":167,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":190,"column":34,"nodeType":"976","messageId":"977","endLine":190,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":190,"column":63,"nodeType":"976","messageId":"977","endLine":190,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":218,"column":29,"nodeType":"976","messageId":"977","endLine":218,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":218,"column":53,"nodeType":"976","messageId":"977","endLine":218,"endColumn":55},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"990","line":16,"column":16,"nodeType":"966","messageId":"967","endLine":16,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":26,"column":9,"nodeType":"966","messageId":"967","endLine":26,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":26,"column":26,"nodeType":"966","messageId":"967","endLine":26,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":26,"column":34,"nodeType":"966","messageId":"967","endLine":26,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":27,"column":9,"nodeType":"966","messageId":"967","endLine":27,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":29,"column":9,"nodeType":"966","messageId":"967","endLine":29,"endColumn":16},{"ruleId":"964","severity":1,"message":"1042","line":35,"column":7,"nodeType":"966","messageId":"967","endLine":35,"endColumn":17},{"ruleId":"964","severity":1,"message":"1015","line":39,"column":7,"nodeType":"966","messageId":"967","endLine":39,"endColumn":16},{"ruleId":"964","severity":1,"message":"1021","line":43,"column":9,"nodeType":"966","messageId":"967","endLine":43,"endColumn":15},{"ruleId":"964","severity":1,"message":"1002","line":67,"column":10,"nodeType":"966","messageId":"967","endLine":67,"endColumn":16},{"ruleId":"964","severity":1,"message":"1024","line":92,"column":7,"nodeType":"966","messageId":"967","endLine":92,"endColumn":19},{"ruleId":"964","severity":1,"message":"1025","line":105,"column":10,"nodeType":"966","messageId":"967","endLine":105,"endColumn":28},{"ruleId":"974","severity":1,"message":"996","line":121,"column":34,"nodeType":"976","messageId":"977","endLine":121,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":121,"column":63,"nodeType":"976","messageId":"977","endLine":121,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":172,"column":41,"nodeType":"976","messageId":"977","endLine":172,"endColumn":43},{"ruleId":"974","severity":1,"message":"996","line":173,"column":34,"nodeType":"976","messageId":"977","endLine":173,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":187,"column":29,"nodeType":"976","messageId":"977","endLine":187,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":187,"column":53,"nodeType":"976","messageId":"977","endLine":187,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":191,"column":40,"nodeType":"976","messageId":"977","endLine":191,"endColumn":42},{"ruleId":"974","severity":1,"message":"996","line":191,"column":69,"nodeType":"976","messageId":"977","endLine":191,"endColumn":71},{"ruleId":"964","severity":1,"message":"1051","line":20,"column":10,"nodeType":"966","messageId":"967","endLine":20,"endColumn":27},{"ruleId":"964","severity":1,"message":"1002","line":45,"column":10,"nodeType":"966","messageId":"967","endLine":45,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":67,"column":38,"nodeType":"976","messageId":"977","endLine":67,"endColumn":40},{"ruleId":"974","severity":1,"message":"996","line":126,"column":29,"nodeType":"976","messageId":"977","endLine":126,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":126,"column":53,"nodeType":"976","messageId":"977","endLine":126,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":169,"column":34,"nodeType":"976","messageId":"977","endLine":169,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":169,"column":63,"nodeType":"976","messageId":"977","endLine":169,"endColumn":65},{"ruleId":"964","severity":1,"message":"1052","line":3,"column":10,"nodeType":"966","messageId":"967","endLine":3,"endColumn":27},{"ruleId":"964","severity":1,"message":"1053","line":39,"column":5,"nodeType":"966","messageId":"967","endLine":39,"endColumn":20},{"ruleId":"964","severity":1,"message":"1054","line":43,"column":5,"nodeType":"966","messageId":"967","endLine":43,"endColumn":21},{"ruleId":"974","severity":1,"message":"996","line":45,"column":36,"nodeType":"976","messageId":"977","endLine":45,"endColumn":38},{"ruleId":"1007","severity":1,"message":"1008","line":131,"column":35,"nodeType":"1009","endLine":131,"endColumn":95},{"ruleId":"1007","severity":1,"message":"1008","line":140,"column":35,"nodeType":"1009","endLine":140,"endColumn":94},{"ruleId":"1007","severity":1,"message":"1008","line":154,"column":35,"nodeType":"1009","endLine":154,"endColumn":95},{"ruleId":"1007","severity":1,"message":"1008","line":163,"column":35,"nodeType":"1009","endLine":163,"endColumn":95},{"ruleId":"1007","severity":1,"message":"1008","line":226,"column":29,"nodeType":"1009","endLine":226,"endColumn":79},{"ruleId":"1007","severity":1,"message":"1008","line":237,"column":33,"nodeType":"1009","endLine":237,"endColumn":83},{"ruleId":"1007","severity":1,"message":"1008","line":247,"column":37,"nodeType":"1009","endLine":247,"endColumn":87},{"ruleId":"1007","severity":1,"message":"1008","line":257,"column":37,"nodeType":"1009","endLine":257,"endColumn":87},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"970","line":10,"column":3,"nodeType":"966","messageId":"967","endLine":10,"endColumn":10},{"ruleId":"964","severity":1,"message":"979","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":16,"column":3,"nodeType":"966","messageId":"967","endLine":16,"endColumn":8},{"ruleId":"964","severity":1,"message":"981","line":17,"column":3,"nodeType":"966","messageId":"967","endLine":17,"endColumn":9},{"ruleId":"964","severity":1,"message":"982","line":18,"column":3,"nodeType":"966","messageId":"967","endLine":18,"endColumn":6},{"ruleId":"964","severity":1,"message":"983","line":19,"column":3,"nodeType":"966","messageId":"967","endLine":19,"endColumn":13},{"ruleId":"964","severity":1,"message":"984","line":20,"column":3,"nodeType":"966","messageId":"967","endLine":20,"endColumn":9},{"ruleId":"964","severity":1,"message":"985","line":22,"column":3,"nodeType":"966","messageId":"967","endLine":22,"endColumn":7},{"ruleId":"964","severity":1,"message":"989","line":25,"column":10,"nodeType":"966","messageId":"967","endLine":25,"endColumn":22},{"ruleId":"964","severity":1,"message":"971","line":29,"column":10,"nodeType":"966","messageId":"967","endLine":29,"endColumn":14},{"ruleId":"964","severity":1,"message":"1055","line":32,"column":8,"nodeType":"966","messageId":"967","endLine":32,"endColumn":20},{"ruleId":"964","severity":1,"message":"991","line":38,"column":9,"nodeType":"966","messageId":"967","endLine":38,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":38,"column":26,"nodeType":"966","messageId":"967","endLine":38,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":38,"column":34,"nodeType":"966","messageId":"967","endLine":38,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":39,"column":9,"nodeType":"966","messageId":"967","endLine":39,"endColumn":16},{"ruleId":"1037","severity":1,"message":"1038","line":44,"column":3,"nodeType":"1039","messageId":"1040","endLine":46,"endColumn":4},{"ruleId":"974","severity":1,"message":"975","line":65,"column":40,"nodeType":"976","messageId":"977","endLine":65,"endColumn":42},{"ruleId":"974","severity":1,"message":"975","line":71,"column":34,"nodeType":"976","messageId":"977","endLine":71,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":71,"column":68,"nodeType":"976","messageId":"977","endLine":71,"endColumn":70},{"ruleId":"974","severity":1,"message":"975","line":75,"column":32,"nodeType":"976","messageId":"977","endLine":75,"endColumn":34},{"ruleId":"974","severity":1,"message":"996","line":76,"column":32,"nodeType":"976","messageId":"977","endLine":76,"endColumn":34},{"ruleId":"974","severity":1,"message":"975","line":81,"column":33,"nodeType":"976","messageId":"977","endLine":81,"endColumn":35},{"ruleId":"974","severity":1,"message":"975","line":82,"column":33,"nodeType":"976","messageId":"977","endLine":82,"endColumn":35},{"ruleId":"974","severity":1,"message":"996","line":119,"column":38,"nodeType":"976","messageId":"977","endLine":119,"endColumn":40},{"ruleId":"1012","severity":1,"message":"1013","line":122,"column":13,"nodeType":"966","messageId":"1014","endLine":122,"endColumn":27},{"ruleId":"974","severity":1,"message":"996","line":133,"column":36,"nodeType":"976","messageId":"977","endLine":133,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":134,"column":36,"nodeType":"976","messageId":"977","endLine":134,"endColumn":38},{"ruleId":"964","severity":1,"message":"1056","line":137,"column":7,"nodeType":"966","messageId":"967","endLine":137,"endColumn":18},{"ruleId":"974","severity":1,"message":"996","line":161,"column":29,"nodeType":"976","messageId":"977","endLine":161,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":180,"column":28,"nodeType":"976","messageId":"977","endLine":180,"endColumn":30},{"ruleId":"974","severity":1,"message":"996","line":180,"column":59,"nodeType":"976","messageId":"977","endLine":180,"endColumn":61},{"ruleId":"974","severity":1,"message":"996","line":221,"column":35,"nodeType":"976","messageId":"977","endLine":221,"endColumn":37},{"ruleId":"974","severity":1,"message":"996","line":221,"column":65,"nodeType":"976","messageId":"977","endLine":221,"endColumn":67},{"ruleId":"974","severity":1,"message":"996","line":244,"column":35,"nodeType":"976","messageId":"977","endLine":244,"endColumn":37},{"ruleId":"974","severity":1,"message":"996","line":244,"column":65,"nodeType":"976","messageId":"977","endLine":244,"endColumn":67},{"ruleId":"964","severity":1,"message":"973","line":13,"column":8,"nodeType":"966","messageId":"967","endLine":13,"endColumn":23},{"ruleId":"964","severity":1,"message":"1035","line":15,"column":8,"nodeType":"966","messageId":"967","endLine":15,"endColumn":15},{"ruleId":"974","severity":1,"message":"996","line":51,"column":29,"nodeType":"976","messageId":"977","endLine":51,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":51,"column":69,"nodeType":"976","messageId":"977","endLine":51,"endColumn":71},{"ruleId":"974","severity":1,"message":"996","line":66,"column":29,"nodeType":"976","messageId":"977","endLine":66,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":104,"column":29,"nodeType":"976","messageId":"977","endLine":104,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":159,"column":43,"nodeType":"976","messageId":"977","endLine":159,"endColumn":45},{"ruleId":"974","severity":1,"message":"996","line":173,"column":29,"nodeType":"976","messageId":"977","endLine":173,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":209,"column":29,"nodeType":"976","messageId":"977","endLine":209,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":307,"column":55,"nodeType":"976","messageId":"977","endLine":307,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":388,"column":55,"nodeType":"976","messageId":"977","endLine":388,"endColumn":57},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"980","line":16,"column":3,"nodeType":"966","messageId":"967","endLine":16,"endColumn":8},{"ruleId":"964","severity":1,"message":"981","line":17,"column":3,"nodeType":"966","messageId":"967","endLine":17,"endColumn":9},{"ruleId":"964","severity":1,"message":"982","line":18,"column":3,"nodeType":"966","messageId":"967","endLine":18,"endColumn":6},{"ruleId":"964","severity":1,"message":"983","line":19,"column":3,"nodeType":"966","messageId":"967","endLine":19,"endColumn":13},{"ruleId":"964","severity":1,"message":"984","line":20,"column":3,"nodeType":"966","messageId":"967","endLine":20,"endColumn":9},{"ruleId":"964","severity":1,"message":"1057","line":22,"column":3,"nodeType":"966","messageId":"967","endLine":22,"endColumn":14},{"ruleId":"964","severity":1,"message":"986","line":26,"column":3,"nodeType":"966","messageId":"967","endLine":26,"endColumn":17},{"ruleId":"964","severity":1,"message":"987","line":27,"column":3,"nodeType":"966","messageId":"967","endLine":27,"endColumn":17},{"ruleId":"964","severity":1,"message":"988","line":28,"column":3,"nodeType":"966","messageId":"967","endLine":28,"endColumn":17},{"ruleId":"964","severity":1,"message":"989","line":29,"column":3,"nodeType":"966","messageId":"967","endLine":29,"endColumn":15},{"ruleId":"964","severity":1,"message":"971","line":34,"column":10,"nodeType":"966","messageId":"967","endLine":34,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":34,"column":16,"nodeType":"966","messageId":"967","endLine":34,"endColumn":26},{"ruleId":"964","severity":1,"message":"1058","line":41,"column":8,"nodeType":"966","messageId":"967","endLine":41,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":48,"column":9,"nodeType":"966","messageId":"967","endLine":48,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":48,"column":26,"nodeType":"966","messageId":"967","endLine":48,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":48,"column":34,"nodeType":"966","messageId":"967","endLine":48,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":49,"column":9,"nodeType":"966","messageId":"967","endLine":49,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":96,"column":29,"nodeType":"976","messageId":"977","endLine":96,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":136,"column":29,"nodeType":"976","messageId":"977","endLine":136,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":176,"column":30,"nodeType":"976","messageId":"977","endLine":176,"endColumn":32},{"ruleId":"974","severity":1,"message":"996","line":198,"column":29,"nodeType":"976","messageId":"977","endLine":198,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":246,"column":29,"nodeType":"976","messageId":"977","endLine":246,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":261,"column":44,"nodeType":"976","messageId":"977","endLine":261,"endColumn":46},{"ruleId":"974","severity":1,"message":"996","line":279,"column":42,"nodeType":"976","messageId":"977","endLine":279,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":280,"column":42,"nodeType":"976","messageId":"977","endLine":280,"endColumn":44},{"ruleId":"964","severity":1,"message":"1059","line":339,"column":7,"nodeType":"966","messageId":"967","endLine":339,"endColumn":16},{"ruleId":"1007","severity":1,"message":"1008","line":390,"column":27,"nodeType":"1009","endLine":394,"endColumn":29},{"ruleId":"1007","severity":1,"message":"1008","line":417,"column":27,"nodeType":"1009","endLine":421,"endColumn":29},{"ruleId":"974","severity":1,"message":"996","line":467,"column":60,"nodeType":"976","messageId":"977","endLine":467,"endColumn":62},{"ruleId":"1007","severity":1,"message":"1008","line":484,"column":31,"nodeType":"1009","endLine":488,"endColumn":33},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"990","line":19,"column":16,"nodeType":"966","messageId":"967","endLine":19,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":33,"column":9,"nodeType":"966","messageId":"967","endLine":33,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":33,"column":26,"nodeType":"966","messageId":"967","endLine":33,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":33,"column":34,"nodeType":"966","messageId":"967","endLine":33,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":36,"column":9,"nodeType":"966","messageId":"967","endLine":36,"endColumn":16},{"ruleId":"964","severity":1,"message":"1015","line":46,"column":7,"nodeType":"966","messageId":"967","endLine":46,"endColumn":16},{"ruleId":"964","severity":1,"message":"1002","line":55,"column":10,"nodeType":"966","messageId":"967","endLine":55,"endColumn":16},{"ruleId":"964","severity":1,"message":"1023","line":90,"column":7,"nodeType":"966","messageId":"967","endLine":90,"endColumn":11},{"ruleId":"974","severity":1,"message":"996","line":171,"column":34,"nodeType":"976","messageId":"977","endLine":171,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":171,"column":63,"nodeType":"976","messageId":"977","endLine":171,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":234,"column":29,"nodeType":"976","messageId":"977","endLine":234,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":234,"column":53,"nodeType":"976","messageId":"977","endLine":234,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":292,"column":25,"nodeType":"976","messageId":"977","endLine":292,"endColumn":27},{"ruleId":"974","severity":1,"message":"996","line":333,"column":29,"nodeType":"976","messageId":"977","endLine":333,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":333,"column":53,"nodeType":"976","messageId":"977","endLine":333,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":337,"column":40,"nodeType":"976","messageId":"977","endLine":337,"endColumn":42},{"ruleId":"974","severity":1,"message":"996","line":337,"column":69,"nodeType":"976","messageId":"977","endLine":337,"endColumn":71},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"971","line":23,"column":10,"nodeType":"966","messageId":"967","endLine":23,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":23,"column":16,"nodeType":"966","messageId":"967","endLine":23,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":34,"column":9,"nodeType":"966","messageId":"967","endLine":34,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":34,"column":26,"nodeType":"966","messageId":"967","endLine":34,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":34,"column":34,"nodeType":"966","messageId":"967","endLine":34,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":35,"column":9,"nodeType":"966","messageId":"967","endLine":35,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":37,"column":9,"nodeType":"966","messageId":"967","endLine":37,"endColumn":16},{"ruleId":"974","severity":1,"message":"996","line":126,"column":34,"nodeType":"976","messageId":"977","endLine":126,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":126,"column":63,"nodeType":"976","messageId":"977","endLine":126,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":135,"column":35,"nodeType":"976","messageId":"977","endLine":135,"endColumn":37},{"ruleId":"974","severity":1,"message":"996","line":135,"column":59,"nodeType":"976","messageId":"977","endLine":135,"endColumn":61},{"ruleId":"974","severity":1,"message":"996","line":235,"column":29,"nodeType":"976","messageId":"977","endLine":235,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":259,"column":34,"nodeType":"976","messageId":"977","endLine":259,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":259,"column":63,"nodeType":"976","messageId":"977","endLine":259,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":278,"column":34,"nodeType":"976","messageId":"977","endLine":278,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":278,"column":63,"nodeType":"976","messageId":"977","endLine":278,"endColumn":65},{"ruleId":"964","severity":1,"message":"1060","line":297,"column":7,"nodeType":"966","messageId":"967","endLine":297,"endColumn":22},{"ruleId":"964","severity":1,"message":"1061","line":298,"column":7,"nodeType":"966","messageId":"967","endLine":298,"endColumn":31},{"ruleId":"964","severity":1,"message":"985","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":7},{"ruleId":"964","severity":1,"message":"1031","line":18,"column":3,"nodeType":"966","messageId":"967","endLine":18,"endColumn":19},{"ruleId":"964","severity":1,"message":"1032","line":19,"column":3,"nodeType":"966","messageId":"967","endLine":19,"endColumn":16},{"ruleId":"964","severity":1,"message":"1033","line":20,"column":3,"nodeType":"966","messageId":"967","endLine":20,"endColumn":22},{"ruleId":"974","severity":1,"message":"996","line":80,"column":29,"nodeType":"976","messageId":"977","endLine":80,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":87,"column":40,"nodeType":"976","messageId":"977","endLine":87,"endColumn":42},{"ruleId":"974","severity":1,"message":"996","line":87,"column":69,"nodeType":"976","messageId":"977","endLine":87,"endColumn":71},{"ruleId":"974","severity":1,"message":"996","line":123,"column":34,"nodeType":"976","messageId":"977","endLine":123,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":123,"column":63,"nodeType":"976","messageId":"977","endLine":123,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":141,"column":44,"nodeType":"976","messageId":"977","endLine":141,"endColumn":46},{"ruleId":"974","severity":1,"message":"996","line":143,"column":47,"nodeType":"976","messageId":"977","endLine":143,"endColumn":49},{"ruleId":"974","severity":1,"message":"996","line":164,"column":42,"nodeType":"976","messageId":"977","endLine":164,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":164,"column":67,"nodeType":"976","messageId":"977","endLine":164,"endColumn":69},{"ruleId":"974","severity":1,"message":"996","line":170,"column":55,"nodeType":"976","messageId":"977","endLine":170,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":202,"column":41,"nodeType":"976","messageId":"977","endLine":202,"endColumn":43},{"ruleId":"974","severity":1,"message":"996","line":202,"column":65,"nodeType":"976","messageId":"977","endLine":202,"endColumn":67},{"ruleId":"974","severity":1,"message":"996","line":207,"column":52,"nodeType":"976","messageId":"977","endLine":207,"endColumn":54},{"ruleId":"974","severity":1,"message":"996","line":241,"column":42,"nodeType":"976","messageId":"977","endLine":241,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":242,"column":42,"nodeType":"976","messageId":"977","endLine":242,"endColumn":44},{"ruleId":"964","severity":1,"message":"1006","line":267,"column":7,"nodeType":"966","messageId":"967","endLine":267,"endColumn":14},{"ruleId":"964","severity":1,"message":"1062","line":275,"column":11,"nodeType":"966","messageId":"967","endLine":275,"endColumn":23},{"ruleId":"1007","severity":1,"message":"1008","line":305,"column":25,"nodeType":"1009","endLine":305,"endColumn":75},{"ruleId":"974","severity":1,"message":"996","line":343,"column":57,"nodeType":"976","messageId":"977","endLine":343,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":344,"column":57,"nodeType":"976","messageId":"977","endLine":344,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":346,"column":57,"nodeType":"976","messageId":"977","endLine":346,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":352,"column":57,"nodeType":"976","messageId":"977","endLine":352,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":353,"column":57,"nodeType":"976","messageId":"977","endLine":353,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":355,"column":57,"nodeType":"976","messageId":"977","endLine":355,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":361,"column":57,"nodeType":"976","messageId":"977","endLine":361,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":362,"column":57,"nodeType":"976","messageId":"977","endLine":362,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":364,"column":57,"nodeType":"976","messageId":"977","endLine":364,"endColumn":59},{"ruleId":"1007","severity":1,"message":"1008","line":380,"column":35,"nodeType":"1009","endLine":383,"endColumn":37},{"ruleId":"1007","severity":1,"message":"1008","line":553,"column":31,"nodeType":"1009","endLine":553,"endColumn":52},{"ruleId":"974","severity":1,"message":"996","line":568,"column":56,"nodeType":"976","messageId":"977","endLine":568,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":570,"column":56,"nodeType":"976","messageId":"977","endLine":570,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":571,"column":56,"nodeType":"976","messageId":"977","endLine":571,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":573,"column":56,"nodeType":"976","messageId":"977","endLine":573,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":607,"column":52,"nodeType":"976","messageId":"977","endLine":607,"endColumn":54},{"ruleId":"974","severity":1,"message":"996","line":627,"column":65,"nodeType":"976","messageId":"977","endLine":627,"endColumn":67},{"ruleId":"974","severity":1,"message":"996","line":629,"column":65,"nodeType":"976","messageId":"977","endLine":629,"endColumn":67},{"ruleId":"974","severity":1,"message":"996","line":638,"column":60,"nodeType":"976","messageId":"977","endLine":638,"endColumn":62},{"ruleId":"1007","severity":1,"message":"1008","line":801,"column":33,"nodeType":"1009","endLine":801,"endColumn":64},{"ruleId":"1047","severity":1,"message":"1063","line":819,"column":31,"nodeType":"1064","messageId":"1065","endLine":819,"endColumn":38},{"ruleId":"1007","severity":1,"message":"1008","line":827,"column":33,"nodeType":"1009","endLine":827,"endColumn":64},{"ruleId":"964","severity":1,"message":"1031","line":18,"column":10,"nodeType":"966","messageId":"967","endLine":18,"endColumn":26},{"ruleId":"964","severity":1,"message":"1032","line":18,"column":28,"nodeType":"966","messageId":"967","endLine":18,"endColumn":41},{"ruleId":"1037","severity":1,"message":"1038","line":36,"column":3,"nodeType":"1039","messageId":"1040","endLine":38,"endColumn":4},{"ruleId":"964","severity":1,"message":"1056","line":69,"column":9,"nodeType":"966","messageId":"967","endLine":69,"endColumn":20},{"ruleId":"964","severity":1,"message":"1066","line":70,"column":9,"nodeType":"966","messageId":"967","endLine":70,"endColumn":17},{"ruleId":"974","severity":1,"message":"996","line":73,"column":38,"nodeType":"976","messageId":"977","endLine":73,"endColumn":40},{"ruleId":"974","severity":1,"message":"996","line":81,"column":31,"nodeType":"976","messageId":"977","endLine":81,"endColumn":33},{"ruleId":"974","severity":1,"message":"996","line":81,"column":55,"nodeType":"976","messageId":"977","endLine":81,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":100,"column":36,"nodeType":"976","messageId":"977","endLine":100,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":101,"column":36,"nodeType":"976","messageId":"977","endLine":101,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":130,"column":29,"nodeType":"976","messageId":"977","endLine":130,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":156,"column":35,"nodeType":"976","messageId":"977","endLine":156,"endColumn":37},{"ruleId":"974","severity":1,"message":"996","line":156,"column":59,"nodeType":"976","messageId":"977","endLine":156,"endColumn":61},{"ruleId":"974","severity":1,"message":"996","line":201,"column":29,"nodeType":"976","messageId":"977","endLine":201,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":201,"column":53,"nodeType":"976","messageId":"977","endLine":201,"endColumn":55},{"ruleId":"964","severity":1,"message":"1006","line":218,"column":7,"nodeType":"966","messageId":"967","endLine":218,"endColumn":14},{"ruleId":"964","severity":1,"message":"1028","line":225,"column":11,"nodeType":"966","messageId":"967","endLine":225,"endColumn":19},{"ruleId":"964","severity":1,"message":"1043","line":229,"column":11,"nodeType":"966","messageId":"967","endLine":229,"endColumn":25},{"ruleId":"1007","severity":1,"message":"1008","line":246,"column":21,"nodeType":"1009","endLine":246,"endColumn":44},{"ruleId":"974","severity":1,"message":"996","line":302,"column":61,"nodeType":"976","messageId":"977","endLine":302,"endColumn":63},{"ruleId":"1007","severity":1,"message":"1008","line":323,"column":37,"nodeType":"1009","endLine":323,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":569,"column":53,"nodeType":"976","messageId":"977","endLine":569,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":593,"column":66,"nodeType":"976","messageId":"977","endLine":593,"endColumn":68},{"ruleId":"974","severity":1,"message":"996","line":595,"column":66,"nodeType":"976","messageId":"977","endLine":595,"endColumn":68},{"ruleId":"1067","severity":1,"message":"1068","line":622,"column":31,"nodeType":"1069","endLine":622,"endColumn":42},{"ruleId":"974","severity":1,"message":"996","line":645,"column":59,"nodeType":"976","messageId":"977","endLine":645,"endColumn":61},{"ruleId":"974","severity":1,"message":"996","line":650,"column":59,"nodeType":"976","messageId":"977","endLine":650,"endColumn":61},{"ruleId":"1007","severity":1,"message":"1008","line":665,"column":37,"nodeType":"1009","endLine":665,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":673,"column":54,"nodeType":"976","messageId":"977","endLine":673,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":674,"column":54,"nodeType":"976","messageId":"977","endLine":674,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":675,"column":54,"nodeType":"976","messageId":"977","endLine":675,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":681,"column":54,"nodeType":"976","messageId":"977","endLine":681,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":682,"column":54,"nodeType":"976","messageId":"977","endLine":682,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":683,"column":54,"nodeType":"976","messageId":"977","endLine":683,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":689,"column":54,"nodeType":"976","messageId":"977","endLine":689,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":690,"column":54,"nodeType":"976","messageId":"977","endLine":690,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":691,"column":54,"nodeType":"976","messageId":"977","endLine":691,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":720,"column":53,"nodeType":"976","messageId":"977","endLine":720,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":721,"column":53,"nodeType":"976","messageId":"977","endLine":721,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":722,"column":53,"nodeType":"976","messageId":"977","endLine":722,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":724,"column":53,"nodeType":"976","messageId":"977","endLine":724,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":770,"column":53,"nodeType":"976","messageId":"977","endLine":770,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":794,"column":66,"nodeType":"976","messageId":"977","endLine":794,"endColumn":68},{"ruleId":"974","severity":1,"message":"996","line":796,"column":66,"nodeType":"976","messageId":"977","endLine":796,"endColumn":68},{"ruleId":"964","severity":1,"message":"1016","line":1,"column":28,"nodeType":"966","messageId":"967","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"1017","line":12,"column":3,"nodeType":"966","messageId":"967","endLine":12,"endColumn":8},{"ruleId":"964","severity":1,"message":"1018","line":13,"column":3,"nodeType":"966","messageId":"967","endLine":13,"endColumn":8},{"ruleId":"964","severity":1,"message":"980","line":14,"column":3,"nodeType":"966","messageId":"967","endLine":14,"endColumn":8},{"ruleId":"964","severity":1,"message":"971","line":23,"column":10,"nodeType":"966","messageId":"967","endLine":23,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":23,"column":16,"nodeType":"966","messageId":"967","endLine":23,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":34,"column":9,"nodeType":"966","messageId":"967","endLine":34,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":34,"column":26,"nodeType":"966","messageId":"967","endLine":34,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":34,"column":34,"nodeType":"966","messageId":"967","endLine":34,"endColumn":39},{"ruleId":"964","severity":1,"message":"1019","line":35,"column":9,"nodeType":"966","messageId":"967","endLine":35,"endColumn":20},{"ruleId":"964","severity":1,"message":"994","line":37,"column":9,"nodeType":"966","messageId":"967","endLine":37,"endColumn":16},{"ruleId":"964","severity":1,"message":"1070","line":47,"column":7,"nodeType":"966","messageId":"967","endLine":47,"endColumn":17},{"ruleId":"964","severity":1,"message":"1022","line":62,"column":7,"nodeType":"966","messageId":"967","endLine":62,"endColumn":14},{"ruleId":"974","severity":1,"message":"996","line":135,"column":34,"nodeType":"976","messageId":"977","endLine":135,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":135,"column":63,"nodeType":"976","messageId":"977","endLine":135,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":144,"column":35,"nodeType":"976","messageId":"977","endLine":144,"endColumn":37},{"ruleId":"974","severity":1,"message":"996","line":144,"column":59,"nodeType":"976","messageId":"977","endLine":144,"endColumn":61},{"ruleId":"974","severity":1,"message":"996","line":259,"column":29,"nodeType":"976","messageId":"977","endLine":259,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":283,"column":34,"nodeType":"976","messageId":"977","endLine":283,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":283,"column":63,"nodeType":"976","messageId":"977","endLine":283,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":302,"column":34,"nodeType":"976","messageId":"977","endLine":302,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":302,"column":63,"nodeType":"976","messageId":"977","endLine":302,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":322,"column":34,"nodeType":"976","messageId":"977","endLine":322,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":322,"column":63,"nodeType":"976","messageId":"977","endLine":322,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":428,"column":29,"nodeType":"976","messageId":"977","endLine":428,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":428,"column":53,"nodeType":"976","messageId":"977","endLine":428,"endColumn":55},{"ruleId":"964","severity":1,"message":"1060","line":464,"column":7,"nodeType":"966","messageId":"967","endLine":464,"endColumn":22},{"ruleId":"964","severity":1,"message":"1061","line":465,"column":7,"nodeType":"966","messageId":"967","endLine":465,"endColumn":31},{"ruleId":"964","severity":1,"message":"1023","line":473,"column":9,"nodeType":"966","messageId":"967","endLine":473,"endColumn":13},{"ruleId":"974","severity":1,"message":"996","line":473,"column":56,"nodeType":"976","messageId":"977","endLine":473,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":628,"column":48,"nodeType":"976","messageId":"977","endLine":628,"endColumn":50},{"ruleId":"974","severity":1,"message":"996","line":1104,"column":44,"nodeType":"976","messageId":"977","endLine":1104,"endColumn":46},{"ruleId":"974","severity":1,"message":"975","line":1109,"column":53,"nodeType":"976","messageId":"977","endLine":1109,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":1202,"column":43,"nodeType":"976","messageId":"977","endLine":1202,"endColumn":45},{"ruleId":"974","severity":1,"message":"996","line":1207,"column":42,"nodeType":"976","messageId":"977","endLine":1207,"endColumn":44},{"ruleId":"964","severity":1,"message":"969","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":11},{"ruleId":"964","severity":1,"message":"984","line":20,"column":3,"nodeType":"966","messageId":"967","endLine":20,"endColumn":9},{"ruleId":"964","severity":1,"message":"985","line":22,"column":3,"nodeType":"966","messageId":"967","endLine":22,"endColumn":7},{"ruleId":"964","severity":1,"message":"1057","line":23,"column":3,"nodeType":"966","messageId":"967","endLine":23,"endColumn":14},{"ruleId":"964","severity":1,"message":"986","line":27,"column":3,"nodeType":"966","messageId":"967","endLine":27,"endColumn":17},{"ruleId":"964","severity":1,"message":"987","line":28,"column":3,"nodeType":"966","messageId":"967","endLine":28,"endColumn":17},{"ruleId":"964","severity":1,"message":"988","line":29,"column":3,"nodeType":"966","messageId":"967","endLine":29,"endColumn":17},{"ruleId":"964","severity":1,"message":"971","line":37,"column":10,"nodeType":"966","messageId":"967","endLine":37,"endColumn":14},{"ruleId":"964","severity":1,"message":"990","line":37,"column":16,"nodeType":"966","messageId":"967","endLine":37,"endColumn":26},{"ruleId":"964","severity":1,"message":"1058","line":45,"column":8,"nodeType":"966","messageId":"967","endLine":45,"endColumn":26},{"ruleId":"964","severity":1,"message":"991","line":55,"column":9,"nodeType":"966","messageId":"967","endLine":55,"endColumn":15},{"ruleId":"964","severity":1,"message":"992","line":55,"column":26,"nodeType":"966","messageId":"967","endLine":55,"endColumn":32},{"ruleId":"964","severity":1,"message":"993","line":55,"column":34,"nodeType":"966","messageId":"967","endLine":55,"endColumn":39},{"ruleId":"964","severity":1,"message":"994","line":56,"column":9,"nodeType":"966","messageId":"967","endLine":56,"endColumn":16},{"ruleId":"964","severity":1,"message":"1071","line":62,"column":7,"nodeType":"966","messageId":"967","endLine":62,"endColumn":24},{"ruleId":"964","severity":1,"message":"1072","line":66,"column":7,"nodeType":"966","messageId":"967","endLine":66,"endColumn":17},{"ruleId":"964","severity":1,"message":"1073","line":94,"column":10,"nodeType":"966","messageId":"967","endLine":94,"endColumn":31},{"ruleId":"964","severity":1,"message":"1074","line":97,"column":10,"nodeType":"966","messageId":"967","endLine":97,"endColumn":31},{"ruleId":"964","severity":1,"message":"1075","line":100,"column":10,"nodeType":"966","messageId":"967","endLine":100,"endColumn":31},{"ruleId":"1076","severity":1,"message":"1077","line":158,"column":7,"nodeType":"1078","messageId":"977","endLine":158,"endColumn":12},{"ruleId":"974","severity":1,"message":"996","line":413,"column":36,"nodeType":"976","messageId":"977","endLine":413,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":414,"column":36,"nodeType":"976","messageId":"977","endLine":414,"endColumn":38},{"ruleId":"964","severity":1,"message":"1054","line":424,"column":5,"nodeType":"966","messageId":"967","endLine":424,"endColumn":21},{"ruleId":"974","severity":1,"message":"996","line":455,"column":38,"nodeType":"976","messageId":"977","endLine":455,"endColumn":40},{"ruleId":"1012","severity":1,"message":"1013","line":458,"column":13,"nodeType":"966","messageId":"1014","endLine":458,"endColumn":27},{"ruleId":"974","severity":1,"message":"996","line":469,"column":36,"nodeType":"976","messageId":"977","endLine":469,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":470,"column":36,"nodeType":"976","messageId":"977","endLine":470,"endColumn":38},{"ruleId":"1047","severity":1,"message":"1063","line":520,"column":52,"nodeType":"1079","messageId":"1080","endLine":520,"endColumn":54},{"ruleId":"1047","severity":1,"message":"1063","line":537,"column":31,"nodeType":"1079","messageId":"1080","endLine":537,"endColumn":33},{"ruleId":"974","severity":1,"message":"996","line":544,"column":29,"nodeType":"976","messageId":"977","endLine":544,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":576,"column":36,"nodeType":"976","messageId":"977","endLine":576,"endColumn":38},{"ruleId":"974","severity":1,"message":"996","line":576,"column":65,"nodeType":"976","messageId":"977","endLine":576,"endColumn":67},{"ruleId":"974","severity":1,"message":"996","line":577,"column":54,"nodeType":"976","messageId":"977","endLine":577,"endColumn":56},{"ruleId":"1047","severity":1,"message":"1063","line":587,"column":50,"nodeType":"1079","messageId":"1080","endLine":587,"endColumn":52},{"ruleId":"974","severity":1,"message":"996","line":607,"column":57,"nodeType":"976","messageId":"977","endLine":607,"endColumn":59},{"ruleId":"974","severity":1,"message":"996","line":637,"column":54,"nodeType":"976","messageId":"977","endLine":637,"endColumn":56},{"ruleId":"974","severity":1,"message":"996","line":646,"column":48,"nodeType":"976","messageId":"977","endLine":646,"endColumn":50},{"ruleId":"974","severity":1,"message":"996","line":648,"column":55,"nodeType":"976","messageId":"977","endLine":648,"endColumn":57},{"ruleId":"974","severity":1,"message":"996","line":649,"column":56,"nodeType":"976","messageId":"977","endLine":649,"endColumn":58},{"ruleId":"974","severity":1,"message":"996","line":668,"column":34,"nodeType":"976","messageId":"977","endLine":668,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":668,"column":63,"nodeType":"976","messageId":"977","endLine":668,"endColumn":65},{"ruleId":"974","severity":1,"message":"996","line":684,"column":34,"nodeType":"976","messageId":"977","endLine":684,"endColumn":36},{"ruleId":"974","severity":1,"message":"996","line":684,"column":63,"nodeType":"976","messageId":"977","endLine":684,"endColumn":65},{"ruleId":"964","severity":1,"message":"1081","line":715,"column":7,"nodeType":"966","messageId":"967","endLine":715,"endColumn":11},{"ruleId":"964","severity":1,"message":"1082","line":717,"column":7,"nodeType":"966","messageId":"967","endLine":717,"endColumn":10},{"ruleId":"964","severity":1,"message":"1083","line":735,"column":11,"nodeType":"966","messageId":"967","endLine":735,"endColumn":24},{"ruleId":"964","severity":1,"message":"1046","line":743,"column":13,"nodeType":"966","messageId":"967","endLine":743,"endColumn":25},{"ruleId":"964","severity":1,"message":"1084","line":744,"column":13,"nodeType":"966","messageId":"967","endLine":744,"endColumn":23},{"ruleId":"964","severity":1,"message":"1085","line":750,"column":7,"nodeType":"966","messageId":"967","endLine":750,"endColumn":15},{"ruleId":"964","severity":1,"message":"1086","line":754,"column":11,"nodeType":"966","messageId":"967","endLine":754,"endColumn":23},{"ruleId":"1007","severity":1,"message":"1008","line":934,"column":31,"nodeType":"1009","endLine":938,"endColumn":33},{"ruleId":"1007","severity":1,"message":"1008","line":957,"column":31,"nodeType":"1009","endLine":961,"endColumn":33},{"ruleId":"974","severity":1,"message":"996","line":1012,"column":57,"nodeType":"976","messageId":"977","endLine":1012,"endColumn":59},{"ruleId":"1007","severity":1,"message":"1008","line":1046,"column":31,"nodeType":"1009","endLine":1050,"endColumn":33},{"ruleId":"1007","severity":1,"message":"1008","line":1056,"column":33,"nodeType":"1009","endLine":1062,"endColumn":35},{"ruleId":"1007","severity":1,"message":"1008","line":1064,"column":33,"nodeType":"1009","endLine":1070,"endColumn":35},{"ruleId":"1007","severity":1,"message":"1008","line":1160,"column":31,"nodeType":"1009","endLine":1164,"endColumn":33},{"ruleId":"1067","severity":1,"message":"1068","line":1199,"column":37,"nodeType":"1069","endLine":1199,"endColumn":50},{"ruleId":"1067","severity":1,"message":"1068","line":1213,"column":39,"nodeType":"1069","endLine":1213,"endColumn":70},{"ruleId":"1007","severity":1,"message":"1008","line":1223,"column":31,"nodeType":"1009","endLine":1227,"endColumn":33},{"ruleId":"974","severity":1,"message":"996","line":1467,"column":50,"nodeType":"976","messageId":"977","endLine":1467,"endColumn":52},{"ruleId":"1007","severity":1,"message":"1008","line":1498,"column":31,"nodeType":"1009","endLine":1502,"endColumn":33},{"ruleId":"974","severity":1,"message":"996","line":1533,"column":52,"nodeType":"976","messageId":"977","endLine":1533,"endColumn":54},{"ruleId":"974","severity":1,"message":"996","line":1552,"column":52,"nodeType":"976","messageId":"977","endLine":1552,"endColumn":54},{"ruleId":"1007","severity":1,"message":"1008","line":1556,"column":35,"nodeType":"1009","endLine":1560,"endColumn":37},{"ruleId":"1007","severity":1,"message":"1008","line":1593,"column":35,"nodeType":"1009","endLine":1597,"endColumn":37},{"ruleId":"964","severity":1,"message":"972","line":8,"column":15,"nodeType":"966","messageId":"967","endLine":8,"endColumn":18},{"ruleId":"974","severity":1,"message":"996","line":20,"column":39,"nodeType":"976","messageId":"977","endLine":20,"endColumn":41},{"ruleId":"964","severity":1,"message":"970","line":3,"column":42,"nodeType":"966","messageId":"967","endLine":3,"endColumn":49},{"ruleId":"974","severity":1,"message":"996","line":52,"column":29,"nodeType":"976","messageId":"977","endLine":52,"endColumn":31},{"ruleId":"974","severity":1,"message":"996","line":52,"column":53,"nodeType":"976","messageId":"977","endLine":52,"endColumn":55},{"ruleId":"974","severity":1,"message":"996","line":88,"column":36,"nodeType":"976","messageId":"977","endLine":88,"endColumn":38},{"ruleId":"964","severity":1,"message":"970","line":8,"column":3,"nodeType":"966","messageId":"967","endLine":8,"endColumn":10},{"ruleId":"964","severity":1,"message":"1087","line":17,"column":7,"nodeType":"966","messageId":"967","endLine":17,"endColumn":12},{"ruleId":"1037","severity":1,"message":"1038","line":22,"column":3,"nodeType":"1039","messageId":"1040","endLine":24,"endColumn":4},{"ruleId":"974","severity":1,"message":"996","line":85,"column":38,"nodeType":"976","messageId":"977","endLine":85,"endColumn":40},{"ruleId":"974","severity":1,"message":"996","line":92,"column":34,"nodeType":"976","messageId":"977","endLine":92,"endColumn":36},{"ruleId":"964","severity":1,"message":"1088","line":105,"column":7,"nodeType":"966","messageId":"967","endLine":105,"endColumn":20},{"ruleId":"964","severity":1,"message":"1089","line":108,"column":11,"nodeType":"966","messageId":"967","endLine":108,"endColumn":24},{"ruleId":"974","severity":1,"message":"996","line":7,"column":16,"nodeType":"976","messageId":"977","endLine":7,"endColumn":18},{"ruleId":"964","severity":1,"message":"1090","line":3,"column":17,"nodeType":"966","messageId":"967","endLine":3,"endColumn":24},{"ruleId":"964","severity":1,"message":"1091","line":5,"column":10,"nodeType":"966","messageId":"967","endLine":5,"endColumn":22},{"ruleId":"964","severity":1,"message":"1092","line":21,"column":7,"nodeType":"966","messageId":"967","endLine":21,"endColumn":23},{"ruleId":"1093","severity":1,"message":"1094","line":19,"column":1,"nodeType":"1095","endLine":21,"endColumn":3},"no-native-reassign",["1096"],"no-negated-in-lhs",["1097"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Link' is defined but never used.","'Col' is defined but never used.","'LoginFormFooter' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Modal' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","'Tag' is defined but never used.","'DatePicker' is defined but never used.","'Upload' is defined but never used.","'Card' is defined but never used.","'UploadOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'ReloadOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'withRouter' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'Step' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'WithoutAuthFooter' is defined but never used.","'GoBack' is defined but never used.","'cookies' is assigned a value but never used.","'cookName' is assigned a value but never used.","'valueName' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Menu' is defined but never used.","'Steps' is defined but never used.","no-redeclare","'LoggedInUserId' is already defined.","redeclared","'regLayout' is assigned a value but never used.","'useState' is defined but never used.","'Space' is defined but never used.","'Table' is defined but never used.","'RangePicker' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'Option' is assigned a value but never used.","'columns' is assigned a value but never used.","'data' is assigned a value but never used.","'rowSelection' is assigned a value but never used.","'handleSelectChange' is defined but never used.","'Row' is defined but never used.","'Base' is defined but never used.","'onFinish' is assigned a value but never used.","'message' is defined but never used.","'Carousel' is defined but never used.","'DownloadOutlined' is defined but never used.","'CheckOutlined' is defined but never used.","'RightCircleOutlined' is defined but never used.","'Redirect' is defined but never used.","'Cookies' is defined but never used.","'visible' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'layout' is assigned a value but never used.","'compLayout' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","'size' is assigned a value but never used.","'tagsData' is assigned a value but never used.","'selectedTags' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'ArrowLeftOutlined' is defined but never used.","'PicCenterOutlined' is defined but never used.","'finalCookieName' is assigned a value but never used.","'finalCookieValue' is assigned a value but never used.","'nationalLogo' is defined but never used.","'apiEndpoint' is assigned a value but never used.","'InputNumber' is defined but never used.","'MobileNumericInput' is defined but never used.","'mobile_no' is assigned a value but never used.","'selectedOptions' is assigned a value but never used.","'selected_maintenance_fee' is assigned a value but never used.","'contentStyle' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'formData' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'fullLayout' is assigned a value but never used.","'DaumPostcodeStyle' is assigned a value but never used.","'optionData' is assigned a value but never used.","'handleStructureChange' is defined but never used.","'handleDirectionChange' is defined but never used.","'onChangeAvailableDate' is defined but never used.","no-dupe-keys","Duplicate key 'file3'.","ObjectExpression","ArrowFunctionExpression","expectedInside","'type' is assigned a value but never used.","'pet' is assigned a value but never used.","'margin24Style' is assigned a value but never used.","'optionTags' is assigned a value but never used.","'fileList' is assigned a value but never used.","'uploadButton' is assigned a value but never used.","'axios' is assigned a value but never used.","'drawerVisible' is assigned a value but never used.","'homepageStyle' is assigned a value but never used.","'Tooltip' is defined but never used.","'formatNumber' is defined but never used.","'maskMobileNumber' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]